cscope 15 $HOME/uxfs_rh8               0000344711
	@cmds/fsdb.c

5 
	~<sys/ty≥s.h
>

6 
	~<sys/°©.h
>

7 
	~<uni°d.h
>

8 
	~<°dio.h
>

9 
	~<f˙é.h
>

10 
	~<time.h
>

11 
	~<löux/fs.h
>

12 
	~"../kîn/ux_fs.h
"

14 
ux_su≥rblock
 
	gsb
;

15 
	gdevfd
;

18 
	$¥öt_öode
(
öum
, 
ux_öode
 *
uù
)

20 
buf
[
UX_BSIZE
];

21 
ux_dúít
 *
dúít
;

22 
i
, 
x
;

24 
	`¥ötf
("\nöodênumbî %d\n", 
öum
);

25 
	`¥ötf
(" i_modê = %x\n", 
uù
->
i_mode
);

26 
	`¥ötf
(" i_∆ök = %d\n", 
uù
->
i_∆ök
);

27 
	`¥ötf
(" i_atime = %s",

28 
	`˘ime
((
time_t
 *)&
uù
->
i_©ime
));

29 
	`¥ötf
(" i_mtime = %s",

30 
	`˘ime
((
time_t
 *)&
uù
->
i_mtime
));

31 
	`¥ötf
(" i_ctime = %s",

32 
	`˘ime
((
time_t
 *)&
uù
->
i_˘ime
));

33 
	`¥ötf
(" i_uid = %d\n", 
uù
->
i_uid
);

34 
	`¥ötf
(" i_gid = %d\n", 
uù
->
i_gid
);

35 
	`¥ötf
(" i_sizê = %d\n", 
uù
->
i_size
);

36 
	`¥ötf
(" i_block† = %d", 
uù
->
i_blocks
);

37 
i
=0 ; i<
UX_DIRECT_BLOCKS
; i++) {

38 i‡(
i
 % 4 == 0) {

39 
	`¥ötf
("\n");

41 
	`¥ötf
(" i_addr[%2d] = %3d ",

42 
i
, 
uù
->
i_addr
[i]);

49 i‡(
uù
->
i_mode
 & 
S_IFDIR
) {

50 
	`¥ötf
("\n\n DirectoryÉntries:\n");

51 
i
=0 ; i < 
uù
->
i_blocks
 ; i++) {

52 
	`l£ek
(
devfd
, 
uù
->
i_addr
[
i
] * 
UX_BSIZE
,

53 
SEEK_SET
);

54 
	`ªad
(
devfd
, 
buf
, 
UX_BSIZE
);

55 
dúít
 = (
ux_dúít
 *)
buf
;

56 
x
 = 0 ; x < 
UX_DIRECT_BLOCKS
 ; x++) {

57 i‡(
dúít
->
d_öo
 != 0) {

58 
	`¥ötf
(" inum[%2d],"

60 
dúít
->
d_öo
,

61 
dúít
->
d_«me
);

63 
dúít
++;

66 
	`¥ötf
("\n");

68 
	`¥ötf
("\n\n");

70 
	}
}

72 
	$ªad_öode
(
öo_t
 
öum
, 
ux_öode
 *
uù
)

74 i‡(
sb
.
s_öode
[
öum
] =
UX_INODE_FREE
) {

77 
	`l£ek
(
devfd
, (
UX_INODE_BLOCK
 * 
UX_BSIZE
) +

78 (
öum
 * 
UX_BSIZE
), 
SEEK_SET
);

79 
	`ªad
(
devfd
, (*)
uù
, (
ux_öode
));

81 
	}
}

83 
	$maö
(
¨gc
, **
¨gv
)

85 
ux_öode
 
öode
;

86 
buf
[512];

87 
comm™d
[512];

88 
off_t
 
n£˘‹s
;

89 
îr‹
, 
i
, 
blk
;

90 
öo_t
 
öum
;

92 
devfd
 = 
	`›í
(
¨gv
[1], 
O_RDWR
);

93 i‡(
devfd
 < 0) {

94 
	`Ârötf
(
°dîr
, "uxmkfs: FailedÅo open device\n");

95 
	`exô
(1);

102 
	`ªad
(
devfd
, (*)&
sb
, (
ux_su≥rblock
));

103 i‡(
sb
.
s_magic
 !
UX_MAGIC
) {

104 
	`¥ötf
("This isÇotá uxfs filesystem\n");

105 
	`exô
(1);

109 
	`¥ötf
("uxfsdb > ") ;

110 
	`fÊush
(
°dout
);

111 
	`sˇnf
("%s", 
comm™d
);

112 i‡(
comm™d
[0] == 'q') {

113 
	`exô
(0);

115 i‡(
comm™d
[0] == 'i') {

116 
öum
 = 
	`©oi
(&
comm™d
[1]);

117 
	`ªad_öode
(
öum
, &
öode
);

118 
	`¥öt_öode
(
öum
, &
öode
);

120 i‡(
comm™d
[0] == 's') {

121 
	`¥ötf
("\nSuperblock contents:\n");

122 
	`¥ötf
(" s_magi¯ = 0x%x\n", 
sb
.
s_magic
);

123 
	`¥ötf
(" s_mod = %s\n",

124 (
sb
.
s_mod
 =
UX_FSCLEAN
) ?

126 
	`¥ötf
(" s_ni‰ì = %d\n", 
sb
.
s_ni‰ì
);

127 
	`¥ötf
(" s_nb‰ì = %d\n\n", 
sb
.
s_nb‰ì
);

130 
	}
}

	@cmds/mkfs.c

5 
	~<sys/ty≥s.h
>

6 
	~<uni°d.h
>

7 
	~<°dio.h
>

8 
	~<f˙é.h
>

9 
	~<time.h
>

10 
	~<löux/fs.h
>

11 
	~<sys/°©.h
>

12 
	~"../kîn/ux_fs.h
"

14 
	$maö
(
¨gc
, **
¨gv
)

16 
ux_dúít
 
dú
;

17 
ux_su≥rblock
 
sb
;

18 
ux_öode
 
öode
;

19 
time_t
 
tm
;

20 
off_t
 
n£˘‹s
 = 
UX_MAXBLOCKS
;

21 
devfd
, 
îr‹
, 
i
;

22 
m≠_blks
;

23 
block
[
UX_BSIZE
];

25 i‡(
¨gc
 != 2) {

26 
	`Ârötf
(
°dîr
, "uxmkfs: NeedÅo specify device\n");

27 
	`exô
(1);

29 
devfd
 = 
	`›í
(
¨gv
[1], 
O_WRONLY
);

30 i‡(
devfd
 < 0) {

31 
	`Ârötf
(
°dîr
, "uxmkfs: FailedÅo open device\n");

32 
	`exô
(1);

34 
îr‹
 = 
	`l£ek
(
devfd
, (
off_t
)(
n£˘‹s
 * 512), 
SEEK_SET
);

35 i‡(
îr‹
 == -1) {

36 
	`Ârötf
(
°dîr
, "uxmkfs: Cannot create filesystem"

38 
	`exô
(1);

40 
	`l£ek
(
devfd
, 0, 
SEEK_SET
);

47 
sb
.
s_magic
 = 
UX_MAGIC
;

48 
sb
.
s_mod
 = 
UX_FSCLEAN
;

49 
sb
.
s_ni‰ì
 = 
UX_MAXFILES
 - 4;

50 
sb
.
s_nb‰ì
 = 
UX_MAXBLOCKS
 - 2;

58 
sb
.
s_öode
[0] = 
UX_INODE_INUSE
;

59 
sb
.
s_öode
[1] = 
UX_INODE_INUSE
;

60 
sb
.
s_öode
[2] = 
UX_INODE_INUSE
;

61 
sb
.
s_öode
[3] = 
UX_INODE_INUSE
;

67 
i
 = 4 ; i < 
UX_MAXFILES
 ; i++) {

68 
sb
.
s_öode
[
i
] = 
UX_INODE_FREE
;

76 
sb
.
s_block
[0] = 
UX_BLOCK_INUSE
;

77 
sb
.
s_block
[1] = 
UX_BLOCK_INUSE
;

83 
i
 = 2 ; i < 
UX_MAXBLOCKS
 ; i++) {

84 
sb
.
s_block
[
i
] = 
UX_BLOCK_FREE
;

87 
	`wrôe
(
devfd
, (*)&
sb
, (
ux_su≥rblock
));

94 
	`time
(&
tm
);

95 
	`mem£t
((*)&
öode
, 0, (
ux_öode
));

96 
öode
.
i_mode
 = 
S_IFDIR
 | 0755;

97 
öode
.
i_∆ök
 = 3;

98 
öode
.
i_©ime
 = 
tm
;

99 
öode
.
i_mtime
 = 
tm
;

100 
öode
.
i_˘ime
 = 
tm
;

101 
öode
.
i_uid
 = 0;

102 
öode
.
i_gid
 = 0;

103 
öode
.
i_size
 = 
UX_BSIZE
;

104 
öode
.
i_blocks
 = 1;

105 
öode
.
i_addr
[0] = 
UX_FIRST_DATA_BLOCK
;

107 
	`l£ek
(
devfd
, 
UX_INODE_BLOCK
 * 
UX_BSIZE
 + 1024, 
SEEK_SET
);

108 
	`wrôe
(
devfd
, (*)&
öode
, (
ux_su≥rblock
));

110 
	`mem£t
((*)&
öode
, 0 , (
ux_öode
));

111 
öode
.
i_mode
 = 
S_IFDIR
 | 0755;

112 
öode
.
i_∆ök
 = 2;

113 
öode
.
i_©ime
 = 
tm
;

114 
öode
.
i_mtime
 = 
tm
;

115 
öode
.
i_˘ime
 = 
tm
;

116 
öode
.
i_uid
 = 0;

117 
öode
.
i_gid
 = 0;

118 
öode
.
i_size
 = 
UX_BSIZE
;

119 
öode
.
i_blocks
 = 1;

120 
öode
.
i_addr
[0] = 
UX_FIRST_DATA_BLOCK
 + 1;

122 
	`l£ek
(
devfd
, 
UX_INODE_BLOCK
 * 
UX_BSIZE
 + 1536, 
SEEK_SET
);

123 
	`wrôe
(
devfd
, (*)&
öode
, (
ux_su≥rblock
));

129 
	`l£ek
(
devfd
, 
UX_FIRST_DATA_BLOCK
 * 
UX_BSIZE
, 
SEEK_SET
);

130 
	`mem£t
((*)&
block
, 0, 
UX_BSIZE
);

131 
	`wrôe
(
devfd
, 
block
, 
UX_BSIZE
);

132 
	`l£ek
(
devfd
, 
UX_FIRST_DATA_BLOCK
 * 
UX_BSIZE
, 
SEEK_SET
);

133 
dú
.
d_öo
 = 2;

134 
	`°r˝y
(
dú
.
d_«me
, ".");

135 
	`wrôe
(
devfd
, (*)&
dú
, (
ux_dúít
));

136 
dú
.
d_öo
 = 2;

137 
	`°r˝y
(
dú
.
d_«me
, "..");

138 
	`wrôe
(
devfd
, (*)&
dú
, (
ux_dúít
));

139 
dú
.
d_öo
 = 3;

140 
	`°r˝y
(
dú
.
d_«me
, "lost+found");

141 
	`wrôe
(
devfd
, (*)&
dú
, (
ux_dúít
));

147 
	`l£ek
(
devfd
, 
UX_FIRST_DATA_BLOCK
 * 
UX_BSIZE
 + UX_BSIZE,

148 
SEEK_SET
);

149 
	`mem£t
((*)&
block
, 0, 
UX_BSIZE
);

150 
	`wrôe
(
devfd
, 
block
, 
UX_BSIZE
);

151 
	`l£ek
(
devfd
, 
UX_FIRST_DATA_BLOCK
 * 
UX_BSIZE
 + UX_BSIZE,

152 
SEEK_SET
);

153 
dú
.
d_öo
 = 2;

154 
	`°r˝y
(
dú
.
d_«me
, ".");

155 
	`wrôe
(
devfd
, (*)&
dú
, (
ux_dúít
));

156 
dú
.
d_öo
 = 2;

157 
	`°r˝y
(
dú
.
d_«me
, "..");

158 
	`wrôe
(
devfd
, (*)&
dú
, (
ux_dúít
));

159 
	}
}

	@kern/ux_alloc.c

5 
	~<löux/moduÀ.h
>

6 
	~<löux/mm.h
>

7 
	~<löux/¶ab.h
>

8 
	~<löux/öô.h
>

9 
	~<löux/locks.h
>

10 
	~<löux/smp_lock.h
>

11 
	~<asm/uac˚ss.h
>

12 
	~"ux_fs.h
"

19 
öo_t


20 
	$ux_üŒoc
(
su≥r_block
 *
sb
)

22 
ux_fs
 *
fs
 = (ux_f†*)
sb
->
s_¥iv©e
;

23 
ux_su≥rblock
 *
usb
 = 
fs
->
u_sb
;

24 
i
;

26 i‡(
usb
->
s_ni‰ì
 == 0) {

27 
	`¥ötk
("uxfs: Out of inodes\n");

30 
i
 = 3 ; i < 
UX_MAXFILES
 ; i++) {

31 i‡(
usb
->
s_öode
[
i
] =
UX_INODE_FREE
) {

32 
usb
->
s_öode
[
i
] = 
UX_INODE_INUSE
;

33 
usb
->
s_ni‰ì
--;

34 
sb
->
s_dút
 = 1;

35  
i
;

38 
	`¥ötk
("uxfs: ux_ialloc - We shouldÇeverÑeach here\n");

40 
	}
}

47 
__u32


48 
	$ux_block_Æloc
(
su≥r_block
 *
sb
)

50 
ux_fs
 *
fs
 = (ux_f†*)
sb
->
s_¥iv©e
;

51 
ux_su≥rblock
 *
usb
 = 
fs
->
u_sb
;

52 
i
;

54 i‡(
usb
->
s_nb‰ì
 == 0) {

55 
	`¥ötk
("uxfs: Out of space\n");

64 
i
 = 1 ; i < 
UX_MAXBLOCKS
 ; i++) {

65 i‡(
usb
->
s_block
[
i
] =
UX_BLOCK_FREE
) {

66 
usb
->
s_block
[
i
] = 
UX_BLOCK_INUSE
;

67 
usb
->
s_nb‰ì
--;

68 
sb
->
s_dút
 = 1;

69  
UX_FIRST_DATA_BLOCK
 + 
i
;

72 
	`¥ötk
("uxfs: ux_block_alloc - "

75 
	}
}

	@kern/ux_dir.c

5 
	~<löux/sched.h
>

6 
	~<löux/°rög.h
>

7 
	~<löux/locks.h
>

9 
	~"ux_fs.h
"

16 
	$ux_dúadd
(
öode
 *
dù
, c⁄° *
«me
, 
öum
)

18 
ux_öode
 *
uù
 = (ux_inode *)

19 &
dù
->
i_¥iv©e
;

20 
buf„r_hód
 *
bh
;

21 
su≥r_block
 *
sb
 = 
dù
->
i_sb
;

22 
ux_dúít
 *
dúít
;

23 
__u32
 
blk
 = 0;

24 
i
, 
pos
;

26 
blk
=0 ; blk < 
uù
->
i_blocks
 ; blk++) {

27 
bh
 = 
	`sb_bªad
(
sb
, 
uù
->
i_addr
[
blk
]);

28 
dúít
 = (
ux_dúít
 *)
bh
->
b_d©a
;

29 
i
=0 ; i < 
UX_DIRS_PER_BLOCK
 ; i++) {

30 i‡(
dúít
->
d_öo
 != 0) {

31 
dúít
++;

34 
dúít
->
d_öo
 = 
öum
;

35 
	`°r˝y
(
dúít
->
d_«me
, 
«me
);

36 
	`m¨k_buf„r_dúty
(
bh
);

37 
	`m¨k_öode_dúty
(
dù
);

38 
	`bªl£
(
bh
);

42 
	`bªl£
(
bh
);

50 i‡(
uù
->
i_blocks
 < 
UX_DIRECT_BLOCKS
) {

51 
pos
 = 
uù
->
i_blocks
;

52 
blk
 = 
	`ux_block_Æloc
(
sb
);

53 
uù
->
i_blocks
++;

54 
uù
->
i_size
 +
UX_BSIZE
;

55 
dù
->
i_size
 +
UX_BSIZE
;

56 
dù
->
i_blocks
++;

57 
uù
->
i_addr
[
pos
] = 
blk
;

58 
bh
 = 
	`sb_bªad
(
sb
, 
blk
);

59 
	`mem£t
(
bh
->
b_d©a
, 0, 
UX_BSIZE
);

60 
	`m¨k_öode_dúty
(
dù
);

61 
dúít
 = (
ux_dúít
 *)
bh
->
b_d©a
;

62 
dúít
->
d_öo
 = 
öum
;

63 
	`°r˝y
(
dúít
->
d_«me
, 
«me
);

64 
	`m¨k_buf„r_dúty
(
bh
);

65 
	`bªl£
(
bh
);

69 
	}
}

76 
	$ux_dúdñ
(
öode
 *
dù
, *
«me
)

78 
ux_öode
 *
uù
 = (ux_inode *)

79 &
dù
->
i_¥iv©e
;

80 
buf„r_hód
 *
bh
;

81 
su≥r_block
 *
sb
 = 
dù
->
i_sb
;

82 
ux_dúít
 *
dúít
;

83 
__u32
 
blk
 = 0;

84 
i
;

86 
blk
 < 
uù
->
i_blocks
) {

87 
bh
 = 
	`sb_bªad
(
sb
, 
uù
->
i_addr
[
blk
]);

88 
blk
++;

89 
dúít
 = (
ux_dúít
 *)
bh
->
b_d©a
;

90 
i
=0 ; i < 
UX_DIRS_PER_BLOCK
 ; i++) {

91 i‡(
	`°rcmp
(
dúít
->
d_«me
, 
«me
) != 0) {

92 
dúít
++;

95 
dúít
->
d_öo
 = 0;

96 
dúít
->
d_«me
[0] = '\0';

97 
	`m¨k_buf„r_dúty
(
bh
);

98 
dù
->
i_∆ök
--;

99 
	`m¨k_öode_dúty
(
dù
);

103 
	`bªl£
(
bh
);

106 
	}
}

109 
	$ux_ªaddú
(
fûe
 *
fûp
, *
dúít
, 
fûldú_t
 
fûldú
)

111 
pos
;

112 
öode
 *öodê
fûp
->
f_díåy
->
d_öode
;

113 
ux_öode
 *
uù
 = (ux_inode *)

114 &
öode
->
i_¥iv©e
;

115 
ux_dúít
 *
udú
;

116 
buf„r_hód
 *
bh
;

117 
__u32
 
blk
;

119 
°¨t_agaö
:

120 
pos
 = 
fûp
->
f_pos
;

121 i‡(
pos
 >
öode
->
i_size
) {

124 
blk
 = (
pos
 + 1Ë/ 
UX_BSIZE
;

125 
blk
 = 
uù
->
i_addr
[blk];

126 
bh
 = 
	`sb_bªad
(
öode
->
i_sb
, 
blk
);

127 
udú
 = (
ux_dúít
 *)(
bh
->
b_d©a
 + 
pos
 % 
UX_BSIZE
);

133 i‡(
udú
->
d_öo
 == 0) {

134 
fûp
->
f_pos
 +(
ux_dúít
);

135 
	`bªl£
(
bh
);

136 
°¨t_agaö
;

138 
	`fûldú
(
dúít
, 
udú
->
d_«me
,

139 (
udú
->
d_«me
), 
pos
,

140 
udú
->
d_öo
, 
DT_UNKNOWN
);

142 
fûp
->
f_pos
 +(
ux_dúít
);

143 
	`bªl£
(
bh
);

145 
	}
}

147 
fûe_›î©i⁄s
 
	gux_dú_›î©i⁄s
 = {

148 
ªad
: 
gíîic_ªad_dú
,

149 
ªaddú
: 
ux_ªaddú
,

150 
fsync
: 
fûe_fsync
,

160 
	$ux_¸óã
(
öode
 *
dù
, 
díåy
 *díåy, 
mode
)

162 
ux_öode
 *
nù
;

163 
su≥r_block
 *
sb
 = 
dù
->
i_sb
;

164 
öode
 *inode;

165 
öo_t
 
öum
 = 0;

173 
öum
 = 
	`ux_föd_íåy
(
dù
, (*)
díåy
->
d_«me
.
«me
);

174 i‡(
öum
) {

175  -
EEXIST
;

177 
öode
 = 
	`√w_öode
(
sb
);

178 i‡(!
öode
) {

179  -
ENOSPC
;

181 
öum
 = 
	`ux_üŒoc
(
sb
);

182 i‡(!
öum
) {

183 
	`ùut
(
öode
);

184  -
ENOSPC
;

186 
	`ux_dúadd
(
dù
, (*)
díåy
->
d_«me
.
«me
, 
öum
);

192 
dù
->
i_∆ök
++;

193 
öode
->
i_uid
 = 
cuºít
->
fsuid
;

194 
öode
->
i_gid
 = (
dù
->
i_mode
 & 
S_ISGID
) ?

195 
dù
->
i_gid
 : 
cuºít
->
fsgid
;

196 
öode
->
i_mtime
 = inode->
i_©ime
 =

197 
öode
->
i_˘ime
 = 
CURRENT_TIME
;

198 
öode
->
i_blocks
 = inode->
i_blksize
 = 0;

199 
öode
->
i_›
 = &
ux_fûe_ö›s
;

200 
öode
->
i_f›
 = &
ux_fûe_›î©i⁄s
;

201 
öode
->
i_m≠pög
->
a_›s
 = &
ux_a›s
;

202 
öode
->
i_mode
 = 
mode
;

203 
öode
->
i_∆ök
 = 1;

204 
öode
->
i_öo
 = 
öum
;

205 
	`ö£π_öode_hash
(
öode
);

207 
nù
 = (
ux_öode
 *)&
öode
->
i_¥iv©e
;

208 
nù
->
i_mode
 = 
mode
;

209 
nù
->
i_∆ök
 = 1;

210 
nù
->
i_©ime
 =Çù->
i_˘ime
 =Çù->
i_mtime
 = 
CURRENT_TIME
;

211 
nù
->
i_uid
 = 
öode
->
i_gid
;

212 
nù
->
i_gid
 = 
öode
->i_gid;

213 
nù
->
i_size
 = 0;

214 
nù
->
i_blocks
 = 0;

215 
	`mem£t
(
nù
->
i_addr
, 0, 
UX_DIRECT_BLOCKS
);

217 
	`d_ö°™tüã
(
díåy
, 
öode
);

218 
	`m¨k_öode_dúty
(
dù
);

219 
	`m¨k_öode_dúty
(
öode
);

221 
	}
}

229 
	$ux_mkdú
(
öode
 *
dù
, 
díåy
 *díåy, 
mode
)

231 
ux_öode
 *
nù
;

232 
buf„r_hód
 *
bh
;

233 
su≥r_block
 *
sb
 = 
dù
->
i_sb
;

234 
ux_dúít
 *
dúít
;

235 
öode
 *inode;

236 
öo_t
 
öum
 = 0;

237 
blk
;

244 
öum
 = 
	`ux_föd_íåy
(
dù
, (*)
díåy
->
d_«me
.
«me
);

245 i‡(
öum
) {

246  -
EEXIST
;

248 
öode
 = 
	`√w_öode
(
sb
);

249 i‡(!
öode
) {

250  -
ENOSPC
;

252 
öum
 = 
	`ux_üŒoc
(
sb
);

253 i‡(!
öum
) {

254 
	`ùut
(
öode
);

255  -
ENOSPC
;

257 
	`ux_dúadd
(
dù
, (*)
díåy
->
d_«me
.
«me
, 
öum
);

259 
öode
->
i_uid
 = 
cuºít
->
fsuid
;

260 
öode
->
i_gid
 = (
dù
->
i_mode
 & 
S_ISGID
) ?

261 
dù
->
i_gid
 : 
cuºít
->
fsgid
;

262 
öode
->
i_mtime
 = inode->
i_©ime
 =

263 
öode
->
i_˘ime
 = 
CURRENT_TIME
;

264 
öode
->
i_blocks
 = 1;

265 
öode
->
i_blksize
 = 
UX_BSIZE
;

266 
öode
->
i_›
 = &
ux_dú_ö›s
;

267 
öode
->
i_f›
 = &
ux_dú_›î©i⁄s
;

268 
öode
->
i_m≠pög
->
a_›s
 = &
ux_a›s
;

269 
öode
->
i_mode
 = 
mode
 | 
S_IFDIR
;

270 
öode
->
i_öo
 = 
öum
;

271 
öode
->
i_size
 = 
UX_BSIZE
;

272 
öode
->
i_∆ök
 = 2;

274 
nù
 = (
ux_öode
 *)&
öode
->
i_¥iv©e
;

275 
nù
->
i_mode
 = 
mode
 | 
S_IFDIR
;

276 
nù
->
i_∆ök
 = 2;

277 
nù
->
i_©ime
 =Çù->
i_˘ime


278 
nù
->
i_mtime
 = 
CURRENT_TIME
;

279 
nù
->
i_uid
 = 
cuºít
->
fsuid
;

280 
nù
->
i_gid
 = (
dù
->
i_mode
 & 
S_ISGID
) ?

281 
dù
->
i_gid
 : 
cuºít
->
fsgid
;

282 
nù
->
i_size
 = 512;

283 
nù
->
i_blocks
 = 1;

284 
	`mem£t
(
nù
->
i_addr
, 0, 16);

286 
blk
 = 
	`ux_block_Æloc
(
sb
);

287 
nù
->
i_addr
[0] = 
blk
;

288 
bh
 = 
	`sb_bªad
(
sb
, 
blk
);

289 
	`mem£t
(
bh
->
b_d©a
, 0, 
UX_BSIZE
);

290 
dúít
 = (
ux_dúít
 *)
bh
->
b_d©a
;

291 
dúít
->
d_öo
 = 
öum
;

292 
	`°r˝y
(
dúít
->
d_«me
, ".");

293 
dúít
++;

294 
dúít
->
d_öo
 = 
öode
->
i_öo
;

295 
	`°r˝y
(
dúít
->
d_«me
, "..");

297 
	`m¨k_buf„r_dúty
(
bh
);

298 
	`bªl£
(
bh
);

299 
	`ö£π_öode_hash
(
öode
);

300 
	`d_ö°™tüã
(
díåy
, 
öode
);

301 
	`m¨k_öode_dúty
(
öode
);

307 
dù
->
i_∆ök
++;

308 
	`m¨k_öode_dúty
(
dù
);

310 
	}
}

317 
	$ux_rmdú
(
öode
 *
dù
, 
díåy
 *dentry)

319 
su≥r_block
 *
sb
 = 
dù
->
i_sb
;

320 
ux_fs
 *
fs
 = (ux_fs *)

321 
sb
->
s_¥iv©e
;

322 
ux_su≥rblock
 *
usb
 = 
fs
->
u_sb
;

323 
öode
 *öodê
díåy
->
d_öode
;

324 
ux_öode
 *
uù
 = (ux_inode *)

325 &
öode
->
i_¥iv©e
;

326 
öum
, 
i
;

328 i‡(
öode
->
i_∆ök
 > 2) {

329  -
ENOTEMPTY
;

336 
öum
 = 
	`ux_föd_íåy
(
dù
, (*)
díåy
->
d_«me
.
«me
);

337 i‡(!
öum
) {

338  -
ENOTDIR
;

340 
	`ux_dúdñ
(
dù
, (*)
díåy
->
d_«me
.
«me
);

346 
i
=0 ; i<
UX_DIRECT_BLOCKS
 ; i++) {

347 i‡(
uù
->
i_addr
[
i
] != 0) {

348 
usb
->
s_block
[
uù
->
i_addr
[
i
]]

349 
UX_BLOCK_FREE
;

350 
usb
->
s_nb‰ì
++;

351 
usb
->
s_ni‰ì
++;

359 
usb
->
s_öode
[
dù
->
i_öo
] = 
UX_INODE_FREE
;

360 
usb
->
s_ni‰ì
++;

362 
	}
}

369 
díåy
 *

370 
	$ux_lookup
(
öode
 *
dù
, 
díåy
 *dentry)

372 
ux_öode
 *
uù
 = (ux_inode *)

373 &
dù
->
i_¥iv©e
;

374 
ux_dúít
 
dúít
;

375 
öode
 *öodê
NULL
;

376 
öum
;

378 i‡(
díåy
->
d_«me
.
Àn
 > 
UX_NAMELEN
) {

379  
	`ERR_PTR
(-
ENAMETOOLONG
);

382 
öum
 = 
	`ux_föd_íåy
(
dù
, (*)
díåy
->
d_«me
.
«me
);

383 i‡(
öum
) {

384 
öode
 = 
	`igë
(
dù
->
i_sb
, 
öum
);

385 i‡(!
öode
) {

386  
	`ERR_PTR
(-
EACCES
);

389 
	`d_add
(
díåy
, 
öode
);

390  
NULL
;

391 
	}
}

398 
	$ux_lök
(
díåy
 *
ﬁd
, 
öode
 *
dù
, díåy *
√w
)

400 
öode
 *öodê
ﬁd
->
d_öode
;

401 
îr‹
;

407 
îr‹
 = 
	`ux_dúadd
(
dù
, 
√w
->
d_«me
.
«me
, 
öode
->
i_öo
);

413 
öode
->
i_∆ök
++;

414 
	`m¨k_öode_dúty
(
öode
);

415 
	`©omic_öc
(&
öode
->
i_cou¡
);

416 
	`d_ö°™tüã
(
√w
, 
öode
);

418 
	}
}

425 
	$ux_u∆ök
(
öode
 *
dù
, 
díåy
 *dentry)

427 
öode
 *öodê
díåy
->
d_öode
;

429 
	`ux_dúdñ
(
dù
, (*)
díåy
->
d_«me
.
«me
);

430 
öode
->
i_∆ök
--;

431 
	`m¨k_öode_dúty
(
öode
);

433 
	}
}

435 
öode_›î©i⁄s
 
	gux_dú_ö›s
 = {

436 
¸óã
: 
ux_¸óã
,

437 
lookup
: 
ux_lookup
,

438 
mkdú
: 
ux_mkdú
,

439 
rmdú
: 
ux_rmdú
,

440 
lök
: 
ux_lök
,

441 
u∆ök
: 
ux_u∆ök
,

	@kern/ux_file.c

5 
	~<löux/fs.h
>

6 
	~<löux/locks.h
>

7 
	~<löux/smp_lock.h
>

8 
	~"ux_fs.h
"

10 
fûe_›î©i⁄s
 
	gux_fûe_›î©i⁄s
 = {

11 
Œ£ek
: 
gíîic_fûe_Œ£ek
,

12 
ªad
: 
gíîic_fûe_ªad
,

13 
wrôe
: 
gíîic_fûe_wrôe
,

14 
mm≠
: 
gíîic_fûe_mm≠
,

18 
	$ux_gë_block
(
öode
 *öode, 
block
,

19 
buf„r_hód
 *
bh_ªsu…
, 
¸óã
)

21 
su≥r_block
 *
sb
 = 
öode
->
i_sb
;

22 
ux_fs
 *
fs
 = (ux_fs *)

23 
sb
->
s_¥iv©e
;

24 
ux_öode
 *
uù
 = (ux_inode *)

25 &
öode
->
i_¥iv©e
;

26 
__u32
 
blk
;

32 i‡(
block
 >
UX_DIRECT_BLOCKS
) {

33  -
EFBIG
;

40 i‡(
¸óã
) {

41 
blk
 = 
	`ux_block_Æloc
(
sb
);

42 i‡(
blk
 == 0) {

43 
	`¥ötk
("uxfs: ux_get_block - "

45  -
ENOSPC
;

47 
uù
->
i_addr
[
block
] = 
blk
;

48 
uù
->
i_blocks
++;

49 
uù
->
i_size
 = 
öode
->i_size;

50 
	`m¨k_öode_dúty
(
öode
);

52 
bh_ªsu…
->
b_dev
 = 
öode
->
i_dev
;

53 
bh_ªsu…
->
b_blockƒ
 = 
uù
->
i_addr
[
block
];

54 
bh_ªsu…
->
b_°©e
 |(1UL << 
BH_M≠≥d
);

56 
	}
}

59 
	$ux_wrôïage
(
∑ge
 *page)

61  
	`block_wrôe_fuŒ_∑ge
(
∑ge
, 
ux_gë_block
);

62 
	}
}

65 
	$ux_ªad∑ge
(
fûe
 *fûe, 
∑ge
 *page)

67  
	`block_ªad_fuŒ_∑ge
(
∑ge
, 
ux_gë_block
);

68 
	}
}

71 
	$ux_¥ï¨e_wrôe
(
fûe
 *fûe, 
∑ge
 *page,

72 
‰om
, 
to
)

74  
	`block_¥ï¨e_wrôe
(
∑ge
, 
‰om
, 
to
, 
ux_gë_block
);

75 
	}
}

78 
	$ux_bm≠
(
addªss_•a˚
 *
m≠pög
, 
block
)

80  
	`gíîic_block_bm≠
(
m≠pög
, 
block
, 
ux_gë_block
);

81 
	}
}

83 
addªss_•a˚_›î©i⁄s
 
	gux_a›s
 = {

84 
ªad∑ge
: 
ux_ªad∑ge
,

85 
wrôïage
: 
ux_wrôïage
,

86 
sync_∑ge
: 
block_sync_∑ge
,

87 
¥ï¨e_wrôe
: 
ux_¥ï¨e_wrôe
,

88 
commô_wrôe
: 
gíîic_commô_wrôe
,

89 
bm≠
: 
ux_bm≠
,

92 
öode_›î©i⁄s
 
	gux_fûe_ö›s
 = {

93 
lök
: 
ux_lök
,

94 
u∆ök
: 
ux_u∆ök
,

	@kern/ux_fs.h

5 
addªss_•a˚_›î©i⁄s
 
ux_a›s
;

6 
öode_›î©i⁄s
 
ux_fûe_ö›s
;

7 
öode_›î©i⁄s
 
ux_dú_ö›s
;

8 
fûe_›î©i⁄s
 
ux_dú_›î©i⁄s
;

9 
fûe_›î©i⁄s
 
ux_fûe_›î©i⁄s
;

12 
	#UX_NAMELEN
 28

	)

13 
	#UX_DIRS_PER_BLOCK
 16

	)

14 
	#UX_DIRECT_BLOCKS
 16

	)

15 
	#UX_MAXFILES
 32

16 
	#UX_MAXBLOCKS
 470

	)

17 
	#UX_FIRST_DATA_BLOCK
 50

	)

18 
	#UX_BSIZE
 512

	)

19 
	#UX_BSIZE_BITS
 9

	)

20 
	#UX_MAGIC
 0x58494e55

	)

21 
	#UX_INODE_BLOCK
 8

	)

22 
	#UX_ROOT_INO
 2

	)

24 
	#s_¥iv©e
 
u
.
gíîic_sbp


	)

25 
	#i_¥iv©e
 
u
.
gíîic_ù


	)

32 
	sux_su≥rblock
 {

33 
__u32
 
	ms_magic
;

34 
__u32
 
	ms_mod
;

35 
__u32
 
	ms_ni‰ì
;

36 
__u32
 
	ms_öode
[
UX_MAXFILES
];

37 
__u32
 
	ms_nb‰ì
;

38 
__u32
 
	ms_block
[
UX_MAXBLOCKS
];

45 
	sux_öode
 {

46 
__u32
 
	mi_mode
;

47 
__u32
 
	mi_∆ök
;

48 
__u32
 
	mi_©ime
;

49 
__u32
 
	mi_mtime
;

50 
__u32
 
	mi_˘ime
;

51 
__s32
 
	mi_uid
;

52 
__s32
 
	mi_gid
;

53 
__u32
 
	mi_size
;

54 
__u32
 
	mi_blocks
;

55 
__u32
 
	mi_addr
[
UX_DIRECT_BLOCKS
];

62 
	#UX_INODE_FREE
 0

	)

63 
	#UX_INODE_INUSE
 1

	)

64 
	#UX_BLOCK_FREE
 0

	)

65 
	#UX_BLOCK_INUSE
 1

	)

71 
	#UX_FSCLEAN
 0

	)

72 
	#UX_FSDIRTY
 1

	)

78 
	sux_dúít
 {

79 
__u32
 
	md_öo
;

80 
	md_«me
[
UX_NAMELEN
];

87 
	sux_fs
 {

88 
ux_su≥rblock
 *
	mu_sb
;

89 
buf„r_hód
 *
	mu_sbh
;

92 #ifde‡
__KERNEL__


94 
öo_t
 
ux_üŒoc
(
su≥r_block
 *);

95 
ux_föd_íåy
(
öode
 *, *);

96 
__u32
 
ux_block_Æloc
(
su≥r_block
 *);

97 
__u32
 
ux_block_Æloc
(
su≥r_block
 *);

98 
ux_u∆ök
(
öode
 *, 
díåy
 *);

99 
ux_lök
(
díåy
 *, 
öode
 *,

100 
díåy
 *);

	@kern/ux_inode.c

5 
	~<löux/moduÀ.h
>

6 
	~<löux/mm.h
>

7 
	~<löux/¶ab.h
>

8 
	~<löux/öô.h
>

9 
	~<löux/locks.h
>

10 
	~<löux/smp_lock.h
>

11 
	~<asm/uac˚ss.h
>

12 
	~"ux_fs.h
"

14 
MODULE_AUTHOR
("Steve Pate <spate@veritas.com>");

15 
MODULE_DESCRIPTION
("AÖrimitive filesystem for Linux");

16 
MODULE_LICENSE
("GPL");

24 
	$ux_föd_íåy
(
öode
 *
dù
, *
«me
)

26 
ux_öode
 *
uù
 = (ux_inode *)

27 &
dù
->
i_¥iv©e
;

28 
su≥r_block
 *
sb
 = 
dù
->
i_sb
;

29 
buf„r_hód
 *
bh
;

30 
ux_dúít
 *
dúít
;

31 
i
, 
blk
 = 0;

33 
blk
=0 ; blk < 
uù
->
i_blocks
 ; blk++) {

34 
bh
 = 
	`sb_bªad
(
sb
, 
uù
->
i_addr
[
blk
]);

35 
dúít
 = (
ux_dúít
 *)
bh
->
b_d©a
;

36 
i
=0 ; i < 
UX_DIRS_PER_BLOCK
 ; i++) {

37 i‡(
	`°rcmp
(
dúít
->
d_«me
, 
«me
) == 0) {

38 
	`bªl£
(
bh
);

39  
dúít
->
d_öo
;

41 
dúít
++;

44 
	`bªl£
(
bh
);

46 
	}
}

54 
	$ux_ªad_öode
(
öode
 *inode)

56 
buf„r_hód
 *
bh
;

57 
ux_öode
 *
di
;

58 
öo
 = 
öode
->
i_öo
;

59 
block
;

61 i‡(
öo
 < 
UX_ROOT_INO
 || inÿ> 
UX_MAXFILES
) {

62 
	`¥ötk
("uxfs: Bad inodênumbî %lu\n", 
öo
);

71 
block
 = 
UX_INODE_BLOCK
 + 
öo
;

72 
bh
 = 
	`sb_bªad
(
öode
->
i_sb
, 
block
);

73 i‡(!
bh
) {

74 
	`¥ötk
("U«bÀÅÿªad inodê%lu\n", 
öo
);

78 
di
 = (
ux_öode
 *)(
bh
->
b_d©a
);

79 
öode
->
i_mode
 = 
di
->i_mode;

80 i‡(
di
->
i_mode
 & 
S_IFDIR
) {

81 
öode
->
i_mode
 |
S_IFDIR
;

82 
öode
->
i_›
 = &
ux_dú_ö›s
;

83 
öode
->
i_f›
 = &
ux_dú_›î©i⁄s
;

84 } i‡(
di
->
i_mode
 & 
S_IFREG
) {

85 
öode
->
i_mode
 |
S_IFREG
;

86 
öode
->
i_›
 = &
ux_fûe_ö›s
;

87 
öode
->
i_f›
 = &
ux_fûe_›î©i⁄s
;

88 
öode
->
i_m≠pög
->
a_›s
 = &
ux_a›s
;

90 
öode
->
i_uid
 = 
di
->i_uid;

91 
öode
->
i_gid
 = 
di
->i_gid;

92 
öode
->
i_∆ök
 = 
di
->i_nlink;

93 
öode
->
i_size
 = 
di
->i_size;

94 
öode
->
i_blocks
 = 
di
->i_blocks;

95 
öode
->
i_blksize
 = 
UX_BSIZE
;

96 
öode
->
i_©ime
 = 
di
->i_atime;

97 
öode
->
i_mtime
 = 
di
->i_mtime;

98 
öode
->
i_˘ime
 = 
di
->i_ctime;

99 
	`mem˝y
(&
öode
->
i_¥iv©e
, 
di
, (
ux_öode
));

100 
	`bªl£
(
bh
);

101 
	}
}

108 
	$ux_wrôe_öode
(
öode
 *öode, 
unu£d
)

110 
öo
 = 
öode
->
i_öo
;

111 
ux_öode
 *
uù
 = (ux_inode *)

112 &
öode
->
i_¥iv©e
;

113 
buf„r_hód
 *
bh
;

114 
__u32
 
blk
;

116 i‡(
öo
 < 
UX_ROOT_INO
 || inÿ> 
UX_MAXFILES
) {

117 
	`¥ötk
("uxfs: Bad inodênumbî %lu\n", 
öo
);

120 
blk
 = 
UX_INODE_BLOCK
 + 
öo
;

121 
bh
 = 
	`sb_bªad
(
öode
->
i_sb
, 
blk
);

122 
uù
->
i_mode
 = 
öode
->i_mode;

123 
uù
->
i_∆ök
 = 
öode
->i_nlink;

124 
uù
->
i_©ime
 = 
öode
->i_atime;

125 
uù
->
i_mtime
 = 
öode
->i_mtime;

126 
uù
->
i_˘ime
 = 
öode
->i_ctime;

127 
uù
->
i_uid
 = 
öode
->i_uid;

128 
uù
->
i_gid
 = 
öode
->i_gid;

129 
uù
->
i_size
 = 
öode
->i_size;

130 
	`mem˝y
(
bh
->
b_d©a
, 
uù
, (
ux_öode
));

131 
	`m¨k_buf„r_dúty
(
bh
);

132 
	`bªl£
(
bh
);

133 
	}
}

140 
	$ux_dñëe_öode
(
öode
 *inode)

142 
öum
 = 
öode
->
i_öo
;

143 
ux_öode
 *
uù
 = (ux_inode *)

144 &
öode
->
i_¥iv©e
;

145 
su≥r_block
 *
sb
 = 
öode
->
i_sb
;

146 
ux_fs
 *
fs
 = (ux_fs *)

147 
sb
->
s_¥iv©e
;

148 
ux_su≥rblock
 *
usb
 = 
fs
->
u_sb
;

149 
i
;

151 
usb
->
s_nb‰ì
 +
uù
->
i_blocks
;

152 
i
=0 ; i < 
uù
->
i_blocks
 ; i++) {

153 
usb
->
s_block
[
uù
->
i_addr
[
i
]] = 
UX_BLOCK_FREE
;

154 
uù
->
i_addr
[
i
] = 
UX_BLOCK_FREE
;

156 
usb
->
s_öode
[
öum
] = 
UX_INODE_FREE
;

157 
usb
->
s_ni‰ì
++;

158 
sb
->
s_dút
 = 1;

159 
	`˛ór_öode
(
öode
);

160 
	}
}

169 
	$ux_put_su≥r
(
su≥r_block
 *
s
)

171 
ux_fs
 *
fs
 = (ux_f†*)
s
->
s_¥iv©e
;

172 
buf„r_hód
 *
bh
 = 
fs
->
u_sbh
;

178 
	`k‰ì
(
fs
);

179 
	`bªl£
(
bh
);

180 
	}
}

187 
	$ux_°©fs
(
su≥r_block
 *
sb
, 
°©fs
 *
buf
)

189 
ux_fs
 *
fs
 = (ux_f†*)
sb
->
s_¥iv©e
;

190 
ux_su≥rblock
 *
usb
 = 
fs
->
u_sb
;

192 
buf
->
f_ty≥
 = 
UX_MAGIC
;

193 
buf
->
f_bsize
 = 
UX_BSIZE
;

194 
buf
->
f_blocks
 = 
UX_MAXBLOCKS
;

195 
buf
->
f_b‰ì
 = 
usb
->
s_nb‰ì
;

196 
buf
->
f_bavaû
 = 
usb
->
s_nb‰ì
;

197 
buf
->
f_fûes
 = 
UX_MAXFILES
;

198 
buf
->
f_f‰ì
 = 
usb
->
s_ni‰ì
;

199 
buf
->
f_fsid
.
vÆ
[0] = 
	`kdev_t_to_ƒ
(
sb
->
s_dev
);

200 
buf
->
f_«mñí
 = 
UX_NAMELEN
;

202 
	}
}

211 
	$ux_wrôe_su≥r
(
su≥r_block
 *
sb
)

213 
ux_fs
 *
fs
 = (ux_fs *)

214 
sb
->
s_¥iv©e
;

215 
buf„r_hód
 *
bh
 = 
fs
->
u_sbh
;

217 i‡(!(
sb
->
s_Êags
 & 
MS_RDONLY
)) {

218 
	`m¨k_buf„r_dúty
(
bh
);

220 
sb
->
s_dút
 = 0;

221 
	}
}

223 
su≥r_›î©i⁄s
 
	guxfs_s›s
 = {

224 
ªad_öode
: 
ux_ªad_öode
,

225 
wrôe_öode
: 
ux_wrôe_öode
,

226 
dñëe_öode
: 
ux_dñëe_öode
,

227 
put_su≥r
: 
ux_put_su≥r
,

228 
wrôe_su≥r
: 
ux_wrôe_su≥r
,

229 
°©fs
: 
ux_°©fs
,

232 
su≥r_block
 *

233 
	$ux_ªad_su≥r
(
su≥r_block
 *
s
, *
d©a
, 
sûít
)

235 
ux_su≥rblock
 *
usb
;

236 
ux_fs
 *
fs
;

237 
buf„r_hód
 *
bh
;

238 
öode
 *inode;

239 
kdev_t
 
dev
;

241 
dev
 = 
s
->
s_dev
;

242 
	`£t_blocksize
(
dev
, 
UX_BSIZE
);

243 
s
->
s_blocksize
 = 
UX_BSIZE
;

244 
s
->
s_blocksize_bôs
 = 
UX_BSIZE_BITS
;

246 
bh
 = 
	`sb_bªad
(
s
, 0);

247 if(!
bh
) {

248 
out
;

250 
usb
 = (
ux_su≥rblock
 *)
bh
->
b_d©a
;

251 i‡(
usb
->
s_magic
 !
UX_MAGIC
) {

252 i‡(!
sûít
)

253 
	`¥ötk
("UnableÅo find uxfs filesystem\n");

254 
out
;

256 i‡(
usb
->
s_mod
 =
UX_FSDIRTY
) {

257 
	`¥ötk
("Filesystem isÇot clean. Writeánd "

259 
out
;

267 
fs
 = (
ux_fs
 *)
	`kmÆloc
((ux_fs),

268 
GFP_KERNEL
);

269 
fs
->
u_sb
 = 
usb
;

270 
fs
->
u_sbh
 = 
bh
;

271 
s
->
s_¥iv©e
 = 
fs
;

273 
s
->
s_magic
 = 
UX_MAGIC
;

274 
s
->
s_›
 = &
uxfs_s›s
;

276 
öode
 = 
	`igë
(
s
, 
UX_ROOT_INO
);

277 i‡(!
öode
) {

278 
out
;

280 
s
->
s_roŸ
 = 
	`d_Æloc_roŸ
(
öode
);

281 i‡(!
s
->
s_roŸ
) {

282 
	`ùut
(
öode
);

283 
out
;

286 i‡(!(
s
->
s_Êags
 & 
MS_RDONLY
)) {

287 
	`m¨k_buf„r_dúty
(
bh
);

288 
s
->
s_dút
 = 1;

290  
s
;

292 
out
:

293  
NULL
;

294 
	}
}

296 
DECLARE_FSTYPE_DEV
(
uxfs_fs_ty≥
, "uxfs", 
ux_ªad_su≥r
);

298 
__öô
 
	$öô_uxfs_fs
()

300  
	`ªgi°î_fûesy°em
(&
uxfs_fs_ty≥
);

301 
	}
}

303 
__exô
 
	$exô_uxfs_fs
()

305 
	`uƒegi°î_fûesy°em
(&
uxfs_fs_ty≥
);

306 
	}
}

308 
	$moduÀ_öô
(
öô_uxfs_fs
)

309 
	`moduÀ_exô
(
exô_uxfs_fs
)

	@/usr/include/fcntl.h

23 #i‚def 
_FCNTL_H


24 
	#_FCNTL_H
 1

	)

26 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 
	~<bôs/f˙é.h
>

36 #ifde‡
__USE_XOPEN


37 
	~<sys/°©.h
>

40 #ifdef 
__USE_MISC


41 #i‚de‡
R_OK


44 
	#R_OK
 4

	)

45 
	#W_OK
 2

	)

46 
	#X_OK
 1

	)

47 
	#F_OK
 0

	)

52 #ifde‡
__USE_XOPEN


53 
	#SEEK_SET
 0

	)

54 
	#SEEK_CUR
 1

	)

55 
	#SEEK_END
 2

	)

60 
	$f˙é
 (
__fd
, 
__cmd
, ...Ë
__THROW
;

65 #i‚de‡
__USE_FILE_OFFSET64


66 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
__THROW
;

68 #ifde‡
__REDIRECT


69 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
__THROW
,

70 
›í64
);

72 
	#›í
 
›í64


	)

75 #ifde‡
__USE_LARGEFILE64


76 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
__THROW
;

82 #i‚de‡
__USE_FILE_OFFSET64


83 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
__THROW
;

85 #ifde‡
__REDIRECT


86 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
__THROW
,

87 
¸ót64
);

89 
	#¸ót
 
¸ót64


	)

92 #ifde‡
__USE_LARGEFILE64


93 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
__THROW
;

96 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

97 && !
deföed
 
__USE_POSIX
))

106 
	#F_ULOCK
 0

	)

107 
	#F_LOCK
 1

	)

108 
	#F_TLOCK
 2

	)

109 
	#F_TEST
 3

	)

111 #i‚de‡
__USE_FILE_OFFSET64


112 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__THROW
;

114 #ifde‡
__REDIRECT


115 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__THROW
,

116 
lockf64
);

118 
	#lockf
 
lockf64


	)

121 #ifde‡
__USE_LARGEFILE64


122 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__THROW
;

126 #ifde‡
__USE_XOPEN2K


129 #i‚de‡
__USE_FILE_OFFSET64


130 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, 
size_t
 
__Àn
,

131 
__advi£
Ë
__THROW
;

133 #ifde‡
__REDIRECT


134 
	`__REDIRECT
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

135 
size_t
 
__Àn
, 
__advi£
Ë
__THROW
,

136 
posix_Ádvi£64
);

138 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

141 #ifde‡
__USE_LARGEFILE64


142 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__Àn
,

143 
__advi£
Ë
__THROW
;

148 #i‚de‡
__USE_FILE_OFFSET64


149 
	$posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, 
size_t
 
__Àn
Ë
__THROW
;

151 #ifde‡
__REDIRECT


152 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

153 
size_t
 
__Àn
Ë
__THROW
,

154 
posix_ÁŒoˇã64
);

156 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

159 #ifde‡
__USE_LARGEFILE64


160 
	$posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__Àn
)

161 
__THROW
;

165 
__END_DECLS


	@/usr/include/linux/fs.h

1 #i‚de‡
_LINUX_FS_H


2 
	#_LINUX_FS_H


	)

9 
	~<löux/c⁄fig.h
>

10 
	~<löux/lökage.h
>

11 
	~<löux/limôs.h
>

12 
	~<löux/waô.h
>

13 
	~<löux/ty≥s.h
>

14 
	~<löux/vfs.h
>

15 
	~<löux/√t.h
>

16 
	~<löux/kdev_t.h
>

17 
	~<löux/io˘l.h
>

18 
	~<löux/li°.h
>

19 
	~<löux/dˇche.h
>

20 
	~<löux/°©.h
>

21 
	~<löux/ˇche.h
>

22 
	~<löux/°ddef.h
>

23 
	~<löux/°rög.h
>

26 
	gpﬁl_èbÀ_°ru˘
;

40 #unde‡
NR_OPEN


41 
	#NR_OPEN
 (1024*1024)

	)

42 
	#INR_OPEN
 1024

	)

44 
	#BLOCK_SIZE_BITS
 10

	)

45 
	#BLOCK_SIZE
 (1<<
BLOCK_SIZE_BITS
)

	)

48 
	sfûes_°©_°ru˘
 {

49 
	mƒ_fûes
;

50 
	mƒ_‰ì_fûes
;

51 
	mmax_fûes
;

53 
fûes_°©_°ru˘
 
fûes_°©
;

55 
	söodes_°©_t
 {

56 
	mƒ_öodes
;

57 
	mƒ_unu£d
;

58 
	mdummy
[5];

60 
öodes_°©_t
 
öodes_°©
;

62 
Àa£s_íabÀ
, 
dú_nŸify_íabÀ
, 
Àa£_bªak_time
;

64 
	#NR_FILE
 8192

	)

65 
	#NR_RESERVED_FILES
 10

	)

66 
	#NR_SUPER
 256

	)

68 
	#MAY_EXEC
 1

	)

69 
	#MAY_WRITE
 2

	)

70 
	#MAY_READ
 4

	)

72 
	#FMODE_READ
 1

	)

73 
	#FMODE_WRITE
 2

	)

75 
	#READ
 0

	)

76 
	#WRITE
 1

	)

77 
	#READA
 2

	)

78 
	#SPECIAL
 4

	)

80 
	#SEL_IN
 1

	)

81 
	#SEL_OUT
 2

	)

82 
	#SEL_EX
 4

	)

85 
	#FS_REQUIRES_DEV
 1

	)

86 
	#FS_NO_DCACHE
 2

	)

87 
	#FS_NO_PRELIM
 4

	)

90 
	#FS_SINGLE
 8

	)

91 
	#FS_NOMOUNT
 16

	)

92 
	#FS_LITTER
 32

	)

93 
	#FS_ODD_RENAME
 32768

	)

99 
	#MS_RDONLY
 1

	)

100 
	#MS_NOSUID
 2

	)

101 
	#MS_NODEV
 4

	)

102 
	#MS_NOEXEC
 8

	)

103 
	#MS_SYNCHRONOUS
 16

	)

104 
	#MS_REMOUNT
 32

	)

105 
	#MS_MANDLOCK
 64

	)

106 
	#MS_NOATIME
 1024

	)

107 
	#MS_NODIRATIME
 2048

	)

108 
	#MS_BIND
 4096

	)

109 
	#MS_NOUSER
 (1<<31)

	)

114 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_NOATIME
|\

115 
MS_NODIRATIME
)

	)

120 
	#MS_MGC_VAL
 0xC0ED0000

	)

121 
	#MS_MGC_MSK
 0xffff0000

	)

125 
	#S_SYNC
 1

	)

126 
	#S_NOATIME
 2

	)

127 
	#S_QUOTA
 4

	)

128 
	#S_APPEND
 8

	)

129 
	#S_IMMUTABLE
 16

	)

130 
	#S_DEAD
 32

	)

131 
	#S_NOQUOTA
 64

	)

146 
	#__IS_FLG
(
öode
,
Êg
Ë((öode)->
i_sb
->
s_Êags
 & (Êg))

	)

148 
	#IS_RDONLY
(
öode
Ë((öode)->
i_sb
->
s_Êags
 & 
MS_RDONLY
)

	)

149 
	#IS_SYNC
(
öode
Ë(
	`__IS_FLG
(öode, 
MS_SYNCHRONOUS
Ë|| ((öode)->
i_Êags
 & 
S_SYNC
))

	)

150 
	#IS_MANDLOCK
(
öode
) 
	`__IS_FLG
(öode, 
MS_MANDLOCK
)

	)

152 
	#IS_QUOTAINIT
(
öode
) ((öode)->
i_Êags
 & 
S_QUOTA
)

	)

153 
	#IS_NOQUOTA
(
öode
) ((öode)->
i_Êags
 & 
S_NOQUOTA
)

	)

154 
	#IS_APPEND
(
öode
) ((öode)->
i_Êags
 & 
S_APPEND
)

	)

155 
	#IS_IMMUTABLE
(
öode
) ((öode)->
i_Êags
 & 
S_IMMUTABLE
)

	)

156 
	#IS_NOATIME
(
öode
) (
	`__IS_FLG
(öode, 
MS_NOATIME
Ë|| ((öode)->
i_Êags
 & 
S_NOATIME
))

	)

157 
	#IS_NODIRATIME
(
öode
) 
	`__IS_FLG
(öode, 
MS_NODIRATIME
)

	)

159 
	#IS_DEADDIR
(
öode
) ((öode)->
i_Êags
 & 
S_DEAD
)

	)

164 
	#BLKROSET
 
	`_IO
(0x12,93)

	)

165 
	#BLKROGET
 
	`_IO
(0x12,94)

	)

166 
	#BLKRRPART
 
	`_IO
(0x12,95)

	)

167 
	#BLKGETSIZE
 
	`_IO
(0x12,96)

	)

168 
	#BLKFLSBUF
 
	`_IO
(0x12,97)

	)

169 
	#BLKRASET
 
	`_IO
(0x12,98)

	)

170 
	#BLKRAGET
 
	`_IO
(0x12,99)

	)

171 
	#BLKFRASET
 
	`_IO
(0x12,100Ë

	)

172 
	#BLKFRAGET
 
	`_IO
(0x12,101Ë

	)

173 
	#BLKSECTSET
 
	`_IO
(0x12,102Ë

	)

174 
	#BLKSECTGET
 
	`_IO
(0x12,103Ë

	)

175 
	#BLKSSZGET
 
	`_IO
(0x12,104Ë

	)

177 
	#BLKPG
 
	`_IO
(0x12,105Ë

	)

178 
	#BLKELVGET
 
	`_IOR
(0x12,106,(
blkñv_io˘l_¨g_t
)Ë

	)

179 
	#BLKELVSET
 
	`_IOW
(0x12,107,(
blkñv_io˘l_¨g_t
)Ë

	)

183 
	#BLKGETLASTSECT
 
	`_IO
(0x12,108Ë

	)

184 
	#BLKSETLASTSECT
 
	`_IO
(0x12,109Ë

	)

186 
	#BLKBSZGET
 
	`_IOR
(0x12,112,())

	)

187 
	#BLKBSZSET
 
	`_IOW
(0x12,113,())

	)

189 
	#BMAP_IOCTL
 1

	)

190 
	#FIBMAP
 
	`_IO
(0x00,1)

	)

191 
	#FIGETBSZ
 
	`_IO
(0x00,2)

	)

	@/usr/include/linux/init.h

1 #i‚de‡
_LINUX_INIT_H


2 
	#_LINUX_INIT_H


	)

4 
	~<löux/c⁄fig.h
>

41 #i‚de‡
MODULE


43 #i‚de‡
__ASSEMBLY__


48 (*
	töôˇŒ_t
)();

49 (*
	texôˇŒ_t
)();

51 
öôˇŒ_t
 
__öôˇŒ_°¨t
, 
__öôˇŒ_íd
;

53 
	#__öôˇŒ
(
‚
) \

54 
öôˇŒ_t
 
__öôˇŒ_
##
‚
 
__öô_ˇŒ
 = 
	)
fn

55 
	#__exôˇŒ
(
‚
) \

56 
exôˇŒ_t
 
__exôˇŒ_
##
‚
 
__exô_ˇŒ
 = 
	)
fn

61 
	skî√l_∑øm
 {

62 c⁄° *
°r
;

63 (*
£tup_func
)(*);

66 
kî√l_∑øm
 
__£tup_°¨t
, 
__£tup_íd
;

68 
	#__£tup
(
°r
, 
‚
) \

69 
__£tup_°r_
##
‚
[] 
__öôd©a
 = 
°r
; \

70 
kî√l_∑øm
 
__£tup_
##
‚
 
	`__©åibuã__
((
unu£d
)Ë
__öô£tup
 = { 
__£tup_°r_
##‚, f¿
	}

	)
}

78 
	#__öô
 
	`__©åibuã__
 ((
	`__£˘i⁄__
 (".ãxt.öô")))

	)

79 
	#__exô
 
	`__©åibuã__
 ((
unu£d
, 
	`__£˘i⁄__
(".ãxt.exô")))

	)

80 
	#__öôd©a
 
	`__©åibuã__
 ((
	`__£˘i⁄__
 (".d©a.öô")))

	)

81 
	#__exôd©a
 
	`__©åibuã__
 ((
unu£d
, 
	`__£˘i⁄__
 (".d©a.exô")))

	)

82 
	#__öô£tup
 
	`__©åibuã__
 ((
unu£d
,
	`__£˘i⁄__
 (".£tup.öô")))

	)

83 
	#__öô_ˇŒ
 
	`__©åibuã__
 ((
unu£d
,
	`__£˘i⁄__
 (".öôˇŒ.öô")))

	)

84 
	#__exô_ˇŒ
 
	`__©åibuã__
 ((
unu£d
,
	`__£˘i⁄__
 (".exôˇŒ.exô")))

	)

87 
	#__INIT
 .
£˘i⁄
 ".ãxt.öô","ax"

	)

88 
	#__FINIT
 .
¥evious


	)

89 
	#__INITDATA
 .
£˘i⁄
 ".d©a.öô","aw"

	)

101 
	#moduÀ_öô
(
x
) 
	`__öôˇŒ
(x);

	)

112 
	#moduÀ_exô
(
x
) 
	`__exôˇŒ
(x);

	)

116 
	#__öô


	)

117 
	#__exô


	)

118 
	#__öôd©a


	)

119 
	#__exôd©a


	)

120 
	#__öôˇŒ
(
‚
)

	)

122 
	#__INIT


	)

123 
	#__FINIT


	)

124 
	#__INITDATA


	)

131 (*
	t__öô_moduÀ_func_t
)();

132 (*
	t__˛ónup_moduÀ_func_t
)();

133 
	#moduÀ_öô
(
x
) \

134 
	`öô_moduÀ
(Ë
	`__©åibuã__
((
	`Æüs
(#x))); \

135 
ölöe
 
__öô_moduÀ_func_t
 
	`__öô_moduÀ_ölöe
() \

136 {  
x
; 
	}

	)
}

137 
	#moduÀ_exô
(
x
) \

138 
	`˛ónup_moduÀ
(Ë
	`__©åibuã__
((
	`Æüs
(#x))); \

139 
ölöe
 
__˛ónup_moduÀ_func_t
 
	`__˛ónup_moduÀ_ölöe
() \

140 {  
x
; }

	)

142 
	#__£tup
(
°r
,
func
Ë

	)

146 #ifde‡
CONFIG_HOTPLUG


147 
	#__devöô


	)

148 
	#__devöôd©a


	)

149 
	#__devexô


	)

150 
	#__devexôd©a


	)

152 
	#__devöô
 
__öô


	)

153 
	#__devöôd©a
 
__öôd©a


	)

154 
	#__devexô
 
__exô


	)

155 
	#__devexôd©a
 
__exôd©a


	)

	@/usr/include/linux/locks.h

1 #i‚de‡
_LINUX_LOCKS_H


2 
	#_LINUX_LOCKS_H


	)

4 #i‚de‡
_LINUX_MM_H


5 
	~<löux/mm.h
>

7 #i‚de‡
_LINUX_PAGEMAP_H


8 
	~<löux/∑gem≠.h
>

15 
__waô_⁄_buf„r
(
buf„r_hód
 *);

17 
ölöe
 
	$waô_⁄_buf„r
(
buf„r_hód
 * 
bh
)

19 i‡(
	`ã°_bô
(
BH_Lock
, &
bh
->
b_°©e
))

20 
	`__waô_⁄_buf„r
(
bh
);

21 
	}
}

23 
ölöe
 
	$lock_buf„r
(
buf„r_hód
 * 
bh
)

25 
	`ã°_™d_£t_bô
(
BH_Lock
, &
bh
->
b_°©e
))

26 
	`__waô_⁄_buf„r
(
bh
);

27 
	}
}

29 
u∆ock_buf„r
(
buf„r_hód
 *
bh
);

37 
ölöe
 
	$lock_su≥r
(
su≥r_block
 * 
sb
)

39 
	`down
(&
sb
->
s_lock
);

40 
	}
}

42 
ölöe
 
	$u∆ock_su≥r
(
su≥r_block
 * 
sb
)

44 
	`up
(&
sb
->
s_lock
);

45 
	}
}

	@/usr/include/linux/mm.h

1 #i‚de‡
_LINUX_MM_H


2 
	#_LINUX_MM_H


	)

4 
	~<löux/sched.h
>

5 
	~<löux/î∫o.h
>

	@/usr/include/linux/module.h

7 #i‚de‡
_LINUX_MODULE_H


8 
	#_LINUX_MODULE_H


	)

10 
	~<löux/c⁄fig.h
>

11 
	~<löux/li°.h
>

13 #ifde‡
__GENKSYMS__


14 
	#_£t_vî
(
sym
Ë
	)
sym

15 #unde‡
MODVERSIONS


16 
	#MODVERSIONS


	)

18 #i‡!
deföed
(
MODVERSIONS
Ë&& deföed(
EXPORT_SYMTAB
)

19 
	#_£t_vî
(
sym
Ë
	)
sym

20 
	~<löux/modvîsi⁄s.h
>

26 
	gex˚±i⁄_èbÀ_íåy
;

29 
	skî√l_sym


31 
	mvÆue
;

32 
	m«me
[60];

35 
	smoduÀ_symbﬁ


37 
	mvÆue
;

38 c⁄° *
	m«me
;

41 
	smoduÀ_ªf


43 
moduÀ
 *
	mdï
;

44 
moduÀ
 *
	mªf
;

45 
moduÀ_ªf
 *
	m√xt_ªf
;

49 
	gmoduÀ_≥rsi°
;

51 
	smoduÀ


53 
	msize_of_°ru˘
;

54 
moduÀ
 *
	m√xt
;

55 c⁄° *
	m«me
;

56 
	msize
;

60 
	m∑d
;

61 } 
	muc
;

63 
	mÊags
;

65 
	mnsyms
;

66 
	mndïs
;

68 
moduÀ_symbﬁ
 *
	msyms
;

69 
moduÀ_ªf
 *
	mdïs
;

70 
moduÀ_ªf
 *
	mªfs
;

71 (*
	möô
)();

72 (*
	m˛ónup
)();

73 c⁄° 
ex˚±i⁄_èbÀ_íåy
 *
	mex_èbÀ_°¨t
;

74 c⁄° 
ex˚±i⁄_èbÀ_íåy
 *
	mex_èbÀ_íd
;

75 #ifde‡
__Æpha__


76 
	mgp
;

81 c⁄° 
moduÀ_≥rsi°
 *
	m≥rsi°_°¨t
;

82 c⁄° 
moduÀ_≥rsi°
 *
	m≥rsi°_íd
;

83 (*
	mˇn_u∆ﬂd
)();

84 
	mrunsize
;

85 c⁄° *
	mkÆlsyms_°¨t
;

86 c⁄° *
	mkÆlsyms_íd
;

87 c⁄° *
	m¨chd©a_°¨t
;

88 c⁄° *
	m¨chd©a_íd
;

89 c⁄° *
	mkî√l_d©a
;

92 
	smoduÀ_öfo


94 
	maddr
;

95 
	msize
;

96 
	mÊags
;

97 
	mu£cou¡
;

102 
	#MOD_UNINITIALIZED
 0

	)

103 
	#MOD_RUNNING
 1

	)

104 
	#MOD_DELETED
 2

	)

105 
	#MOD_AUTOCLEAN
 4

	)

106 
	#MOD_VISITED
 8

	)

107 
	#MOD_USED_ONCE
 16

	)

108 
	#MOD_JUST_FREED
 32

	)

109 
	#MOD_INITIALIZING
 64

	)

113 
	#QM_MODULES
 1

	)

114 
	#QM_DEPS
 2

	)

115 
	#QM_REFS
 3

	)

116 
	#QM_SYMBOLS
 4

	)

117 
	#QM_INFO
 5

	)

120 
	#MOD_CAN_QUERY
(
mod
Ë(((mod)->
Êags
 & (
MOD_RUNNING
 | 
MOD_INITIALIZING
)Ë&& !((mod)->Êag†& 
MOD_DELETED
))

	)

126 
	#mod_membî_¥e£¡
(
mod
,
membî
) \

127 (()(&((
moduÀ
 *)0L)->
membî
 + 1) \

128 <(
mod
)->
size_of_°ru˘
)

	)

134 
	#mod_¨chd©a_membî_¥e£¡
(
mod
, 
ty≥
, 
membî
) \

135 ((()(&((
ty≥
 *)0L)->
membî
) + \

136 (((
ty≥
 *)0L)->
membî
)) <= \

137 ((
mod
)->
¨chd©a_íd
 - (mod)->
¨chd©a_°¨t
))

	)

141 
	#mod_bound
(
p
, 
n
, 
m
Ë(()’Ë>(()(mË+ ((m)->
size_of_°ru˘
)) && \

142 ()((
p
)+(
n
)Ë<()(
m
Ë+ (m)->
size
)

	)

146 
	#GET_USE_COUNT
(
moduÀ
) (
	`©omic_ªad
(&(moduÀ)->
uc
.
u£cou¡
))

	)

150 
	#__MOD_INC_USE_COUNT
(
mod
) \

151 (
	`©omic_öc
(&(
mod
)->
uc
.
u£cou¡
), (mod)->
Êags
 |
MOD_VISITED
|
MOD_USED_ONCE
)

	)

152 
	#__MOD_DEC_USE_COUNT
(
mod
) \

153 (
	`©omic_dec
(&(
mod
)->
uc
.
u£cou¡
), (mod)->
Êags
 |
MOD_VISITED
)

	)

154 
	#__MOD_IN_USE
(
mod
) \

155 (
	`mod_membî_¥e£¡
((
mod
), 
ˇn_u∆ﬂd
) && (mod)->can_unload \

156 ? (
mod
)->
	`ˇn_u∆ﬂd
(Ë: 
	`©omic_ªad
(&(mod)->
uc
.
u£cou¡
))

	)

160 
	#__MODULE_STRING_1
(
x
) #x

	)

161 
	#__MODULE_STRING
(
x
) 
	`__MODULE_STRING_1
(x)

	)

179 #i‡
deföed
(
MODULE
Ë&& !deföed(
__GENKSYMS__
)

185 
	#MODULE_AUTHOR
(
«me
) \

186 c⁄° 
__moduÀ_auth‹
[] 
	`__©åibuã__
((
	`£˘i⁄
(".modinfo"))) = \

187 "auth‹=" 
«me


	)

189 
	#MODULE_DESCRIPTION
(
desc
) \

190 c⁄° 
__moduÀ_des¸ùti⁄
[] 
	`__©åibuã__
((
	`£˘i⁄
(".modinfo"))) = \

191 "des¸ùti⁄=" 
desc


	)

195 
	#MODULE_SUPPORTED_DEVICE
(
dev
) \

196 c⁄° 
__moduÀ_devi˚
[] 
	`__©åibuã__
((
	`£˘i⁄
(".modinfo"))) = \

197 "devi˚=" 
dev


	)

212 
	#MODULE_PARM
(
v¨
,
ty≥
) \

213 c⁄° 
__moduÀ_∑rm_
##
v¨
[] \

214 
	`__©åibuã__
((
	`£˘i⁄
(".modinfo"))) = \

215 "∑rm_" 
	`__MODULE_STRING
(
v¨
Ë"=" 
ty≥


	)

217 
	#MODULE_PARM_DESC
(
v¨
,
desc
) \

218 c⁄° 
__moduÀ_∑rm_desc_
##
v¨
[] \

219 
	`__©åibuã__
((
	`£˘i⁄
(".modinfo"))) = \

220 "∑rm_desc_" 
	`__MODULE_STRING
(
v¨
Ë"=" 
desc


	)

235 
	#MODULE_GENERIC_TABLE
(
gty≥
,
«me
) \

236 c⁄° 
__moduÀ_
##
gty≥
##
_size
 \

237 
	`__©åibuã__
 ((
unu£d
)Ë(
gty≥
##
_id
); \

238 c⁄° 
gty≥
##
_id
 * 
__moduÀ_
##gty≥##
_èbÀ
 \

239 
	`__©åibuã__
 ((
unu£d
)Ë
«me


	)

240 
	#MODULE_DEVICE_TABLE
(
ty≥
,
«me
) \

241 
	`MODULE_GENERIC_TABLE
(
ty≥
##
_devi˚
,
«me
)

	)

267 
	#MODULE_LICENSE
(
li˚n£
) \

268 c⁄° 
__moduÀ_li˚n£
[] 
	`__©åibuã__
((
	`£˘i⁄
(".modinfo"))) = \

269 "li˚n£=" 
li˚n£


	)

272 
moduÀ
 
__this_moduÀ
;

274 
	#THIS_MODULE
 (&
__this_moduÀ
)

	)

275 
	#MOD_INC_USE_COUNT
 
	`__MOD_INC_USE_COUNT
(
THIS_MODULE
)

	)

276 
	#MOD_DEC_USE_COUNT
 
	`__MOD_DEC_USE_COUNT
(
THIS_MODULE
)

	)

277 
	#MOD_IN_USE
 
	`__MOD_IN_USE
(
THIS_MODULE
)

	)

279 
	~<löux/vîsi⁄.h
>

280 c⁄° 
	g__moduÀ_kî√l_vîsi⁄
[] 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

281 "kî√l_vîsi⁄=" 
UTS_RELEASE
;

282 #ifde‡
MODVERSIONS


283 c⁄° 
	g__moduÀ_usög_checksums
[] 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

289 
	#MODULE_AUTHOR
(
«me
)

	)

290 
	#MODULE_LICENSE
(
li˚n£
)

	)

291 
	#MODULE_DESCRIPTION
(
desc
)

	)

292 
	#MODULE_SUPPORTED_DEVICE
(
«me
)

	)

293 
	#MODULE_PARM
(
v¨
,
ty≥
)

	)

294 
	#MODULE_PARM_DESC
(
v¨
,
desc
)

	)

295 
	#MODULE_GENERIC_TABLE
(
gty≥
,
«me
)

	)

296 
	#MODULE_DEVICE_TABLE
(
ty≥
,
«me
)

	)

298 #i‚de‡
__GENKSYMS__


300 
	#THIS_MODULE
 
NULL


	)

301 
	#MOD_INC_USE_COUNT
 dÿ{ } 0)

	)

302 
	#MOD_DEC_USE_COUNT
 dÿ{ } 0)

	)

303 
	#MOD_IN_USE
 1

	)

305 
moduÀ
 *
moduÀ_li°
;

320 #i‡
deföed
(
__GENKSYMS__
)

324 #ñi‡!
deföed
(
AUTOCONF_INCLUDED
)

326 
	#__EXPORT_SYMBOL
(
sym
,
°r
Ë
îr‹
 
c⁄fig_mu°_be_ö˛uded_bef‹e_moduÀ


	)

327 
	#EXPORT_SYMBOL
(
v¨
Ë
îr‹
 
c⁄fig_mu°_be_ö˛uded_bef‹e_moduÀ


	)

328 
	#EXPORT_SYMBOL_NOVERS
(
v¨
Ë
îr‹
 
c⁄fig_mu°_be_ö˛uded_bef‹e_moduÀ


	)

330 
	#EXPORT_SYMBOL_GPL
(
v¨
Ë
îr‹
 
c⁄fig_mu°_be_ö˛uded_bef‹e_moduÀ


	)

331 #ñi‡!
deföed
(
CONFIG_MODULES
)

333 
	#__EXPORT_SYMBOL
(
sym
,
°r
)

	)

334 
	#EXPORT_SYMBOL
(
v¨
)

	)

335 
	#EXPORT_SYMBOL_NOVERS
(
v¨
)

	)

336 
	#EXPORT_SYMBOL_GPL
(
v¨
)

	)

340 
	#__EXPORT_SYMBOL
(
sym
, 
°r
) \

341 c⁄° 
__k°πab_
##
sym
[] \

342 
	`__©åibuã__
((
	`£˘i⁄
(".k°πab"))Ë
°r
; \

343 c⁄° 
moduÀ_symbﬁ
 
__ksymèb_
##
sym
 \

344 
	`__©åibuã__
((
	`£˘i⁄
("__ksymtab"))) = \

345 { ()&
sym
, 
__k°πab_
##sym }

	)

347 
	#__EXPORT_SYMBOL_GPL
(
sym
, 
°r
) \

348 c⁄° 
__k°πab_
##
sym
[] \

349 
	`__©åibuã__
((
	`£˘i⁄
(".k°πab"))Ë"GPLONLY_" 
°r
; \

350 c⁄° 
moduÀ_symbﬁ
 
__ksymèb_
##
sym
 \

351 
	`__©åibuã__
((
	`£˘i⁄
("__ksymtab"))) = \

352 { ()&
sym
, 
__k°πab_
##sym }

	)

354 #i‡
deföed
(
MODVERSIONS
Ë|| !deföed(
CONFIG_MODVERSIONS
)

355 
	#EXPORT_SYMBOL
(
v¨
Ë
	`__EXPORT_SYMBOL
(v¨, 
	`__MODULE_STRING
(v¨))

	)

356 
	#EXPORT_SYMBOL_GPL
(
v¨
Ë
	`__EXPORT_SYMBOL_GPL
(v¨, 
	`__MODULE_STRING
(v¨))

	)

358 
	#EXPORT_SYMBOL
(
v¨
Ë
	`__EXPORT_SYMBOL
(v¨, 
	`__MODULE_STRING
(
	`__VERSIONED_SYMBOL
(v¨)))

	)

359 
	#EXPORT_SYMBOL_GPL
(
v¨
Ë
	`__EXPORT_SYMBOL_GPL
(v¨, 
	`__MODULE_STRING
(
	`__VERSIONED_SYMBOL
(v¨)))

	)

362 
	#EXPORT_SYMBOL_NOVERS
(
v¨
Ë
	`__EXPORT_SYMBOL
(v¨, 
	`__MODULE_STRING
(v¨))

	)

366 #ifde‡
MODULE


368 
	#EXPORT_NO_SYMBOLS
 
	`__asm__
(".£˘i⁄ __ksymèb\n.¥evious")

	)

370 
	#EXPORT_NO_SYMBOLS


	)

373 #ifde‡
CONFIG_MODULES


374 
	#SET_MODULE_OWNER
(
some_°ru˘
Ëdÿ{ (some_°ru˘)->
ow√r
 = 
THIS_MODULE
; } 0)

	)

376 
	#SET_MODULE_OWNER
(
some_°ru˘
Ëdÿ{ } 0)

	)

	@/usr/include/linux/sched.h

1 #i‚de‡
_LINUX_SCHED_H


2 
	#_LINUX_SCHED_H


	)

4 
	~<asm/∑øm.h
>

6 
evít
;

8 
	~<löux/c⁄fig.h
>

9 
	~<löux/böfmts.h
>

10 
	~<löux/thªads.h
>

11 
	~<löux/kî√l.h
>

12 
	~<löux/ty≥s.h
>

13 
	~<löux/times.h
>

14 
	~<löux/timex.h
>

16 
	~<asm/sy°em.h
>

17 
	~<asm/£m≠h‹e.h
>

18 
	~<asm/∑ge.h
>

19 
	~<asm/±ø˚.h
>

20 
	~<asm/mmu.h
>

22 
	~<löux/smp.h
>

23 
	~<löux/ây.h
>

24 
	~<löux/£m.h
>

25 
	~<löux/sig«l.h
>

26 
	~<löux/£cuªbôs.h
>

27 
	~<löux/fs_°ru˘.h
>

29 
	gexec_domaö
;

34 
	#CSIGNAL
 0x000000ff

	)

35 
	#CLONE_VM
 0x00000100

	)

36 
	#CLONE_FS
 0x00000200

	)

37 
	#CLONE_FILES
 0x00000400

	)

38 
	#CLONE_SIGHAND
 0x00000800

	)

39 
	#CLONE_PID
 0x00001000

	)

40 
	#CLONE_PTRACE
 0x00002000

	)

41 
	#CLONE_VFORK
 0x00004000

	)

42 
	#CLONE_PARENT
 0x00008000

	)

43 
	#CLONE_THREAD
 0x00010000

	)

45 
	#CLONE_SIGNAL
 (
CLONE_SIGHAND
 | 
CLONE_THREAD
)

	)

57 
avírun
[];

59 
	#FSHIFT
 11

	)

60 
	#FIXED_1
 (1<<
FSHIFT
)

	)

61 
	#LOAD_FREQ
 (5*
HZ
Ë

	)

62 
	#EXP_1
 1884

	)

63 
	#EXP_5
 2014

	)

64 
	#EXP_15
 2037

	)

66 
	#CALC_LOAD
(
lﬂd
,
exp
,
n
) \

67 
lﬂd
 *
exp
; \

68 
lﬂd
 +
n
*(
FIXED_1
-
exp
); \

69 
lﬂd
 >>
FSHIFT
;

	)

71 
	#CT_TO_SECS
(
x
) ((xË/ 
HZ
)

	)

72 
	#CT_TO_USECS
(
x
) (((xË% 
HZ
Ë* 1000000/HZ)

	)

74 
ƒ_ru¬ög
, 
ƒ_thªads
;

75 
œ°_pid
;

77 
	~<löux/fs.h
>

78 
	~<löux/time.h
>

79 
	~<löux/∑øm.h
>

80 
	~<löux/ªsour˚.h
>

81 
	~<löux/timî.h
>

83 
	~<asm/¥o˚ss‹.h
>

85 
	#TASK_RUNNING
 0

	)

86 
	#TASK_INTERRUPTIBLE
 1

	)

87 
	#TASK_UNINTERRUPTIBLE
 2

	)

88 
	#TASK_ZOMBIE
 4

	)

89 
	#TASK_STOPPED
 8

	)

91 
	#__£t_èsk_°©e
(
tsk
, 
°©e_vÆue
) \

92 dÿ{ (
tsk
)->
°©e
 = (
°©e_vÆue
); } 0)

	)

93 #ifde‡
CONFIG_SMP


94 
	#£t_èsk_°©e
(
tsk
, 
°©e_vÆue
) \

95 
	`£t_mb
((
tsk
)->
°©e
, (
°©e_vÆue
))

	)

97 
	#£t_èsk_°©e
(
tsk
, 
°©e_vÆue
) \

98 
	`__£t_èsk_°©e
((
tsk
), (
°©e_vÆue
))

	)

101 
	#__£t_cuºít_°©e
(
°©e_vÆue
) \

102 dÿ{ 
cuºít
->
°©e
 = (
°©e_vÆue
); } 0)

	)

103 #ifde‡
CONFIG_SMP


104 
	#£t_cuºít_°©e
(
°©e_vÆue
) \

105 
	`£t_mb
(
cuºít
->
°©e
, (
°©e_vÆue
))

	)

107 
	#£t_cuºít_°©e
(
°©e_vÆue
) \

108 
	`__£t_cuºít_°©e
(
°©e_vÆue
)

	)

114 
	#SCHED_OTHER
 0

	)

115 
	#SCHED_FIFO
 1

	)

116 
	#SCHED_RR
 2

	)

122 
	#SCHED_YIELD
 0x10

	)

124 
	ssched_∑øm
 {

125 
	msched_¥i‹ôy
;

128 
	gcom∂ëi⁄
;

	@/usr/include/linux/slab.h

7 #if !
deföed
(
_LINUX_SLAB_H
)

8 
	#_LINUX_SLAB_H


	)

	@/usr/include/linux/smp_lock.h

1 #i‚de‡
__LINUX_SMPLOCK_H


2 
	#__LINUX_SMPLOCK_H


	)

4 
	~<löux/c⁄fig.h
>

6 #i‚de‡
CONFIG_SMP


8 
	#lock_kî√l
(Ëdÿ{ } 0)

	)

9 
	#u∆ock_kî√l
(Ëdÿ{ } 0)

	)

10 
	#ªÀa£_kî√l_lock
(
èsk
, 
˝u
Ëdÿ{ } 0)

	)

11 
	#ªacquúe_kî√l_lock
(
èsk
Ëdÿ{ } 0)

	)

12 
	#kî√l_locked
(Ë1

	)

16 
	~<asm/sm∂ock.h
>

	@/usr/include/linux/string.h

1 #i‚de‡
_LINUX_STRING_H_


2 
	#_LINUX_STRING_H_


	)

6 #ifde‡
__KERNEL__


8 #w¨nög 
Usög
 
kî√l
 
hódî
 
ö
 
u£æ™d
!

10 
	~<löux/ty≥s.h
>

11 
	~<löux/°ddef.h
>

13 #ifde‡
__KERNEL__


15 #ifde‡
__˝lu•lus


19 * 
___°πok
;

20 * 
°Ωbrk
(const *,const *);

21 * 
°πok
(*,const *);

22 * 
°r£p
(**,const *);

23 
__kî√l_size_t
 
°r•n
(const *,const *);

29 
	~<asm/°rög.h
>

31 #i‚de‡
__HAVE_ARCH_STRCPY


32 * 
°r˝y
(*,const *);

34 #i‚de‡
__HAVE_ARCH_STRNCPY


35 * 
°∫˝y
(*,c⁄° *, 
__kî√l_size_t
);

37 #i‚de‡
__HAVE_ARCH_STRCAT


38 * 
°rˇt
(*, const *);

40 #i‚de‡
__HAVE_ARCH_STRNCAT


41 * 
°∫ˇt
(*, c⁄° *, 
__kî√l_size_t
);

43 #i‚de‡
__HAVE_ARCH_STRCMP


44 
°rcmp
(const *,const *);

46 #i‚de‡
__HAVE_ARCH_STRNCMP


47 
°∫cmp
(c⁄° *,c⁄° *,
__kî√l_size_t
);

49 #i‚de‡
__HAVE_ARCH_STRNICMP


50 
°∫icmp
(c⁄° *, c⁄° *, 
__kî√l_size_t
);

52 #i‚de‡
__HAVE_ARCH_STRCHR


53 * 
°rchr
(const *,);

55 #i‚de‡
__HAVE_ARCH_STRRCHR


56 * 
°ºchr
(const *,);

58 #i‚de‡
__HAVE_ARCH_STRSTR


59 * 
°r°r
(const *,const *);

61 #i‚de‡
__HAVE_ARCH_STRLEN


62 
__kî√l_size_t
 
°æí
(const *);

64 #i‚de‡
__HAVE_ARCH_STRNLEN


65 
__kî√l_size_t
 
°∫Àn
(const *,__kernel_size_t);

68 #i‚de‡
__HAVE_ARCH_MEMSET


69 * 
mem£t
(*,,
__kî√l_size_t
);

71 #i‚de‡
__HAVE_ARCH_MEMCPY


72 * 
mem˝y
(*,c⁄° *,
__kî√l_size_t
);

74 #i‚de‡
__HAVE_ARCH_MEMMOVE


75 * 
memmove
(*,c⁄° *,
__kî√l_size_t
);

77 #i‚de‡
__HAVE_ARCH_MEMSCAN


78 * 
memsˇn
(*,,
__kî√l_size_t
);

80 #i‚de‡
__HAVE_ARCH_MEMCMP


81 
memcmp
(c⁄° *,c⁄° *,
__kî√l_size_t
);

83 #i‚de‡
__HAVE_ARCH_MEMCHR


84 * 
memchr
(c⁄° *,,
__kî√l_size_t
);

87 #ifde‡
__˝lu•lus


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
__BEGIN_NAMESPACE_STD


46 
_IO_FILE
 
	tFILE
;

47 
	g__END_NAMESPACE_STD


48 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

49 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

50 || 
deföed
 
__USE_POSIX2


51 
	$__USING_NAMESPACE_STD
(
FILE
)

54 
	#__FILE_deföed
 1

	)

56 #undef 
__√ed_FILE


59 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


62 
_IO_FILE
 
	t__FILE
;

64 
	#____FILE_deföed
 1

	)

66 #undef 
__√ed___FILE


69 #ifdef 
_STDIO_H


70 
	#_STDIO_USES_IOSTREAM


	)

72 
	~<libio.h
>

74 #ifde‡
__USE_XOPEN


75 #ifde‡
__GNUC__


76 #i‚de‡
_VA_LIST_DEFINED


77 
_G_va_li°
 
	tva_li°
;

78 
	#_VA_LIST_DEFINED


	)

81 
	~<°d¨g.h
>

86 
__BEGIN_NAMESPACE_STD


87 #i‚de‡
__USE_FILE_OFFSET64


88 
_G_Âos_t
 
	tÂos_t
;

90 
_G_Âos64_t
 
	tÂos_t
;

92 
__END_NAMESPACE_STD


93 #ifde‡
__USE_LARGEFILE64


94 
_G_Âos64_t
 
	tÂos64_t
;

98 
	#_IOFBF
 0

	)

99 
	#_IOLBF
 1

	)

100 
	#_IONBF
 2

	)

104 #i‚de‡
BUFSIZ


105 
	#BUFSIZ
 
_IO_BUFSIZ


	)

111 #i‚de‡
EOF


112 
	#EOF
 (-1)

	)

118 
	#SEEK_SET
 0

	)

119 
	#SEEK_CUR
 1

	)

120 
	#SEEK_END
 2

	)

123 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


125 
	#P_tmpdú
 "/tmp"

	)

138 
	~<bôs/°dio_lim.h
>

142 
_IO_FILE
 *
°dö
;

143 
_IO_FILE
 *
°dout
;

144 
_IO_FILE
 *
°dîr
;

145 #ifde‡
__STDC__


147 
	#°dö
 
°dö


	)

148 
	#°dout
 
°dout


	)

149 
	#°dîr
 
°dîr


	)

152 
__BEGIN_NAMESPACE_STD


154 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

156 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

157 
__END_NAMESPACE_STD


160 
__BEGIN_NAMESPACE_STD


162 #i‚de‡
__USE_FILE_OFFSET64


163 
FILE
 *
	$tmpfûe
 (Ë
__THROW
;

165 #ifde‡
__REDIRECT


166 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (Ë
__THROW
, 
tmpfûe64
);

168 
	#tmpfûe
 
tmpfûe64


	)

173 *
	$tm≤am
 (*
__s
Ë
__THROW
;

174 
__END_NAMESPACE_STD


176 #ifde‡
__USE_LARGEFILE64


177 
FILE
 *
	$tmpfûe64
 (Ë
__THROW
;

180 #ifde‡
__USE_MISC


183 *
	$tm≤am_r
 (*
__s
Ë
__THROW
;

187 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


195 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

196 
__THROW
 
__©åibuã_mÆloc__
;

200 
__BEGIN_NAMESPACE_STD


202 
	$f˛o£
 (
FILE
 *
__°ªam
Ë
__THROW
;

204 
	$fÊush
 (
FILE
 *
__°ªam
Ë
__THROW
;

205 
__END_NAMESPACE_STD


207 #ifde‡
__USE_MISC


209 
	$fÊush_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

212 #ifde‡
__USE_GNU


214 
	$f˛o£Æl
 (Ë
__THROW
;

218 
__BEGIN_NAMESPACE_STD


219 #i‚de‡
__USE_FILE_OFFSET64


221 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

222 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__THROW
;

224 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

225 
__c⁄°
 *
__ª°ri˘
 
__modes
,

226 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

228 #ifde‡
__REDIRECT


229 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

230 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__THROW
,

231 
f›í64
);

232 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

233 
__c⁄°
 *
__ª°ri˘
 
__modes
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
,

235 
‰e›í64
);

237 
	#f›í
 
f›í64


	)

238 
	#‰e›í
 
‰e›í64


	)

241 
__END_NAMESPACE_STD


242 #ifde‡
__USE_LARGEFILE64


243 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

244 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__THROW
;

245 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

246 
__c⁄°
 *
__ª°ri˘
 
__modes
,

247 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

250 #ifdef 
__USE_POSIX


252 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
;

255 #ifdef 
__USE_GNU


258 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

259 
__c⁄°
 *
__ª°ri˘
 
__modes
,

260 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
;

263 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
Ë
__THROW
;

268 
FILE
 *
	$›í_mem°ªam
 (**
__ª°ri˘
 
__buÊoc
,

269 
size_t
 *
__ª°ri˘
 
__sizñoc
Ë
__THROW
;

273 
__BEGIN_NAMESPACE_STD


276 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

280 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

281 
__modes
, 
size_t
 
__n
Ë
__THROW
;

282 
__END_NAMESPACE_STD


284 #ifdef 
__USE_BSD


287 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

288 
size_t
 
__size
Ë
__THROW
;

291 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

295 
__BEGIN_NAMESPACE_STD


297 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

298 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

300 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

302 
	$•rötf
 (*
__ª°ri˘
 
__s
,

303 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

306 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

307 
_G_va_li°
 
__¨g
Ë
__THROW
;

309 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

310 
__THROW
;

312 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

313 
_G_va_li°
 
__¨g
Ë
__THROW
;

314 
__END_NAMESPACE_STD


316 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


317 
__BEGIN_NAMESPACE_C99


319 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

320 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

321 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

323 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

324 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

325 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

326 
__END_NAMESPACE_C99


329 #ifde‡
__USE_GNU


332 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

333 
_G_va_li°
 
__¨g
)

334 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

335 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

336 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

337 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

338 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

339 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

340 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

343 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

344 
_G_va_li°
 
__¨g
)

345 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

346 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

347 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

351 
__BEGIN_NAMESPACE_STD


353 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

354 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

356 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

358 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

359 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

360 
__END_NAMESPACE_STD


362 #ifdef 
__USE_ISOC99


363 
__BEGIN_NAMESPACE_C99


365 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

366 
_G_va_li°
 
__¨g
)

367 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

370 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

371 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 1, 0)));

374 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

375 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

376 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

377 
__END_NAMESPACE_C99


381 
__BEGIN_NAMESPACE_STD


383 
	$fgëc
 (
FILE
 *
__°ªam
Ë
__THROW
;

384 
	$gëc
 (
FILE
 *
__°ªam
Ë
__THROW
;

387 
	$gëch¨
 (Ë
__THROW
;

388 
__END_NAMESPACE_STD


392 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

394 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


396 
	$gëc_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

397 
	$gëch¨_u∆ocked
 (Ë
__THROW
;

400 #ifde‡
__USE_MISC


402 
	$fgëc_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

406 
__BEGIN_NAMESPACE_STD


408 
	$Âutc
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW
;

409 
	$putc
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW
;

412 
	$putch¨
 (
__c
Ë
__THROW
;

413 
__END_NAMESPACE_STD


417 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

419 #ifde‡
__USE_MISC


421 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW
;

424 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


426 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW
;

427 
	$putch¨_u∆ocked
 (
__c
Ë
__THROW
;

431 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


433 
	$gëw
 (
FILE
 *
__°ªam
Ë
__THROW
;

436 
	$putw
 (
__w
, 
FILE
 *
__°ªam
Ë
__THROW
;

440 
__BEGIN_NAMESPACE_STD


442 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

443 
__THROW
;

447 *
	$gës
 (*
__s
Ë
__THROW
;

448 
__END_NAMESPACE_STD


450 #ifde‡
__USE_GNU


452 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

453 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

457 #ifdef 
__USE_GNU


463 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

464 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

465 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

466 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

467 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

468 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

471 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

472 
size_t
 *
__ª°ri˘
 
__n
,

473 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

477 
__BEGIN_NAMESPACE_STD


479 
	$Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
)

480 
__THROW
;

483 
	$puts
 (
__c⁄°
 *
__s
Ë
__THROW
;

487 
	$ungëc
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW
;

491 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

492 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

494 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

495 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__THROW
;

496 
__END_NAMESPACE_STD


498 #ifde‡
__USE_GNU


500 
	$Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

501 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

504 #ifde‡
__USE_MISC


506 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

507 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

508 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

509 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

513 
__BEGIN_NAMESPACE_STD


515 
	$f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
Ë
__THROW
;

517 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__THROW
;

519 
	$ªwöd
 (
FILE
 *
__°ªam
Ë
__THROW
;

520 
__END_NAMESPACE_STD


527 #ifde‡
__USE_LARGEFILE


528 #i‚de‡
__USE_FILE_OFFSET64


530 
	$f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
Ë
__THROW
;

532 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__THROW
;

534 #ifde‡
__REDIRECT


535 
	`__REDIRECT
 (
f£eko
,

536 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
Ë
__THROW
,

537 
f£eko64
);

538 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
Ë
__THROW
, 
·ñlo64
);

540 
	#f£eko
 
f£eko64


	)

541 
	#·ñlo
 
·ñlo64


	)

546 
__BEGIN_NAMESPACE_STD


547 #i‚de‡
__USE_FILE_OFFSET64


549 
	$fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
)

550 
__THROW
;

552 
	$f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
Ë
__THROW
;

554 #ifde‡
__REDIRECT


555 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

556 
Âos_t
 *
__ª°ri˘
 
__pos
Ë
__THROW
, 
fgëpos64
);

557 
	`__REDIRECT
 (
f£ços
,

558 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
Ë
__THROW
,

559 
f£ços64
);

561 
	#fgëpos
 
fgëpos64


	)

562 
	#f£ços
 
f£ços64


	)

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_LARGEFILE64


568 
	$f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
Ë
__THROW
;

569 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__THROW
;

570 
	$fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
)

571 
__THROW
;

572 
	$f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
Ë
__THROW
;

575 
__BEGIN_NAMESPACE_STD


577 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

579 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
;

581 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
;

582 
__END_NAMESPACE_STD


584 #ifde‡
__USE_MISC


586 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

587 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

588 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

592 
__BEGIN_NAMESPACE_STD


594 
	$≥º‹
 (
__c⁄°
 *
__s
Ë
__THROW
;

595 
__END_NAMESPACE_STD


601 
	~<bôs/sys_îæi°.h
>

604 #ifdef 
__USE_POSIX


606 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
;

609 #ifde‡
__USE_MISC


611 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

615 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

616 
deföed
 
__USE_MISC
)

618 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__THROW
;

621 
	$p˛o£
 (
FILE
 *
__°ªam
Ë
__THROW
;

625 #ifdef 
__USE_POSIX


627 *
	$˘îmid
 (*
__s
Ë
__THROW
;

631 #ifde‡
__USE_XOPEN


633 *
	$cu£rid
 (*
__s
Ë
__THROW
;

637 #ifdef 
__USE_GNU


638 
ob°ack
;

641 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

642 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

644 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

645 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

646 
_G_va_li°
 
__¨gs
)

647 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

651 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


655 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

659 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

662 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

665 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


669 
	#__√ed_gë›t


	)

670 
	~<gë›t.h
>

675 #ifde‡
__USE_EXTERN_INLINES


676 
	~<bôs/°dio.h
>

679 
__END_DECLS


	@/usr/include/sys/stat.h

23 #i‚def 
_SYS_STAT_H


24 
	#_SYS_STAT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 #ifde‡
__USE_XOPEN


31 
	#__√ed_time_t


	)

32 
	~<time.h
>

36 #i‚de‡
__dev_t_deföed


37 
__dev_t
 
	tdev_t
;

38 
	#__dev_t_deföed


	)

41 #i‚de‡
__gid_t_deföed


42 
__gid_t
 
	tgid_t
;

43 
	#__gid_t_deföed


	)

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

55 #i‚de‡
__mode_t_deföed


56 
__mode_t
 
	tmode_t
;

57 
	#__mode_t_deföed


	)

60 #i‚de‡
__∆ök_t_deföed


61 
__∆ök_t
 
	t∆ök_t
;

62 
	#__∆ök_t_deföed


	)

65 #i‚de‡
__off_t_deföed


66 #i‚de‡
__USE_FILE_OFFSET64


67 
__off_t
 
	toff_t
;

69 
__off64_t
 
	toff_t
;

71 
	#__off_t_deföed


	)

74 #i‚de‡
__uid_t_deföed


75 
__uid_t
 
	tuid_t
;

76 
	#__uid_t_deföed


	)

80 #ifde‡
__USE_UNIX98


81 #i‚de‡
__blk˙t_t_deföed


82 #i‚de‡
__USE_FILE_OFFSET64


83 
__blk˙t_t
 
	tblk˙t_t
;

85 
__blk˙t64_t
 
	tblk˙t_t
;

87 
	#__blk˙t_t_deföed


	)

90 #i‚de‡
__blksize_t_deföed


91 
__blksize_t
 
	tblksize_t
;

92 
	#__blksize_t_deföed


	)

96 
	g__BEGIN_DECLS


98 
	~<bôs/°©.h
>

100 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


101 
	#S_IFMT
 
__S_IFMT


	)

102 
	#S_IFDIR
 
__S_IFDIR


	)

103 
	#S_IFCHR
 
__S_IFCHR


	)

104 
	#S_IFBLK
 
__S_IFBLK


	)

105 
	#S_IFREG
 
__S_IFREG


	)

106 #ifde‡
__S_IFIFO


107 
	#S_IFIFO
 
__S_IFIFO


	)

109 #ifde‡
__S_IFLNK


110 
	#S_IFLNK
 
__S_IFLNK


	)

112 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K
) \

113 && 
deföed
 
	g__S_IFSOCK


114 
	#S_IFSOCK
 
__S_IFSOCK


	)

120 
	#__S_ISTYPE
(
mode
, 
mask
) (((modeË& 
__S_IFMT
Ë=(mask))

	)

122 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

123 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

124 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

125 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

126 #ifde‡
__S_IFIFO


127 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

129 #ifde‡
__S_IFLNK


130 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

133 #ifdef 
__USE_BSD


134 #i‚de‡
__S_IFLNK


135 
	#S_ISLNK
(
mode
Ë0

	)

137 #ifde‡
__S_IFSOCK


138 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

146 #ifdef 
__USE_POSIX199309


147 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

148 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

149 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

155 
	#S_ISUID
 
__S_ISUID


	)

156 
	#S_ISGID
 
__S_ISGID


	)

158 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


160 
	#S_ISVTX
 
__S_ISVTX


	)

163 
	#S_IRUSR
 
__S_IREAD


	)

164 
	#S_IWUSR
 
__S_IWRITE


	)

165 
	#S_IXUSR
 
__S_IEXEC


	)

167 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

169 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


170 
	#S_IREAD
 
S_IRUSR


	)

171 
	#S_IWRITE
 
S_IWUSR


	)

172 
	#S_IEXEC
 
S_IXUSR


	)

175 
	#S_IRGRP
 (
S_IRUSR
 >> 3)

	)

176 
	#S_IWGRP
 (
S_IWUSR
 >> 3)

	)

177 
	#S_IXGRP
 (
S_IXUSR
 >> 3)

	)

179 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

181 
	#S_IROTH
 (
S_IRGRP
 >> 3)

	)

182 
	#S_IWOTH
 (
S_IWGRP
 >> 3)

	)

183 
	#S_IXOTH
 (
S_IXGRP
 >> 3)

	)

185 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

188 #ifdef 
__USE_BSD


190 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

191 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

192 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
Ë

	)

194 
	#S_BLKSIZE
 512

	)

198 #i‚de‡
__USE_FILE_OFFSET64


200 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

201 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

205 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
;

207 #ifde‡
__REDIRECT


208 
	`__REDIRECT
 (
°©
,

209 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
,

211 
°©64
);

212 
	`__REDIRECT
 (
f°©
, (
__fd
, 
°©
 *
__buf
Ë
__THROW
, 
f°©64
);

214 
	#°©
 
°©64


	)

215 
	#f°©
 
f°©64


	)

218 #ifde‡
__USE_LARGEFILE64


219 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

221 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
;

224 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


225 #i‚de‡
__USE_FILE_OFFSET64


228 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

229 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

231 #ifde‡
__REDIRECT


232 
	`__REDIRECT
 (
l°©
,

233 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

234 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
,

235 
l°©64
);

237 
	#l°©
 
l°©64


	)

240 #ifde‡
__USE_LARGEFILE64


241 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

242 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

249 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
__THROW
;

252 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


253 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

259 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

261 #ifdef 
__USE_GNU


264 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

268 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
Ë
__THROW
;

273 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


274 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

275 
__THROW
;

280 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
Ë
__THROW
;

297 #i‚de‡
_STAT_VER


298 
	#_STAT_VER
 0

	)

300 #i‚de‡
_MKNOD_VER


301 
	#_MKNOD_VER
 0

	)

305 #i‚de‡
__USE_FILE_OFFSET64


306 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
Ë
__THROW
;

307 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

308 
°©
 *
__°©_buf
Ë
__THROW
;

309 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

310 
°©
 *
__°©_buf
Ë
__THROW
;

312 #ifde‡
__REDIRECT


313 
	`__REDIRECT
 (
__fx°©
, (
__vî
, 
__fûdes
,

314 
°©
 *
__°©_buf
Ë
__THROW
,

315 
__fx°©64
);

316 
	`__REDIRECT
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

317 
°©
 *
__°©_buf
Ë
__THROW
, 
__x°©64
);

318 
	`__REDIRECT
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

319 
°©
 *
__°©_buf
Ë
__THROW
,

320 
__lx°©64
);

323 
	#__fx°©
 
__fx°©64


	)

324 
	#__x°©
 
__x°©64


	)

325 
	#__lx°©
 
__lx°©64


	)

329 #ifde‡
__USE_LARGEFILE64


330 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

331 
__THROW
;

332 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

333 
°©64
 *
__°©_buf
Ë
__THROW
;

334 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

335 
°©64
 *
__°©_buf
Ë
__THROW
;

337 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

338 
__dev_t
 *
__dev
Ë
__THROW
;

340 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

343 
__ölöe__
 
	$°©
 (
__c⁄°
 *
__∑th
,

344 
°©
 *
__°©buf
Ë
__THROW


346  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

347 
	}
}

349 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


350 
__ölöe__
 
	$l°©
 (
__c⁄°
 *
__∑th
,

351 
°©
 *
__°©buf
Ë
__THROW


353  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

354 
	}
}

357 
__ölöe__
 
	$f°©
 (
__fd
, 
°©
 *
__°©buf
Ë
__THROW


359  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

360 
	}
}

362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


363 
__ölöe__
 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

364 
__dev_t
 
__dev
Ë
__THROW


366  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

367 
	}
}

370 #i‡
deföed
 
__USE_LARGEFILE64
 \

371 && (! 
deföed
 
__USE_FILE_OFFSET64
 \

372 || (
deföed
 
__REDIRECT
 && deföed 
__OPTIMIZE__
))

373 
__ölöe__
 
	$°©64
 (
__c⁄°
 *
__∑th
,

374 
°©64
 *
__°©buf
Ë
__THROW


376  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

377 
	}
}

379 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


380 
__ölöe__
 
	$l°©64
 (
__c⁄°
 *
__∑th
,

381 
°©64
 *
__°©buf
Ë
__THROW


383  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

384 
	}
}

387 
__ölöe__
 
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
Ë
__THROW


389  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

390 
	}
}

395 
__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #ifde‡
__USE_XOPEN


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__GLIBC_HAVE_LONG_LONG


166 
__exãnsi⁄__
 
	töt64_t
;

171 
	tu_öt8_t
;

172 
	tu_öt16_t
;

173 
	tu_öt32_t
;

174 #i‡
__GLIBC_HAVE_LONG_LONG


175 
__exãnsi⁄__
 
	tu_öt64_t
;

178 
	tªgi°î_t
;

183 
	#__ötN_t
(
N
, 
MODE
) \

184 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

185 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

186 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

188 #i‚de‡
	t__öt8_t_deföed


189 
	t__öt8_t_deföed


	)

190 
	t__ötN_t
 (8, 
	t__QI__
);

191 
__ötN_t
 (16, 
__HI__
);

192 
__ötN_t
 (32, 
__SI__
);

193 
__ötN_t
 (64, 
__DI__
);

196 
__u_ötN_t
 (8, 
__QI__
);

197 
__u_ötN_t
 (16, 
__HI__
);

198 
__u_ötN_t
 (32, 
__SI__
);

199 
__u_ötN_t
 (64, 
__DI__
);

201 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

207 
	#__BIT_TYPES_DEFINED__
 1

	)

210 #ifdef 
__USE_BSD


212 
	~<ídün.h
>

215 
	~<sys/£À˘.h
>

218 
	~<sys/sysma¸os.h
>

222 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


223 
__blksize_t
 
	tblksize_t
;

224 
	#__blksize_t_deföed


	)

228 #i‚de‡
__USE_FILE_OFFSET64


229 #i‚de‡
__blk˙t_t_deföed


230 
__blk˙t_t
 
	tblk˙t_t
;

231 
	#__blk˙t_t_deföed


	)

233 #i‚de‡
__fsblk˙t_t_deföed


234 
__fsblk˙t_t
 
	tfsblk˙t_t
;

235 
	#__fsblk˙t_t_deföed


	)

237 #i‚de‡
__fsfû˙t_t_deföed


238 
__fsfû˙t_t
 
	tfsfû˙t_t
;

239 
	#__fsfû˙t_t_deföed


	)

242 #i‚de‡
__blk˙t_t_deföed


243 
__blk˙t64_t
 
	tblk˙t_t
;

244 
	#__blk˙t_t_deföed


	)

246 #i‚de‡
__fsblk˙t_t_deföed


247 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

248 
	#__fsblk˙t_t_deföed


	)

250 #i‚de‡
__fsfû˙t_t_deföed


251 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

252 
	#__fsfû˙t_t_deföed


	)

256 #ifde‡
__USE_LARGEFILE64


257 
__blk˙t64_t
 
	tblk˙t64_t
;

258 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

259 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

262 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #undef 
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #undef 
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #undef 
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #undef 
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_time•ec
)

112 
	#__time•ec_deföed
 1

	)

116 
	stime•ec


118 
__time_t
 
tv_£c
;

119 
tv_n£c
;

123 #undef 
__√ed_time•ec


126 #ifdef 
_TIME_H


127 
__BEGIN_NAMESPACE_STD


129 
	stm


131 
tm_£c
;

132 
tm_mö
;

133 
tm_hour
;

134 
tm_mday
;

135 
tm_m⁄
;

136 
tm_yór
;

137 
tm_wday
;

138 
tm_yday
;

139 
tm_isd°
;

141 #ifdef 
__USE_BSD


142 
tm_gmtoff
;

143 
__c⁄°
 *
tm_z⁄e
;

145 
__tm_gmtoff
;

146 
__c⁄°
 *
__tm_z⁄e
;

149 
__END_NAMESPACE_STD


150 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


151 
	$__USING_NAMESPACE_STD
(
tm
)

155 #ifde‡
__USE_POSIX199309


157 
	sôimî•ec


159 
time•ec
 
ô_öãrvÆ
;

160 
time•ec
 
ô_vÆue
;

164 
sigevít
;

168 #ifde‡
__USE_XOPEN2K


169 #i‚de‡
__pid_t_deföed


170 
__pid_t
 
	tpid_t
;

171 
	#__pid_t_deföed


	)

176 
__BEGIN_NAMESPACE_STD


179 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

182 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

185 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

186 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

189 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

195 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

196 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

197 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN


203 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

204 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

205 
__THROW
;

208 #ifde‡
__USE_GNU


211 
	~<xloˇÀ.h
>

213 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

214 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

215 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

216 
__loˇÀ_t
 
__loc
Ë
__THROW
;

218 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

219 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

224 
__BEGIN_NAMESPACE_STD


227 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

231 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

232 
__END_NAMESPACE_STD


234 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


237 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

238 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

242 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

246 
__BEGIN_NAMESPACE_STD


249 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

252 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

253 
__END_NAMESPACE_STD


255 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


260 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

261 *
__ª°ri˘
 
__buf
Ë
__THROW
;

264 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

265 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
__tz«me
[2];

271 
__daylight
;

272 
__timez⁄e
;

275 #ifdef 
__USE_POSIX


277 *
tz«me
[2];

281 
	$tz£t
 (Ë
__THROW
;

284 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


285 
daylight
;

286 
timez⁄e
;

289 #ifde‡
__USE_SVID


292 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

298 
	#__i¶óp
(
yór
) \

299 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

302 #ifde‡
__USE_MISC


307 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

310 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

313 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

317 #ifde‡
__USE_POSIX199309


319 
	$«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

320 
time•ec
 *
__ªmaöög
Ë
__THROW
;

324 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

327 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

330 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

331 
__THROW
;

333 #ifde‡
__USE_XOPEN2K


335 
	$˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

336 
__c⁄°
 
time•ec
 *
__ªq
,

337 
time•ec
 *
__ªm
Ë
__THROW
;

340 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

345 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

346 
sigevít
 *
__ª°ri˘
 
__evp
,

347 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

350 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

353 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

354 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

355 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

358 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

359 
__THROW
;

362 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

366 #ifde‡
__USE_XOPEN_EXTENDED


378 
gëd©e_îr
;

384 
tm
 *
	$gëd©e
 (
__c⁄°
 *
__°rög
Ë
__THROW
;

387 #ifde‡
__USE_GNU


393 
	$gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

394 
tm
 *
__ª°ri˘
 
__ªsbuÂ
Ë
__THROW
;

397 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


35 
	#_POSIX_VERSION
 199506L

	)

41 
	#_POSIX2_C_VERSION
 199209L

	)

44 
	#_POSIX2_VERSION
 199209L

	)

48 
	#_POSIX2_C_BIND
 1

	)

52 
	#_POSIX2_C_DEV
 1

	)

56 
	#_POSIX2_SW_DEV
 1

	)

60 
	#_POSIX2_LOCALEDEF
 1

	)

63 #ifde‡
__USE_UNIX98


64 
	#_XOPEN_VERSION
 500

	)

66 
	#_XOPEN_VERSION
 4

	)

70 
	#_XOPEN_XCU_VERSION
 4

	)

73 
	#_XOPEN_XPG2
 1

	)

74 
	#_XOPEN_XPG3
 1

	)

75 
	#_XOPEN_XPG4
 1

	)

78 
	#_XOPEN_UNIX
 1

	)

81 
	#_XOPEN_CRYPT
 1

	)

85 
	#_XOPEN_ENH_I18N
 1

	)

88 
	#_XOPEN_LEGACY
 1

	)

175 
	~<bôs/posix_›t.h
>

178 #ifde‡
__USE_UNIX98


179 
	~<bôs/ívú⁄míts.h
>

183 
	#STDIN_FILENO
 0

	)

184 
	#STDOUT_FILENO
 1

	)

185 
	#STDERR_FILENO
 2

	)

190 
	~<bôs/ty≥s.h
>

192 #i‚def 
__ssize_t_deföed


193 
__ssize_t
 
	tssize_t
;

194 
	#__ssize_t_deföed


	)

197 
	#__√ed_size_t


	)

198 
	#__√ed_NULL


	)

199 
	~<°ddef.h
>

201 #ifde‡
__USE_XOPEN


204 #i‚de‡
__gid_t_deföed


205 
__gid_t
 
	tgid_t
;

206 
	#__gid_t_deföed


	)

209 #i‚de‡
__uid_t_deföed


210 
__uid_t
 
	tuid_t
;

211 
	#__uid_t_deföed


	)

214 #i‚de‡
__off_t_deföed


215 #i‚de‡
__USE_FILE_OFFSET64


216 
__off_t
 
	toff_t
;

218 
__off64_t
 
	toff_t
;

220 
	#__off_t_deföed


	)

222 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


223 
__off64_t
 
	toff64_t
;

224 
	#__off64_t_deföed


	)

227 #i‚de‡
__u£c⁄ds_t_deföed


228 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

229 
	#__u£c⁄ds_t_deföed


	)

232 #i‚de‡
__pid_t_deföed


233 
__pid_t
 
	tpid_t
;

234 
	#__pid_t_deföed


	)

238 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


239 #i‚de‡
__öçå_t_deföed


240 
__öçå_t
 
	töçå_t
;

241 
	#__öçå_t_deföed


	)

245 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


246 #i‚de‡
__sockÀn_t_deföed


247 
__sockÀn_t
 
	tsockÀn_t
;

248 
	#__sockÀn_t_deföed


	)

254 
	#R_OK
 4

	)

255 
	#W_OK
 2

	)

256 
	#X_OK
 1

	)

257 
	#F_OK
 0

	)

260 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
;

262 #ifde‡
__USE_GNU


265 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
;

270 #i‚def 
_STDIO_H


271 
	#SEEK_SET
 0

	)

272 
	#SEEK_CUR
 1

	)

273 
	#SEEK_END
 2

	)

276 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


278 
	#L_SET
 
SEEK_SET


	)

279 
	#L_INCR
 
SEEK_CUR


	)

280 
	#L_XTND
 
SEEK_END


	)

289 #i‚de‡
__USE_FILE_OFFSET64


290 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

292 #ifde‡
__REDIRECT


293 
__off64_t
 
	`__REDIRECT
 (
l£ek
,

294 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

295 
__THROW
,

296 
l£ek64
);

298 
	#l£ek
 
l£ek64


	)

301 #ifde‡
__USE_LARGEFILE64


302 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

306 
	$˛o£
 (
__fd
Ë
__THROW
;

310 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__THROW
;

313 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__THROW
;

315 #ifde‡
__USE_UNIX98


316 #i‚de‡
__USE_FILE_OFFSET64


317 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

318 
__THROW
;

319 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

320 
__off_t
 
__off£t
Ë
__THROW
;

322 #ifde‡
__REDIRECT


323 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

324 
__off64_t
 
__off£t
Ë
__THROW
,

325 
¥ód64
);

326 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

327 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

328 
__THROW
,

329 
pwrôe64
);

331 
	#¥ód
 
¥ód64


	)

332 
	#pwrôe
 
pwrôe64


	)

336 #ifde‡
__USE_LARGEFILE64


340 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

341 
__off64_t
 
__off£t
Ë
__THROW
;

344 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

345 
__off64_t
 
__off£t
Ë
__THROW
;

353 
	`pùe
 (
__pùedes
[2]Ë
__THROW
;

362 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

371 
	$¶ìp
 (
__£c⁄ds
Ë
__THROW
;

373 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


378 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

379 
__THROW
;

383 
	$u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
Ë
__THROW
;

389 
	$∑u£
 (Ë
__THROW
;

393 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

394 
__THROW
;

396 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


398 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
;

403 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

404 
__THROW
;

409 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
;

411 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


413 
	$fchdú
 (
__fd
Ë
__THROW
;

423 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
;

425 #ifdef 
__USE_GNU


429 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

432 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


436 *
	$gëwd
 (*
__buf
Ë
__THROW
;

441 
	$dup
 (
__fd
Ë
__THROW
;

444 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

447 **
__ívú⁄
;

448 #ifde‡
__USE_GNU


449 **
ívú⁄
;

455 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

456 *
__c⁄°
 
__ívp
[]Ë
__THROW
;

458 #ifde‡
__USE_GNU


461 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

462 
__THROW
;

467 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[]Ë
__THROW
;

471 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...Ë
__THROW
;

475 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...Ë
__THROW
;

479 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[]Ë
__THROW
;

484 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...Ë
__THROW
;

487 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


489 
	$ni˚
 (
__öc
Ë
__THROW
;

494 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

500 
	~<bôs/c⁄‚ame.h
>

503 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
Ë
__THROW
;

506 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

509 
	$sysc⁄f
 (
__«me
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

511 #ifdef 
__USE_POSIX2


513 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

518 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

521 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

525 #i‚de‡
__FAVOR_BSD


526 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

528 #ifde‡
__REDIRECT


529 
__pid_t
 
	`__REDIRECT
 (
gëpgΩ
, (__pid_à
__pid
Ë
__THROW
, 
__gëpgid
);

531 
	#gëpgΩ
 
__gëpgid


	)

536 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

537 #ifde‡
__USE_XOPEN_EXTENDED


538 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

545 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

547 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


558 #i‚de‡
__FAVOR_BSD


562 
	$£çgΩ
 (Ë
__THROW
;

567 #ifde‡
__REDIRECT


568 
	`__REDIRECT
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
Ë
__THROW
,

569 
£çgid
);

571 
	#£çgΩ
 
£çgid


	)

580 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

582 #ifde‡
__USE_XOPEN_EXTENDED


584 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

588 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

591 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

594 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

597 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

602 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
;

604 #ifdef 
__USE_GNU


606 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

613 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

615 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


618 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

621 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


623 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

630 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

632 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


635 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


640 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

647 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

649 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


654 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

660 *
	$ây«me
 (
__fd
Ë
__THROW
;

664 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
Ë
__THROW
;

668 
	$ißây
 (
__fd
Ë
__THROW
;

670 #i‡
deföed
 
__USE_BSD
 \

671 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

674 
	$ây¶Ÿ
 (Ë
__THROW
;

679 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
Ë
__THROW
;

681 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


683 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
Ë
__THROW
;

688 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

689 
size_t
 
__Àn
Ë
__THROW
;

693 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
;

696 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
;

700 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

703 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

707 *
	$gëlogö
 (Ë
__THROW
;

708 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_UNIX98


712 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
__THROW
;

715 #ifdef 
__USE_BSD


717 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
;

721 #ifdef 
__USE_POSIX2


725 
	#__√ed_gë›t


	)

726 
	~<gë›t.h
>

730 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


734 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
;

738 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

741 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
Ë
__THROW
;

745 
	$£tho°id
 (
__id
Ë
__THROW
;

751 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
;

752 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
Ë
__THROW
;

758 
	$vh™gup
 (Ë
__THROW
;

761 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
;

769 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

770 
size_t
 
__off£t
, 
__sˇÀ
Ë
__THROW
;

776 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

780 *
	$gëu£rshñl
 (Ë
__THROW
;

781 
	$ídu£rshñl
 (Ë
__THROW
;

782 
	$£tu£rshñl
 (Ë
__THROW
;

788 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
;

792 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

795 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
;

799 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
__THROW
;

803 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


805 
	$fsync
 (
__fd
Ë
__THROW
;

809 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


812 
	$gëho°id
 (Ë
__THROW
;

815 
	$sync
 (Ë
__THROW
;

820 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

824 #i‚de‡
__USE_FILE_OFFSET64


825 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
Ë
__THROW
;

827 #ifde‡
__REDIRECT


828 
	`__REDIRECT
 (
åunˇã
,

829 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
Ë
__THROW
,

830 
åunˇã64
);

832 
	#åunˇã
 
åunˇã64


	)

835 #ifde‡
__USE_LARGEFILE64


836 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
Ë
__THROW
;

840 #i‚de‡
__USE_FILE_OFFSET64


841 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
;

843 #ifde‡
__REDIRECT


844 
	`__REDIRECT
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
,

845 
·runˇã64
);

847 
	#·runˇã
 
·runˇã64


	)

850 #ifde‡
__USE_LARGEFILE64


851 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
;

857 
	$gëdèbÀsize
 (Ë
__THROW
;

862 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


866 
	$brk
 (*
__addr
Ë
__THROW
;

872 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

876 #ifde‡
__USE_MISC


887 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

892 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


901 
	#F_ULOCK
 0

	)

902 
	#F_LOCK
 1

	)

903 
	#F_TLOCK
 2

	)

904 
	#F_TEST
 3

	)

906 #i‚de‡
__USE_FILE_OFFSET64


907 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__THROW
;

909 #ifde‡
__REDIRECT


910 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__THROW
,

911 
lockf64
);

913 
	#lockf
 
lockf64


	)

916 #ifde‡
__USE_LARGEFILE64


917 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__THROW
;

922 #ifde‡
__USE_GNU


927 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

928 (
__exãnsi⁄__
 \

929 ({ 
__ªsu…
; \

930 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

931 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

932 
__ªsu…
; 
	}
}))

	)

935 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


938 
	$fd©async
 (
__fûdes
Ë
__THROW
;

944 #ifdef 
__USE_XOPEN


946 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
Ë
__THROW
;

950 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
;

957 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

958 
ssize_t
 
__n
Ë
__THROW
;

964 #ifde‡
__USE_XOPEN


966 *
	$˘îmid
 (*
__s
Ë
__THROW
;

970 #ifde‡
__USE_POSIX199309


983 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

984 (*
__∑ª¡
) (),

985 (*
__chûd
Ë()Ë
__THROW
;

988 
__END_DECLS


	@/usr/include/asm/mmu.h

1 #i‚de‡
__i386_MMU_H


2 
	#__i386_MMU_H


	)

9 *
	m£gmíts
;

10 
	m˝uvÆid
;

11 } 
	tmm_c⁄ãxt_t
;

	@/usr/include/asm/page.h

1 #i‚de‡
_I386_PAGE_H


2 
	#_I386_PAGE_H


	)

5 
	#PAGE_SHIFT
 12

	)

6 
	#PAGE_SIZE
 (1UL << 
PAGE_SHIFT
)

	)

7 
	#PAGE_MASK
 (~(
PAGE_SIZE
-1))

	)

	@/usr/include/asm/param.h

1 #i‚de‡
_ASMi386_PARAM_H


2 
	#_ASMi386_PARAM_H


	)

4 #i‚de‡
HZ


5 
	#HZ
 100

	)

8 
	#EXEC_PAGESIZE
 4096

	)

10 #i‚de‡
NGROUPS


11 
	#NGROUPS
 32

	)

14 #i‚de‡
NOGROUP


15 
	#NOGROUP
 (-1)

	)

18 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/processor.h

7 #i‚de‡
__ASM_I386_PROCESSOR_H


8 
	#__ASM_I386_PROCESSOR_H


	)

10 
	~<asm/vm86.h
>

11 
	~<asm/m©h_emu.h
>

12 
	~<asm/£gmít.h
>

13 
	~<asm/∑ge.h
>

14 
	~<asm/ty≥s.h
>

15 
	~<asm/sigc⁄ãxt.h
>

16 
	~<asm/˝u„©uª.h
>

17 
	~<löux/c⁄fig.h
>

18 
	~<löux/thªads.h
>

24 
	#cuºít_ãxt_addr
(Ë({ *
pc
; 
	`__asm__
("mov»$1f,%0\n1:":"=g" (pc));Öc; })

	)

32 
	s˝uöfo_x86
 {

33 
__u8
 
	mx86
;

34 
__u8
 
	mx86_víd‹
;

35 
__u8
 
	mx86_modñ
;

36 
__u8
 
	mx86_mask
;

37 
	mwp_w‹ks_ok
;

38 
	mh…_w‹ks_ok
;

39 
	mh¨d_m©h
;

40 
	mrfu
;

41 
	m˝uid_Àvñ
;

42 
__u32
 
	mx86_ˇ∑bûôy
[
NCAPINTS
];

43 
	mx86_víd‹_id
[16];

44 
	mx86_modñ_id
[64];

45 
	mx86_ˇche_size
;

47 
__u16
 
	m˛ockmul
;

48 
	mfdiv_bug
;

49 
	mf00f_bug
;

50 
	mcoma_bug
;

51 
	mlo›s_≥r_jiffy
;

52 *
	mpgd_quick
;

53 *
	mpmd_quick
;

54 *
	m±e_quick
;

55 
	mpgèbÀ_ˇche_sz
;

58 
	#X86_VENDOR_INTEL
 0

	)

59 
	#X86_VENDOR_CYRIX
 1

	)

60 
	#X86_VENDOR_AMD
 2

	)

61 
	#X86_VENDOR_UMC
 3

	)

62 
	#X86_VENDOR_NEXGEN
 4

	)

63 
	#X86_VENDOR_CENTAUR
 5

	)

64 
	#X86_VENDOR_RISE
 6

	)

65 
	#X86_VENDOR_TRANSMETA
 7

	)

66 
	#X86_VENDOR_UNKNOWN
 0xff

	)

72 
˝uöfo_x86
 
boŸ_˝u_d©a
;

73 
tss_°ru˘
 
öô_tss
[
NR_CPUS
];

75 #ifde‡
CONFIG_SMP


76 
˝uöfo_x86
 
˝u_d©a
[];

77 
	#cuºít_˝u_d©a
 
˝u_d©a
[
	`smp_¥o˚ss‹_id
()]

	)

79 
	#˝u_d©a
 &
boŸ_˝u_d©a


	)

80 
	#cuºít_˝u_d©a
 
boŸ_˝u_d©a


	)

83 
	#˝u_has_pge
 (
	`ã°_bô
(
X86_FEATURE_PGE
, 
boŸ_˝u_d©a
.
x86_ˇ∑bûôy
))

	)

84 
	#˝u_has_p£
 (
	`ã°_bô
(
X86_FEATURE_PSE
, 
boŸ_˝u_d©a
.
x86_ˇ∑bûôy
))

	)

85 
	#˝u_has_∑e
 (
	`ã°_bô
(
X86_FEATURE_PAE
, 
boŸ_˝u_d©a
.
x86_ˇ∑bûôy
))

	)

86 
	#˝u_has_tsc
 (
	`ã°_bô
(
X86_FEATURE_TSC
, 
boŸ_˝u_d©a
.
x86_ˇ∑bûôy
))

	)

87 
	#˝u_has_de
 (
	`ã°_bô
(
X86_FEATURE_DE
, 
boŸ_˝u_d©a
.
x86_ˇ∑bûôy
))

	)

88 
	#˝u_has_vme
 (
	`ã°_bô
(
X86_FEATURE_VME
, 
boŸ_˝u_d©a
.
x86_ˇ∑bûôy
))

	)

89 
	#˝u_has_fx§
 (
	`ã°_bô
(
X86_FEATURE_FXSR
, 
boŸ_˝u_d©a
.
x86_ˇ∑bûôy
))

	)

90 
	#˝u_has_xmm
 (
	`ã°_bô
(
X86_FEATURE_XMM
, 
boŸ_˝u_d©a
.
x86_ˇ∑bûôy
))

	)

91 
	#˝u_has_Âu
 (
	`ã°_bô
(
X86_FEATURE_FPU
, 
boŸ_˝u_d©a
.
x86_ˇ∑bûôy
))

	)

92 
	#˝u_has_≠ic
 (
	`ã°_bô
(
X86_FEATURE_APIC
, 
boŸ_˝u_d©a
.
x86_ˇ∑bûôy
))

	)

94 
ign‹e_úq13
;

96 
idítify_˝u
(
˝uöfo_x86
 *);

97 
¥öt_˝u_öfo
(
˝uöfo_x86
 *);

98 
dodgy_tsc
();

103 
	#X86_EFLAGS_CF
 0x00000001

	)

104 
	#X86_EFLAGS_PF
 0x00000004

	)

105 
	#X86_EFLAGS_AF
 0x00000010

	)

106 
	#X86_EFLAGS_ZF
 0x00000040

	)

107 
	#X86_EFLAGS_SF
 0x00000080

	)

108 
	#X86_EFLAGS_TF
 0x00000100

	)

109 
	#X86_EFLAGS_IF
 0x00000200

	)

110 
	#X86_EFLAGS_DF
 0x00000400

	)

111 
	#X86_EFLAGS_OF
 0x00000800

	)

112 
	#X86_EFLAGS_IOPL
 0x00003000

	)

113 
	#X86_EFLAGS_NT
 0x00004000

	)

114 
	#X86_EFLAGS_RF
 0x00010000

	)

115 
	#X86_EFLAGS_VM
 0x00020000

	)

116 
	#X86_EFLAGS_AC
 0x00040000

	)

117 
	#X86_EFLAGS_VIF
 0x00080000

	)

118 
	#X86_EFLAGS_VIP
 0x00100000

	)

119 
	#X86_EFLAGS_ID
 0x00200000

	)

124 
ölöe
 
	$˝uid
(
›
, *
óx
, *
ebx
, *
ecx
, *
edx
)

126 
	`__asm__
("cpuid"

127 : "˜" (*
óx
),

128 "=b" (*
ebx
),

129 "=c" (*
ecx
),

130 "=d" (*
edx
)

131 : "0" (
›
));

132 
	}
}

137 
ölöe
 
	$˝uid_óx
(
›
)

139 
óx
;

141 
	`__asm__
("cpuid"

142 : "˜" (
óx
)

143 : "0" (
›
)

145  
óx
;

146 
	}
}

147 
ölöe
 
	$˝uid_ebx
(
›
)

149 
óx
, 
ebx
;

151 
	`__asm__
("cpuid"

152 : "˜" (
óx
), "=b" (
ebx
)

153 : "0" (
›
)

155  
ebx
;

156 
	}
}

157 
ölöe
 
	$˝uid_ecx
(
›
)

159 
óx
, 
ecx
;

161 
	`__asm__
("cpuid"

162 : "˜" (
óx
), "=c" (
ecx
)

163 : "0" (
›
)

165  
ecx
;

166 
	}
}

167 
ölöe
 
	$˝uid_edx
(
›
)

169 
óx
, 
edx
;

171 
	`__asm__
("cpuid"

172 : "˜" (
óx
), "=d" (
edx
)

173 : "0" (
›
)

175  
edx
;

176 
	}
}

181 
	#X86_CR4_VME
 0x0001

	)

182 
	#X86_CR4_PVI
 0x0002

	)

183 
	#X86_CR4_TSD
 0x0004

	)

184 
	#X86_CR4_DE
 0x0008

	)

185 
	#X86_CR4_PSE
 0x0010

	)

186 
	#X86_CR4_PAE
 0x0020

	)

187 
	#X86_CR4_MCE
 0x0040

	)

188 
	#X86_CR4_PGE
 0x0080

	)

189 
	#X86_CR4_PCE
 0x0100

	)

190 
	#X86_CR4_OSFXSR
 0x0200

	)

191 
	#X86_CR4_OSXMMEXCPT
 0x0400

	)

199 
mmu_¸4_„©uªs
;

201 
ölöe
 
	$£t_ö_¸4
 (
mask
)

203 
mmu_¸4_„©uªs
 |
mask
;

204 
	`__asm__
("movl %%cr4,%%eax\n\t"

207 : : "úg" (
mask
)

209 
	}
}

211 
ölöe
 
	$˛ór_ö_¸4
 (
mask
)

213 
mmu_¸4_„©uªs
 &~
mask
;

214 
	`__asm__
("movl %%cr4,%%eax\n\t"

217 : : "úg" (~
mask
)

219 
	}
}

224 
	#CX86_CCR0
 0xc0

	)

225 
	#CX86_CCR1
 0xc1

	)

226 
	#CX86_CCR2
 0xc2

	)

227 
	#CX86_CCR3
 0xc3

	)

228 
	#CX86_CCR4
 0xe8

	)

229 
	#CX86_CCR5
 0xe9

	)

230 
	#CX86_CCR6
 0xó

	)

231 
	#CX86_CCR7
 0xeb

	)

232 
	#CX86_DIR0
 0x„

	)

233 
	#CX86_DIR1
 0xff

	)

234 
	#CX86_ARR_BASE
 0xc4

	)

235 
	#CX86_RCR_BASE
 0xdc

	)

241 
	#gëCx86
(
ªg
Ë({ 
	`outb
(‘eg), 0x22); 
	`öb
(0x23); })

	)

243 
	#£tCx86
(
ªg
, 
d©a
) do { \

244 
	`outb
((
ªg
), 0x22); \

245 
	`outb
((
d©a
), 0x23); \

246 } 0)

	)

251 #ifde‡
CONFIG_EISA


252 
EISA_bus
;

254 
	#EISA_bus
 (0)

	)

256 
MCA_bus
;

260 
machöe_id
;

261 
machöe_submodñ_id
;

262 
BIOS_ªvisi⁄
;

263 
mˇ_≥¡ium_Êag
;

268 
	#TASK_SIZE
 (
PAGE_OFFSET
)

	)

273 
	#TASK_UNMAPPED_BASE
 (
TASK_SIZE
 / 3)

	)

278 
	#IO_BITMAP_SIZE
 32

	)

279 
	#IO_BITMAP_OFFSET
 
	`off£tof
(
tss_°ru˘
,
io_bôm≠
)

	)

280 
	#INVALID_IO_BITMAP_OFFSET
 0x8000

	)

282 
	si387_fßve_°ru˘
 {

283 
	mcwd
;

284 
	mswd
;

285 
	mtwd
;

286 
	mfù
;

287 
	mfcs
;

288 
	mfoo
;

289 
	mfos
;

290 
	m°_•a˚
[20];

291 
	m°©us
;

294 
	si387_fxßve_°ru˘
 {

295 
	mcwd
;

296 
	mswd
;

297 
	mtwd
;

298 
	mf›
;

299 
	mfù
;

300 
	mfcs
;

301 
	mfoo
;

302 
	mfos
;

303 
	mmxc§
;

304 
	mª£rved
;

305 
	m°_•a˚
[32];

306 
	mxmm_•a˚
[32];

307 
	m∑ddög
[56];

308 } 
__©åibuã__
 ((
Æig√d
 (16)));

310 
	si387_so·_°ru˘
 {

311 
	mcwd
;

312 
	mswd
;

313 
	mtwd
;

314 
	mfù
;

315 
	mfcs
;

316 
	mfoo
;

317 
	mfos
;

318 
	m°_•a˚
[20];

319 
	m·›
, 
	mch™ged
, 
	mlookahód
, 
	mno_upd©e
, 
	mrm
, 
	mÆimô
;

320 
öfo
 *
	möfo
;

321 
	míåy_eù
;

324 
	ui387_uni⁄
 {

325 
i387_fßve_°ru˘
 
	mfßve
;

326 
i387_fxßve_°ru˘
 
	mfxßve
;

327 
i387_so·_°ru˘
 
	mso·
;

331 
	m£g
;

332 } 
	tmm_£gmít_t
;

334 
	stss_°ru˘
 {

335 
	mback_lök
,
	m__blh
;

336 
	me•0
;

337 
	mss0
,
	m__ss0h
;

338 
	me•1
;

339 
	mss1
,
	m__ss1h
;

340 
	me•2
;

341 
	mss2
,
	m__ss2h
;

342 
	m__¸3
;

343 
	meù
;

344 
	meÊags
;

345 
	móx
,
	mecx
,
	medx
,
	mebx
;

346 
	me•
;

347 
	mebp
;

348 
	mesi
;

349 
	medi
;

350 
	mes
, 
	m__esh
;

351 
	mcs
, 
	m__csh
;

352 
	mss
, 
	m__ssh
;

353 
	mds
, 
	m__dsh
;

354 
	mfs
, 
	m__fsh
;

355 
	mgs
, 
	m__gsh
;

356 
	mldt
, 
	m__ldth
;

357 
	måa˚
, 
	mbôm≠
;

358 
	mio_bôm≠
[
IO_BITMAP_SIZE
+1];

362 
	m__ˇchñöe_fûÀr
[5];

365 
	sthªad_°ru˘
 {

366 
	me•0
;

367 
	meù
;

368 
	me•
;

369 
	mfs
;

370 
	mgs
;

372 
	mdebugªg
[8];

374 
	m¸2
, 
	må≠_no
, 
	mîr‹_code
;

376 
i387_uni⁄
 
	mi387
;

378 
vm86_°ru˘
 * 
	mvm86_öfo
;

379 
	ms¸ìn_bôm≠
;

380 
	mv86Êags
, 
	mv86mask
, 
	mv86mode
, 
	mßved_e•0
;

382 
	mi›îm
;

383 
	mio_bôm≠
[
IO_BITMAP_SIZE
+1];

386 
	#INIT_THREAD
 { \

394 }

	)

396 
	#INIT_MMAP
 \

397 { &
öô_mm
, 0, 0, 
NULL
, 
PAGE_SHARED
, 
VM_READ
 | 
VM_WRITE
 | 
VM_EXEC
, 1, NULL, NULL }

	)

399 
	#INIT_TSS
 { \

401 (
öô_°ack
) + () &init_stack, \

402 
__KERNEL_DS
, 0, \

410 
	`__LDT
(0),0, \

411 0, 
INVALID_IO_BITMAP_OFFSET
, \

413 }

	)

415 
	#°¨t_thªad
(
ªgs
, 
√w_eù
, 
√w_e•
) do { \

416 
	`__asm__
("movl %0,%%fs ; movl %0,%%gs": :"r" (0)); \

417 
	`£t_fs
(
USER_DS
); \

418 
ªgs
->
xds
 = 
__USER_DS
; \

419 
ªgs
->
xes
 = 
__USER_DS
; \

420 
ªgs
->
xss
 = 
__USER_DS
; \

421 
ªgs
->
xcs
 = 
__USER_CS
; \

422 
ªgs
->
eù
 = 
√w_eù
; \

423 
ªgs
->
e•
 = 
√w_e•
; \

424 } 0)

	)

427 
	gèsk_°ru˘
;

428 
	gmm_°ru˘
;

431 
ªÀa£_thªad
(
èsk_°ru˘
 *);

435 
kî√l_thªad
((*
‚
)(*), * 
¨g
, 
Êags
);

438 
	`c›y_£gmíts
(
èsk_°ru˘
 *
p
, 
mm_°ru˘
 * 
mm
);

439 
	`ªÀa£_£gmíts
(
mm_°ru˘
 * 
mm
);

444 
ölöe
 
	$thªad_ßved_pc
(
thªad_°ru˘
 *
t
)

446  ((*)
t
->
e•
)[3];

447 
	}
}

449 
gë_wch™
(
èsk_°ru˘
 *
p
);

450 
	#KSTK_EIP
(
tsk
) (((*)(4096+()—sk)))[1019])

	)

451 
	#KSTK_ESP
(
tsk
) (((*)(4096+()—sk)))[1022])

	)

453 
	#THREAD_SIZE
 (2*
PAGE_SIZE
)

	)

454 
	#Æloc_èsk_°ru˘
(Ë((
èsk_°ru˘
 *Ë
	`__gë_‰ì_∑ges
(
GFP_KERNEL
,1))

	)

455 
	#‰ì_èsk_°ru˘
(
p
Ë
	`‰ì_∑ges
((Ë’), 1)

	)

456 
	#gë_èsk_°ru˘
(
tsk
Ë
	`©omic_öc
(&
	`vút_to_∑ge
—sk)->
cou¡
)

	)

458 
	#öô_èsk
 (
öô_èsk_uni⁄
.
èsk
)

	)

459 
	#öô_°ack
 (
öô_èsk_uni⁄
.
°ack
)

	)

461 
	smi¸ocode
 {

462 
	mhdrvî
;

463 
	mªv
;

464 
	md©e
;

465 
	msig
;

466 
	mcksum
;

467 
	mldrvî
;

468 
	mpf
;

469 
	mª£rved
[5];

470 
	mbôs
[500];

474 
	#MICROCODE_IOCFREE
 
	`_IO
('6',0)

	)

477 
ölöe
 
	$ªp_n›
()

479 
__asm__
 
	`__vﬁ©ûe__
("rep;nop");

480 
	}
}

	@/usr/include/asm/ptrace.h

1 #i‚de‡
_I386_PTRACE_H


2 
	#_I386_PTRACE_H


	)

4 
	#EBX
 0

	)

5 
	#ECX
 1

	)

6 
	#EDX
 2

	)

7 
	#ESI
 3

	)

8 
	#EDI
 4

	)

9 
	#EBP
 5

	)

10 
	#EAX
 6

	)

11 
	#DS
 7

	)

12 
	#ES
 8

	)

13 
	#FS
 9

	)

14 
	#GS
 10

	)

15 
	#ORIG_EAX
 11

	)

16 
	#EIP
 12

	)

17 
	#CS
 13

	)

18 
	#EFL
 14

	)

19 
	#UESP
 15

	)

20 
	#SS
 16

	)

21 
	#FRAME_SIZE
 17

	)

26 
	s±_ªgs
 {

27 
	mebx
;

28 
	mecx
;

29 
	medx
;

30 
	mesi
;

31 
	medi
;

32 
	mebp
;

33 
	móx
;

34 
	mxds
;

35 
	mxes
;

36 
	m‹ig_óx
;

37 
	meù
;

38 
	mxcs
;

39 
	meÊags
;

40 
	me•
;

41 
	mxss
;

45 
	#PTRACE_GETREGS
 12

	)

46 
	#PTRACE_SETREGS
 13

	)

47 
	#PTRACE_GETFPREGS
 14

	)

48 
	#PTRACE_SETFPREGS
 15

	)

49 
	#PTRACE_GETFPXREGS
 18

	)

50 
	#PTRACE_SETFPXREGS
 19

	)

52 
	#PTRACE_SETOPTIONS
 21

	)

55 
	#PTRACE_O_TRACESYSGOOD
 0x00000001

	)

	@/usr/include/asm/semaphore.h

1 #i‚de‡
_I386_SEMAPHORE_H


2 
	#_I386_SEMAPHORE_H


	)

4 
	~<löux/lökage.h
>

	@/usr/include/asm/string.h

1 #i‚de‡
_I386_STRING_H_


2 
	#_I386_STRING_H_


	)

	@/usr/include/asm/system.h

1 #i‚de‡
__ASM_SYSTEM_H


2 
	#__ASM_SYSTEM_H


	)

4 
	~<löux/c⁄fig.h
>

5 
	~<löux/kî√l.h
>

6 
	~<asm/£gmít.h
>

7 
	~<löux/bô›s.h
>

10 
	#wbövd
() \

11 
__asm__
 
	`__vﬁ©ûe__
 ("wbövd": : :"mem‹y");

	)

13 
ölöe
 
	$gë_limô
(
£gmít
)

15 
__limô
;

16 
	`__asm__
("lsll %1,%0"

17 :"Ù" (
__limô
):"r" (
£gmít
));

18  
__limô
+1;

19 
	}
}

21 
	#n›
(Ë
__asm__
 
	`__vﬁ©ûe__
 ("n›")

	)

23 
	#xchg
(
±r
,
v
Ë((
	`__ty≥of__
(*’å)))
	`__xchg
(()(v),’å),(*’å))))

	)

25 
	#ès
(
±r
Ë(
	`xchg
(’å),1))

	)

27 
	s__xchg_dummy
 { 
	ma
[100]; };

28 
	#__xg
(
x
Ë((
__xchg_dummy
 *)(x))

	)

40 
ölöe
 
	$__£t_64bô
 (* 
±r
,

41 
low
, 
high
)

43 
__asm__
 
	`__vﬁ©ûe__
 (

50 : "D"(
±r
),

51 "b"(
low
),

52 "c"(
high
)

54 
	}
}

56 
ölöe
 
	$__£t_64bô_c⁄°™t
 (*
±r
,

57 
vÆue
)

59 
	`__£t_64bô
(
±r
,()(
vÆue
), ()((value)>>32ULL));

60 
	}
}

61 
	#Œ_low
(
x
) *(((*)&(x))+0)

	)

62 
	#Œ_high
(
x
) *(((*)&(x))+1)

	)

64 
ölöe
 
	$__£t_64bô_v¨
 (*
±r
,

65 
vÆue
)

67 
	`__£t_64bô
(
±r
,
	`Œ_low
(
vÆue
), 
	`Œ_high
(value));

68 
	}
}

70 
	#£t_64bô
(
±r
,
vÆue
) \

71 (
	`__buûtö_c⁄°™t_p
(
vÆue
) ? \

72 
	`__£t_64bô_c⁄°™t
(
±r
, 
vÆue
) : \

73 
	`__£t_64bô_v¨
(
±r
, 
vÆue
Ë)

	)

75 
	#_£t_64bô
(
±r
,
vÆue
) \

76 (
	`__buûtö_c⁄°™t_p
(
vÆue
) ? \

77 
	`__£t_64bô
(
±r
, ()(
vÆue
), ()((value)>>32ULL) ) : \

78 
	`__£t_64bô
(
±r
, 
	`Œ_low
(
vÆue
), 
	`Œ_high
(vÆue)Ë)

	)

85 
ölöe
 
	$__xchg
(
x
, vﬁ©ûê* 
±r
, 
size
)

87 
size
) {

89 
__asm__
 
	`__vﬁ©ûe__
("xchgb %b0,%1"

90 :"=q" (
x
)

91 :"m" (*
	`__xg
(
±r
)), "0" (
x
)

95 
__asm__
 
	`__vﬁ©ûe__
("xchgw %w0,%1"

96 :"Ù" (
x
)

97 :"m" (*
	`__xg
(
±r
)), "0" (
x
)

101 
__asm__
 
	`__vﬁ©ûe__
("xchgl %0,%1"

102 :"Ù" (
x
)

103 :"m" (*
	`__xg
(
±r
)), "0" (
x
)

107  
x
;

108 
	}
}

116 #ifde‡
CONFIG_X86_CMPXCHG


117 
	#__HAVE_ARCH_CMPXCHG
 1

	)

119 
ölöe
 
	$__cmpxchg
(vﬁ©ûê*
±r
, 
ﬁd
,

120 
√w
, 
size
)

122 
¥ev
;

123 
size
) {

125 
__asm__
 
	`__vﬁ©ûe__
(
LOCK_PREFIX
 "cmpxchgb %b1,%2"

126 : "˜"(
¥ev
)

127 : "q"(
√w
), "m"(*
	`__xg
(
±r
)), "0"(
ﬁd
)

129  
¥ev
;

131 
__asm__
 
	`__vﬁ©ûe__
(
LOCK_PREFIX
 "cmpxchgw %w1,%2"

132 : "˜"(
¥ev
)

133 : "q"(
√w
), "m"(*
	`__xg
(
±r
)), "0"(
ﬁd
)

135  
¥ev
;

137 
__asm__
 
	`__vﬁ©ûe__
(
LOCK_PREFIX
 "cmpxchgl %1,%2"

138 : "˜"(
¥ev
)

139 : "q"(
√w
), "m"(*
	`__xg
(
±r
)), "0"(
ﬁd
)

141  
¥ev
;

143  
ﬁd
;

144 
	}
}

146 
	#cmpxchg
(
±r
,
o
,
n
)\

147 ((
	`__ty≥of__
(*(
±r
)))
	`__cmpxchg
(’å),()(
o
),\

148 ()(
n
),(*(
±r
))))

	)

172 
	#mb
(Ë
__asm__
 
	`__vﬁ©ûe__
 ("lock;ádd»$0,0(%%e•)": : :"mem‹y")

	)

173 
	#rmb
() 
	`mb
()

	)

175 #ifde‡
CONFIG_X86_OOSTORE


176 
	#wmb
(Ë
__asm__
 
	`__vﬁ©ûe__
 ("lock;ádd»$0,0(%%e•)": : :"mem‹y")

	)

178 
	#wmb
() 
__asm__
 
	`__vﬁ©ûe__
 ("": : :"mem‹y")

	)

181 #ifde‡
CONFIG_SMP


182 
	#smp_mb
() 
	`mb
()

	)

183 
	#smp_rmb
() 
	`rmb
()

	)

184 
	#smp_wmb
() 
	`wmb
()

	)

186 
	#smp_mb
() 
	`b¨rõr
()

	)

187 
	#smp_rmb
() 
	`b¨rõr
()

	)

188 
	#smp_wmb
() 
	`b¨rõr
()

	)

191 
	#£t_mb
(
v¨
, 
vÆue
Ëdÿ{ 
	`xchg
(&v¨, vÆue); } 0)

	)

192 
	#£t_wmb
(
v¨
, 
vÆue
Ëdÿ{ v¨ = vÆue; 
	`wmb
(); } 0)

	)

195 
	#__ßve_Êags
(
x
Ë
__asm__
 
	`__vﬁ©ûe__
("pushÊ ;Ö›»%0":"=g" (x): )

	)

196 
	#__ª°‹e_Êags
(
x
Ë
__asm__
 
	`__vﬁ©ûe__
("push»%0 ;Ö›Ê": :"g" (x):"mem‹y", "cc")

	)

197 
	#__˛i
(Ë
__asm__
 
	`__vﬁ©ûe__
("˛i": : :"mem‹y")

	)

198 
	#__°i
(Ë
__asm__
 
	`__vﬁ©ûe__
("°i": : :"mem‹y")

	)

200 
	#ß„_hÆt
(Ë
__asm__
 
	`__vﬁ©ûe__
("°i; h…": : :"mem‹y")

	)

203 
	#loˇl_úq_ßve
(
x
) 
__asm__
 
	`__vﬁ©ûe__
("pushÊ ;Ö›»%0 ; cli":"=g" (x): :"mem‹y")

	)

204 
	#loˇl_úq_ª°‹e
(
x
) 
	`__ª°‹e_Êags
(x)

	)

205 
	#loˇl_úq_dißbÀ
() 
	`__˛i
()

	)

206 
	#loˇl_úq_íabÀ
() 
	`__°i
()

	)

208 #ifde‡
CONFIG_SMP


210 
__globÆ_˛i
();

211 
__globÆ_°i
();

212 
__globÆ_ßve_Êags
();

213 
__globÆ_ª°‹e_Êags
();

214 
	#˛i
(Ë
	`__globÆ_˛i
()

	)

215 
	#°i
(Ë
	`__globÆ_°i
()

	)

216 
	#ßve_Êags
(
x
Ë((x)=
	`__globÆ_ßve_Êags
())

	)

217 
	#ª°‹e_Êags
(
x
Ë
	`__globÆ_ª°‹e_Êags
(x)

	)

221 
	#˛i
(Ë
	`__˛i
()

	)

222 
	#°i
(Ë
	`__°i
()

	)

223 
	#ßve_Êags
(
x
Ë
	`__ßve_Êags
(x)

	)

224 
	#ª°‹e_Êags
(
x
Ë
	`__ª°‹e_Êags
(x)

	)

231 
	#HAVE_DISABLE_HLT


	)

232 
dißbÀ_h…
();

233 
íabÀ_h…
();

	@/usr/include/bits/confname.h

20 #i‚de‡
_UNISTD_H


27 
	m_PC_LINK_MAX
,

28 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

29 
	m_PC_MAX_CANON
,

30 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

31 
	m_PC_MAX_INPUT
,

32 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

33 
	m_PC_NAME_MAX
,

34 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

35 
	m_PC_PATH_MAX
,

36 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

37 
	m_PC_PIPE_BUF
,

38 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

39 
	m_PC_CHOWN_RESTRICTED
,

40 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

41 
	m_PC_NO_TRUNC
,

42 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

43 
	m_PC_VDISABLE
,

44 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

45 
	m_PC_SYNC_IO
,

46 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

47 
	m_PC_ASYNC_IO
,

48 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

49 
	m_PC_PRIO_IO
,

50 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

51 
	m_PC_SOCK_MAXBUF
,

52 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

53 
	m_PC_FILESIZEBITS
,

54 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

55 
	m_PC_REC_INCR_XFER_SIZE
,

56 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

57 
	m_PC_REC_MAX_XFER_SIZE
,

58 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

59 
	m_PC_REC_MIN_XFER_SIZE
,

60 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

61 
	m_PC_REC_XFER_ALIGN
,

62 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

63 
	m_PC_ALLOC_SIZE_MIN
,

64 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

65 
	m_PC_SYMLINK_MAX


66 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

72 
	m_SC_ARG_MAX
,

73 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

74 
	m_SC_CHILD_MAX
,

75 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

76 
	m_SC_CLK_TCK
,

77 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

78 
	m_SC_NGROUPS_MAX
,

79 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

80 
	m_SC_OPEN_MAX
,

81 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

82 
	m_SC_STREAM_MAX
,

83 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

84 
	m_SC_TZNAME_MAX
,

85 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

86 
	m_SC_JOB_CONTROL
,

87 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

88 
	m_SC_SAVED_IDS
,

89 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

90 
	m_SC_REALTIME_SIGNALS
,

91 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

92 
	m_SC_PRIORITY_SCHEDULING
,

93 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

94 
	m_SC_TIMERS
,

95 
	#_SC_TIMERS
 
_SC_TIMERS


	)

96 
	m_SC_ASYNCHRONOUS_IO
,

97 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

98 
	m_SC_PRIORITIZED_IO
,

99 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

100 
	m_SC_SYNCHRONIZED_IO
,

101 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

102 
	m_SC_FSYNC
,

103 
	#_SC_FSYNC
 
_SC_FSYNC


	)

104 
	m_SC_MAPPED_FILES
,

105 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

106 
	m_SC_MEMLOCK
,

107 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

108 
	m_SC_MEMLOCK_RANGE
,

109 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

110 
	m_SC_MEMORY_PROTECTION
,

111 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

112 
	m_SC_MESSAGE_PASSING
,

113 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

114 
	m_SC_SEMAPHORES
,

115 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

116 
	m_SC_SHARED_MEMORY_OBJECTS
,

117 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

118 
	m_SC_AIO_LISTIO_MAX
,

119 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

120 
	m_SC_AIO_MAX
,

121 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

122 
	m_SC_AIO_PRIO_DELTA_MAX
,

123 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

124 
	m_SC_DELAYTIMER_MAX
,

125 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

126 
	m_SC_MQ_OPEN_MAX
,

127 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

128 
	m_SC_MQ_PRIO_MAX
,

129 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

130 
	m_SC_VERSION
,

131 
	#_SC_VERSION
 
_SC_VERSION


	)

132 
	m_SC_PAGESIZE
,

133 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

134 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

135 
	m_SC_RTSIG_MAX
,

136 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

137 
	m_SC_SEM_NSEMS_MAX
,

138 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

139 
	m_SC_SEM_VALUE_MAX
,

140 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

141 
	m_SC_SIGQUEUE_MAX
,

142 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

143 
	m_SC_TIMER_MAX
,

144 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

148 
	m_SC_BC_BASE_MAX
,

149 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

150 
	m_SC_BC_DIM_MAX
,

151 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

152 
	m_SC_BC_SCALE_MAX
,

153 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

154 
	m_SC_BC_STRING_MAX
,

155 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

156 
	m_SC_COLL_WEIGHTS_MAX
,

157 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

158 
	m_SC_EQUIV_CLASS_MAX
,

159 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

160 
	m_SC_EXPR_NEST_MAX
,

161 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

162 
	m_SC_LINE_MAX
,

163 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

164 
	m_SC_RE_DUP_MAX
,

165 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

166 
	m_SC_CHARCLASS_NAME_MAX
,

167 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

169 
	m_SC_2_VERSION
,

170 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

171 
	m_SC_2_C_BIND
,

172 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

173 
	m_SC_2_C_DEV
,

174 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

175 
	m_SC_2_FORT_DEV
,

176 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

177 
	m_SC_2_FORT_RUN
,

178 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

179 
	m_SC_2_SW_DEV
,

180 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

181 
	m_SC_2_LOCALEDEF
,

182 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

184 
	m_SC_PII
,

185 
	#_SC_PII
 
_SC_PII


	)

186 
	m_SC_PII_XTI
,

187 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

188 
	m_SC_PII_SOCKET
,

189 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

190 
	m_SC_PII_INTERNET
,

191 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

192 
	m_SC_PII_OSI
,

193 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

194 
	m_SC_POLL
,

195 
	#_SC_POLL
 
_SC_POLL


	)

196 
	m_SC_SELECT
,

197 
	#_SC_SELECT
 
_SC_SELECT


	)

198 
	m_SC_UIO_MAXIOV
,

199 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

200 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

201 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

202 
	m_SC_PII_INTERNET_STREAM
,

203 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

204 
	m_SC_PII_INTERNET_DGRAM
,

205 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

206 
	m_SC_PII_OSI_COTS
,

207 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

208 
	m_SC_PII_OSI_CLTS
,

209 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

210 
	m_SC_PII_OSI_M
,

211 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

212 
	m_SC_T_IOV_MAX
,

213 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

216 
	m_SC_THREADS
,

217 
	#_SC_THREADS
 
_SC_THREADS


	)

218 
	m_SC_THREAD_SAFE_FUNCTIONS
,

219 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

220 
	m_SC_GETGR_R_SIZE_MAX
,

221 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

222 
	m_SC_GETPW_R_SIZE_MAX
,

223 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

224 
	m_SC_LOGIN_NAME_MAX
,

225 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

226 
	m_SC_TTY_NAME_MAX
,

227 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

228 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

229 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

230 
	m_SC_THREAD_KEYS_MAX
,

231 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

232 
	m_SC_THREAD_STACK_MIN
,

233 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

234 
	m_SC_THREAD_THREADS_MAX
,

235 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

236 
	m_SC_THREAD_ATTR_STACKADDR
,

237 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

238 
	m_SC_THREAD_ATTR_STACKSIZE
,

239 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

240 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

241 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

242 
	m_SC_THREAD_PRIO_INHERIT
,

243 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

244 
	m_SC_THREAD_PRIO_PROTECT
,

245 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

246 
	m_SC_THREAD_PROCESS_SHARED
,

247 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

249 
	m_SC_NPROCESSORS_CONF
,

250 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

251 
	m_SC_NPROCESSORS_ONLN
,

252 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

253 
	m_SC_PHYS_PAGES
,

254 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

255 
	m_SC_AVPHYS_PAGES
,

256 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

257 
	m_SC_ATEXIT_MAX
,

258 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

259 
	m_SC_PASS_MAX
,

260 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

262 
	m_SC_XOPEN_VERSION
,

263 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

264 
	m_SC_XOPEN_XCU_VERSION
,

265 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

266 
	m_SC_XOPEN_UNIX
,

267 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

268 
	m_SC_XOPEN_CRYPT
,

269 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

270 
	m_SC_XOPEN_ENH_I18N
,

271 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

272 
	m_SC_XOPEN_SHM
,

273 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

275 
	m_SC_2_CHAR_TERM
,

276 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

277 
	m_SC_2_C_VERSION
,

278 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

279 
	m_SC_2_UPE
,

280 
	#_SC_2_UPE
 
_SC_2_UPE


	)

282 
	m_SC_XOPEN_XPG2
,

283 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

284 
	m_SC_XOPEN_XPG3
,

285 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

286 
	m_SC_XOPEN_XPG4
,

287 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

289 
	m_SC_CHAR_BIT
,

290 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

291 
	m_SC_CHAR_MAX
,

292 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

293 
	m_SC_CHAR_MIN
,

294 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

295 
	m_SC_INT_MAX
,

296 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

297 
	m_SC_INT_MIN
,

298 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

299 
	m_SC_LONG_BIT
,

300 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

301 
	m_SC_WORD_BIT
,

302 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

303 
	m_SC_MB_LEN_MAX
,

304 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

305 
	m_SC_NZERO
,

306 
	#_SC_NZERO
 
_SC_NZERO


	)

307 
	m_SC_SSIZE_MAX
,

308 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

309 
	m_SC_SCHAR_MAX
,

310 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

311 
	m_SC_SCHAR_MIN
,

312 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

313 
	m_SC_SHRT_MAX
,

314 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

315 
	m_SC_SHRT_MIN
,

316 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

317 
	m_SC_UCHAR_MAX
,

318 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

319 
	m_SC_UINT_MAX
,

320 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

321 
	m_SC_ULONG_MAX
,

322 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

323 
	m_SC_USHRT_MAX
,

324 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

326 
	m_SC_NL_ARGMAX
,

327 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

328 
	m_SC_NL_LANGMAX
,

329 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

330 
	m_SC_NL_MSGMAX
,

331 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

332 
	m_SC_NL_NMAX
,

333 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

334 
	m_SC_NL_SETMAX
,

335 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

336 
	m_SC_NL_TEXTMAX
,

337 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

339 
	m_SC_XBS5_ILP32_OFF32
,

340 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

341 
	m_SC_XBS5_ILP32_OFFBIG
,

342 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

343 
	m_SC_XBS5_LP64_OFF64
,

344 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

345 
	m_SC_XBS5_LPBIG_OFFBIG
,

346 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

348 
	m_SC_XOPEN_LEGACY
,

349 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

350 
	m_SC_XOPEN_REALTIME
,

351 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

352 
	m_SC_XOPEN_REALTIME_THREADS
,

353 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

355 
	m_SC_ADVISORY_INFO
,

356 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

357 
	m_SC_BARRIERS
,

358 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

359 
	m_SC_BASE
,

360 
	#_SC_BASE
 
_SC_BASE


	)

361 
	m_SC_C_LANG_SUPPORT
,

362 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

363 
	m_SC_C_LANG_SUPPORT_R
,

364 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

365 
	m_SC_CLOCK_SELECTION
,

366 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

367 
	m_SC_CPUTIME
,

368 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

369 
	m_SC_THREAD_CPUTIME
,

370 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

371 
	m_SC_DEVICE_IO
,

372 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

373 
	m_SC_DEVICE_SPECIFIC
,

374 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

375 
	m_SC_DEVICE_SPECIFIC_R
,

376 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

377 
	m_SC_FD_MGMT
,

378 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

379 
	m_SC_FIFO
,

380 
	#_SC_FIFO
 
_SC_FIFO


	)

381 
	m_SC_PIPE
,

382 
	#_SC_PIPE
 
_SC_PIPE


	)

383 
	m_SC_FILE_ATTRIBUTES
,

384 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

385 
	m_SC_FILE_LOCKING
,

386 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

387 
	m_SC_FILE_SYSTEM
,

388 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

389 
	m_SC_MONOTONIC_CLOCK
,

390 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

391 
	m_SC_MULTI_PROCESS
,

392 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

393 
	m_SC_SINGLE_PROCESS
,

394 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

395 
	m_SC_NETWORKING
,

396 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

397 
	m_SC_READER_WRITER_LOCKS
,

398 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

399 
	m_SC_SPIN_LOCKS
,

400 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

401 
	m_SC_REGEXP
,

402 
	#_SC_REGEXP
 
_SC_REGEXP


	)

403 
	m_SC_REGEX_VERSION
,

404 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

405 
	m_SC_SHELL
,

406 
	#_SC_SHELL
 
_SC_SHELL


	)

407 
	m_SC_SIGNALS
,

408 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

409 
	m_SC_SPAWN
,

410 
	#_SC_SPAWN
 
_SC_SPAWN


	)

411 
	m_SC_SPORADIC_SERVER
,

412 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

413 
	m_SC_THREAD_SPORADIC_SERVER
,

414 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

415 
	m_SC_SYSTEM_DATABASE
,

416 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

417 
	m_SC_SYSTEM_DATABASE_R
,

418 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

419 
	m_SC_TIMEOUTS
,

420 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

421 
	m_SC_TYPED_MEMORY_OBJECTS
,

422 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

423 
	m_SC_USER_GROUPS
,

424 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

425 
	m_SC_USER_GROUPS_R
,

426 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

427 
	m_SC_2_PBS
,

428 
	#_SC_2_PBS
 
_SC_2_PBS


	)

429 
	m_SC_2_PBS_ACCOUNTING
,

430 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

431 
	m_SC_2_PBS_LOCATE
,

432 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

433 
	m_SC_2_PBS_MESSAGE
,

434 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

435 
	m_SC_2_PBS_TRACK
,

436 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

437 
	m_SC_SYMLOOP_MAX
,

438 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

439 
	m_SC_STREAMS
,

440 
	#_SC_STREAMS
 
_SC_STREAMS


	)

441 
	m_SC_2_PBS_CHECKPOINT
,

442 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

444 
	m_SC_V6_ILP32_OFF32
,

445 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

446 
	m_SC_V6_ILP32_OFFBIG
,

447 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

448 
	m_SC_V6_LP64_OFF64
,

449 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

450 
	m_SC_V6_LPBIG_OFFBIG
,

451 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

453 
	m_SC_HOST_NAME_MAX
,

454 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

455 
	m_SC_TRACE
,

456 
	#_SC_TRACE
 
_SC_TRACE


	)

457 
	m_SC_TRACE_EVENT_FILTER
,

458 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

459 
	m_SC_TRACE_INHERIT
,

460 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

461 
	m_SC_TRACE_LOG


462 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_UNIX98
 \

466 || 
deföed
 
	g__USE_FILE_OFFSET64
 || deföed 
	g__USE_LARGEFILE64
 \

467 || 
deföed
 
	g__USE_LARGEFILE
)

471 
	m_CS_PATH
,

472 
	#_CS_PATH
 
_CS_PATH


	)

474 #i‡(
deföed
 
__USE_FILE_OFFSET64
 || deföed 
__USE_LARGEFILE64
 \

475 || 
deföed
 
	m__USE_LARGEFILE
)

476 
	m_CS_LFS_CFLAGS
 = 1000,

477 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

478 
	m_CS_LFS_LDFLAGS
,

479 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

480 
	m_CS_LFS_LIBS
,

481 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

482 
	m_CS_LFS_LINTFLAGS
,

483 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

484 
	m_CS_LFS64_CFLAGS
,

485 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

486 
	m_CS_LFS64_LDFLAGS
,

487 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

488 
	m_CS_LFS64_LIBS
,

489 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

490 
	m_CS_LFS64_LINTFLAGS
,

491 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

494 #ifde‡
__USE_UNIX98


495 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

496 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

497 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

498 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

499 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

500 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

501 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

502 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

503 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

504 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

505 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

506 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

507 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

508 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

509 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

510 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

511 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

512 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

513 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

514 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

515 
	m_CS_XBS5_LP64_OFF64_LIBS
,

516 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

517 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

518 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

519 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

520 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

521 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

522 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

523 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

524 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

525 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

526 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

528 #ifde‡
__USE_XOPEN2K


529 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

530 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

531 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

532 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

533 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

534 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

535 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

536 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

537 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

538 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

539 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

540 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

541 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

542 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

543 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

544 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

545 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

546 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

547 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

548 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

549 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

550 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

551 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

552 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

553 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

554 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

555 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

556 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

557 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

558 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

559 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

560 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

563 
	m_CS_V6_WIDTH_RESTRICTED_ENVS


564 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

41 #i‡
__WORDSIZE
 == 64

44 
	#_POSIX_V6_ILP32_OFF32
 -1

	)

45 
	#_POSIX_V6_ILP32_OFFBIG
 -1

	)

46 
	#_XBS5_ILP32_OFF32
 -1

	)

47 
	#_XBS5_ILP32_OFFBIG
 -1

	)

50 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

51 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

54 
	#_POSIX_V6_LP64_OFF64
 1

	)

55 
	#_XBS5_LP64_OFF64
 1

	)

61 
	#_POSIX_V6_ILP32_OFF32
 1

	)

62 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

63 
	#_XBS5_ILP32_OFF32
 1

	)

64 
	#_XBS5_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_LP64_OFF64
 -1

	)

71 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

72 
	#_XBS5_LP64_OFF64
 -1

	)

73 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

29 
	#O_ACCMODE
 0003

	)

30 
	#O_RDONLY
 00

	)

31 
	#O_WRONLY
 01

	)

32 
	#O_RDWR
 02

	)

33 
	#O_CREAT
 0100

	)

34 
	#O_EXCL
 0200

	)

35 
	#O_NOCTTY
 0400

	)

36 
	#O_TRUNC
 01000

	)

37 
	#O_APPEND
 02000

	)

38 
	#O_NONBLOCK
 04000

	)

39 
	#O_NDELAY
 
O_NONBLOCK


	)

40 
	#O_SYNC
 010000

	)

41 
	#O_FSYNC
 
O_SYNC


	)

42 
	#O_ASYNC
 020000

	)

44 #ifde‡
__USE_GNU


45 
	#O_DIRECT
 040000

	)

46 
	#O_DIRECTORY
 0200000

	)

47 
	#O_NOFOLLOW
 0400000

	)

53 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


54 
	#O_DSYNC
 
O_SYNC


	)

55 
	#O_RSYNC
 
O_SYNC


	)

58 #ifde‡
__USE_LARGEFILE64


59 
	#O_LARGEFILE
 0100000

	)

63 
	#F_DUPFD
 0

	)

64 
	#F_GETFD
 1

	)

65 
	#F_SETFD
 2

	)

66 
	#F_GETFL
 3

	)

67 
	#F_SETFL
 4

	)

68 #i‚de‡
__USE_FILE_OFFSET64


69 
	#F_GETLK
 5

	)

70 
	#F_SETLK
 6

	)

71 
	#F_SETLKW
 7

	)

73 
	#F_GETLK
 
F_GETLK64


	)

74 
	#F_SETLK
 
F_SETLK64


	)

75 
	#F_SETLKW
 
F_SETLKW64


	)

77 
	#F_GETLK64
 12

	)

78 
	#F_SETLK64
 13

	)

79 
	#F_SETLKW64
 14

	)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


82 
	#F_SETOWN
 8

	)

83 
	#F_GETOWN
 9

	)

86 #ifde‡
__USE_GNU


87 
	#F_SETSIG
 10

	)

88 
	#F_GETSIG
 11

	)

91 #ifde‡
__USE_GNU


92 
	#F_SETLEASE
 1024

	)

93 
	#F_GETLEASE
 1025

	)

94 
	#F_NOTIFY
 1026

	)

98 
	#FD_CLOEXEC
 1

	)

101 
	#F_RDLCK
 0

	)

102 
	#F_WRLCK
 1

	)

103 
	#F_UNLCK
 2

	)

106 
	#F_EXLCK
 4

	)

107 
	#F_SHLCK
 8

	)

109 #ifde‡
__USE_BSD


111 
	#LOCK_SH
 1

	)

112 
	#LOCK_EX
 2

	)

113 
	#LOCK_NB
 4

	)

115 
	#LOCK_UN
 8

	)

118 #ifde‡
__USE_GNU


119 
	#LOCK_MAND
 32

	)

120 
	#LOCK_READ
 64

	)

121 
	#LOCK_WRITE
 128

	)

122 
	#LOCK_RW
 192

	)

125 #ifde‡
__USE_GNU


127 
	#DN_ACCESS
 0x00000001

	)

128 
	#DN_MODIFY
 0x00000002

	)

129 
	#DN_CREATE
 0x00000004

	)

130 
	#DN_DELETE
 0x00000008

	)

131 
	#DN_RENAME
 0x00000010

	)

132 
	#DN_ATTRIB
 0x00000020

	)

133 
	#DN_MULTISHOT
 0x80000000

	)

136 
	sÊock


138 
	ml_ty≥
;

139 
	ml_whí˚
;

140 #i‚de‡
__USE_FILE_OFFSET64


141 
__off_t
 
	ml_°¨t
;

142 
__off_t
 
	ml_Àn
;

144 
__off64_t
 
	ml_°¨t
;

145 
__off64_t
 
	ml_Àn
;

147 
__pid_t
 
	ml_pid
;

150 #ifde‡
__USE_LARGEFILE64


151 
	sÊock64


153 
	ml_ty≥
;

154 
	ml_whí˚
;

155 
__off64_t
 
	ml_°¨t
;

156 
__off64_t
 
	ml_Àn
;

157 
__pid_t
 
	ml_pid
;

163 #ifdef 
__USE_BSD


164 
	#FAPPEND
 
O_APPEND


	)

165 
	#FFSYNC
 
O_FSYNC


	)

166 
	#FASYNC
 
O_ASYNC


	)

167 
	#FNONBLOCK
 
O_NONBLOCK


	)

168 
	#FNDELAY
 
O_NDELAY


	)

172 #ifde‡
__USE_XOPEN2K


173 
	#POSIX_FADV_NORMAL
 0

	)

174 
	#POSIX_FADV_RANDOM
 1

	)

175 
	#POSIX_FADV_SEQUENTIAL
 2

	)

176 
	#POSIX_FADV_WILLNEED
 3

	)

177 
	#POSIX_FADV_DONTNEED
 4

	)

178 
	#POSIX_FADV_NOREUSE
 5

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_POSIX_OPT_H


21 
	#_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 1

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 1

	)

36 
	#_POSIX_FSYNC
 1

	)

39 
	#_POSIX_MAPPED_FILES
 1

	)

42 
	#_POSIX_MEMLOCK
 1

	)

45 
	#_POSIX_MEMLOCK_RANGE
 1

	)

48 
	#_POSIX_MEMORY_PROTECTION
 1

	)

51 
	#_POSIX_POLL
 1

	)

54 
	#_POSIX_SELECT
 1

	)

57 
	#_POSIX_CHOWN_RESTRICTED
 1

	)

61 
	#_POSIX_VDISABLE
 '\0'

	)

64 
	#_POSIX_NO_TRUNC
 1

	)

67 
	#_XOPEN_REALTIME
 1

	)

70 
	#_XOPEN_REALTIME_THREADS
 1

	)

73 
	#_XOPEN_SHM
 1

	)

76 
	#_POSIX_THREADS
 1

	)

79 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

80 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 1

	)

83 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 1

	)

86 
	#_POSIX_THREAD_ATTR_STACKSIZE
 1

	)

89 
	#_POSIX_THREAD_ATTR_STACKADDR
 1

	)

92 
	#_POSIX_SEMAPHORES
 1

	)

95 
	#_POSIX_REALTIME_SIGNALS
 1

	)

98 
	#_POSIX_ASYNCHRONOUS_IO
 1

	)

99 
	#_POSIX_ASYNC_IO
 1

	)

101 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

104 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

107 
	#_LFS_LARGEFILE
 1

	)

108 
	#_LFS64_LARGEFILE
 1

	)

109 
	#_LFS64_STDIO
 1

	)

112 
	#_POSIX_SHARED_MEMORY_OBJECTS
 1

	)

115 
	#_POSIX_CPUTIME
 200912L

	)

118 
	#_POSIX_THREAD_CPUTIME
 200912L

	)

121 
	#_POSIX_REGEXP
 1

	)

124 
	#_POSIX_READER_WRITER_LOCKS
 200912L

	)

127 
	#_POSIX_SHELL
 1

	)

130 
	#_POSIX_TIMEOUTS
 200912L

	)

133 
	#_POSIX_SPIN_LOCKS
 200912L

	)

136 
	#_POSIX_SPAWN
 200912L

	)

139 
	#_POSIX_TIMERS
 1

	)

142 
	#_POSIX_BARRIERS
 200912L

	)

145 #undef 
_POSIX_MESSAGE_PASSING


	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_LINUX_OLD
 1

	)

25 
	#_STAT_VER_KERNEL
 1

	)

26 
	#_STAT_VER_SVR4
 2

	)

27 
	#_STAT_VER_LINUX
 3

	)

28 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

36 
	s°©


38 
__dev_t
 
	m°_dev
;

39 
	m__∑d1
;

40 #i‚de‡
__USE_FILE_OFFSET64


41 
__öo_t
 
	m°_öo
;

43 
__öo_t
 
	m__°_öo
;

45 
__mode_t
 
	m°_mode
;

46 
__∆ök_t
 
	m°_∆ök
;

47 
__uid_t
 
	m°_uid
;

48 
__gid_t
 
	m°_gid
;

49 
__dev_t
 
	m°_rdev
;

50 
	m__∑d2
;

51 #i‚de‡
__USE_FILE_OFFSET64


52 
__off_t
 
	m°_size
;

54 
__off64_t
 
	m°_size
;

56 
__blksize_t
 
	m°_blksize
;

58 #i‚de‡
__USE_FILE_OFFSET64


59 
__blk˙t_t
 
	m°_blocks
;

61 
__blk˙t64_t
 
	m°_blocks
;

63 
__time_t
 
	m°_©ime
;

64 
	m__unu£d1
;

65 
__time_t
 
	m°_mtime
;

66 
	m__unu£d2
;

67 
__time_t
 
	m°_˘ime
;

68 
	m__unu£d3
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	m__unu£d4
;

71 
	m__unu£d5
;

73 
__öo64_t
 
	m°_öo
;

77 #ifde‡
__USE_LARGEFILE64


78 
	s°©64


80 
__dev_t
 
	m°_dev
;

81 
	m__∑d1
;

83 
__öo_t
 
	m__°_öo
;

84 
__mode_t
 
	m°_mode
;

85 
__∆ök_t
 
	m°_∆ök
;

86 
__uid_t
 
	m°_uid
;

87 
__gid_t
 
	m°_gid
;

88 
__dev_t
 
	m°_rdev
;

89 
	m__∑d2
;

90 
__off64_t
 
	m°_size
;

91 
__blksize_t
 
	m°_blksize
;

93 
__blk˙t64_t
 
	m°_blocks
;

94 
__time_t
 
	m°_©ime
;

95 
	m__unu£d1
;

96 
__time_t
 
	m°_mtime
;

97 
	m__unu£d2
;

98 
__time_t
 
	m°_˘ime
;

99 
	m__unu£d3
;

100 
__öo64_t
 
	m°_öo
;

105 
	#_STATBUF_ST_BLKSIZE


	)

106 
	#_STATBUF_ST_RDEV


	)

110 
	#__S_IFMT
 0170000

	)

113 
	#__S_IFDIR
 0040000

	)

114 
	#__S_IFCHR
 0020000

	)

115 
	#__S_IFBLK
 0060000

	)

116 
	#__S_IFREG
 0100000

	)

117 
	#__S_IFIFO
 0010000

	)

118 
	#__S_IFLNK
 0120000

	)

119 
	#__S_IFSOCK
 0140000

	)

123 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

124 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

125 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

129 
	#__S_ISUID
 04000

	)

130 
	#__S_ISGID
 02000

	)

131 
	#__S_ISVTX
 01000

	)

132 
	#__S_IREAD
 0400

	)

133 
	#__S_IWRITE
 0200

	)

134 
	#__S_IEXEC
 0100

	)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #ifde‡
__˝lu•lus


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


33 
__STDIO_INLINE
 

34 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
Ë
__THROW


36  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

37 
	}
}

40 
__STDIO_INLINE
 

41 
	$gëch¨
 (Ë
__THROW


43  
	`_IO_gëc
 (
°dö
);

44 
	}
}

47 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


49 
__STDIO_INLINE
 

50 
	$gëc_u∆ocked
 (
FILE
 *
__Â
Ë
__THROW


52  
	`_IO_gëc_u∆ocked
 (
__Â
);

53 
	}
}

56 
__STDIO_INLINE
 

57 
	$gëch¨_u∆ocked
 (Ë
__THROW


59  
	`_IO_gëc_u∆ocked
 (
°dö
);

60 
	}
}

65 
__STDIO_INLINE
 

66 
	$putch¨
 (
__c
Ë
__THROW


68  
	`_IO_putc
 (
__c
, 
°dout
);

69 
	}
}

72 #ifde‡
__USE_MISC


74 
__STDIO_INLINE
 

75 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW


77  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

78 
	}
}

82 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


84 
__STDIO_INLINE
 

85 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW


87  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

88 
	}
}

91 
__STDIO_INLINE
 

92 
	$putch¨_u∆ocked
 (
__c
Ë
__THROW


94  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

95 
	}
}

99 #ifdef 
__USE_GNU


101 
__STDIO_INLINE
 
_IO_ssize_t


102 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
Ë
__THROW


104  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

105 
	}
}

109 #ifde‡
__USE_MISC


111 
__STDIO_INLINE
 

112 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW


114  
	`_IO_„of_u∆ocked
 (
__°ªam
);

115 
	}
}

118 
__STDIO_INLINE
 

119 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW


121  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

122 
	}
}

128 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__


130 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

131 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

132 && (
size_t
Ë((
size
Ë* (
n
)) <= 8 && (size) != 0) \

133 ? ({ *
__±r
 = (*Ë(
±r
); \

134 
FILE
 *
__°ªam
 = (
°ªam
); \

135 
size_t
 
__˙t
; \

136 
__˙t
 = (
size
Ë* (
n
); __cnt > 0; --__cnt) \

138 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

139 i‡(
__c
 =
EOF
) \

141 *
__±r
++ = 
__c
; \

143 ((
size_t
Ë((
size
Ë* (
n
)Ë- 
__˙t
) / (size); }) \

144 : (((
	`__buûtö_c⁄°™t_p
 (
size
) && (size) == 0) \

145 || (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) == 0)) \

147 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

148 (Ë(
n
), 0) \

149 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

151 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

152 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

153 && (
size_t
Ë((
size
Ë* (
n
)) <= 8 && (size) != 0) \

154 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

155 
FILE
 *
__°ªam
 = (
°ªam
); \

156 
size_t
 
__˙t
; \

157 
__˙t
 = (
size
Ë* (
n
); __cnt > 0; --__cnt) \

158 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

160 ((
size_t
Ë((
size
Ë* (
n
)Ë- 
__˙t
) / (size); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
) && (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), 
n
) \

165 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2))

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

50 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

53 
	#TIMER_ABSTIME
 1

	)

59 #ifde‡
__√ed_timevÆ


60 #unde‡
__√ed_timevÆ


61 #i‚de‡
_STRUCT_TIMEVAL


62 
	#_STRUCT_TIMEVAL
 1

	)

63 
	~<bôs/ty≥s.h
>

67 
	stimevÆ


69 
__time_t
 
	mtv_£c
;

70 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

32 
	t__u_ch¨
;

33 
	t__u_sh‹t
;

34 
	t__u_öt
;

35 
	t__u_l⁄g
;

36 #ifde‡
__GLIBC_HAVE_LONG_LONG


37 
__exãnsi⁄__
 
	t__u_quad_t
;

38 
__exãnsi⁄__
 
	t__quad_t
;

42 
	m__vÆ
[2];

43 } 
	t__quad_t
;

46 
__u_l⁄g
 
	m__vÆ
[2];

47 } 
	t__u_quad_t
;

49 sig√d 
	t__öt8_t
;

50 
	t__uöt8_t
;

51 sig√d 
	t__öt16_t
;

52 
	t__uöt16_t
;

53 sig√d 
	t__öt32_t
;

54 
	t__uöt32_t
;

55 #ifde‡
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

57 
__exãnsi⁄__
 
	t__uöt64_t
;

59 
__quad_t
 *
	t__qaddr_t
;

61 
__u_quad_t
 
	t__dev_t
;

62 
__u_öt
 
	t__uid_t
;

63 
__u_öt
 
	t__gid_t
;

64 
__u_l⁄g
 
	t__öo_t
;

65 
__u_öt
 
	t__mode_t
;

66 
__u_öt
 
	t__∆ök_t
;

67 
	t__off_t
;

68 
__quad_t
 
	t__loff_t
;

69 
	t__pid_t
;

70 
	t__ssize_t
;

71 
__u_l⁄g
 
	t__æim_t
;

72 
__u_quad_t
 
	t__æim64_t
;

73 
__u_öt
 
	t__id_t
;

77 
	m__vÆ
[2];

78 } 
	t__fsid_t
;

81 
	t__daddr_t
;

82 *
	t__ˇddr_t
;

83 
	t__time_t
;

84 
	t__u£c⁄ds_t
;

85 
	t__su£c⁄ds_t
;

86 
	t__swblk_t
;

88 
	t__˛ock_t
;

91 
	t__˛ockid_t
;

94 
	t__timî_t
;

98 
	#__FD_SETSIZE
 1024

	)

101 
	t__key_t
;

104 
	t__ùc_pid_t
;

108 
	t__blksize_t
;

113 
	t__blk˙t_t
;

114 
__quad_t
 
	t__blk˙t64_t
;

117 
__u_l⁄g
 
	t__fsblk˙t_t
;

118 
__u_quad_t
 
	t__fsblk˙t64_t
;

121 
__u_l⁄g
 
	t__fsfû˙t_t
;

122 
__u_quad_t
 
	t__fsfû˙t64_t
;

125 
__u_quad_t
 
	t__öo64_t
;

128 
__loff_t
 
	t__off64_t
;

131 
	t__t_sˇœr_t
;

132 
	t__t_usˇœr_t
;

135 
	t__öçå_t
;

138 
	t__sockÀn_t
;

142 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


143 
	~<bôs/±hªadty≥s.h
>

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

86 #undef 
__USE_ISOC99


87 #undef 
__USE_POSIX


88 #undef 
__USE_POSIX2


89 #undef 
__USE_POSIX199309


90 #undef 
__USE_POSIX199506


91 #undef 
__USE_XOPEN


92 #undef 
__USE_XOPEN_EXTENDED


93 #undef 
__USE_UNIX98


94 #undef 
__USE_XOPEN2K


95 #undef 
__USE_LARGEFILE


96 #undef 
__USE_LARGEFILE64


97 #undef 
__USE_FILE_OFFSET64


98 #undef 
__USE_BSD


99 #undef 
__USE_SVID


100 #undef 
__USE_MISC


101 #undef 
__USE_GNU


102 #undef 
__USE_REENTRANT


103 #undef 
__FAVOR_BSD


104 #undef 
__KERNEL_STRICT_NAMES


108 #i‚de‡
_LOOSE_KERNEL_NAMES


109 
	#__KERNEL_STRICT_NAMES


	)

113 
	#__USE_ANSI
 1

	)

117 #i‡
deföed
 
_BSD_SOURCE
 && \

118 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

119 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

120 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

121 
	#__FAVOR_BSD
 1

	)

125 #ifde‡
_GNU_SOURCE


126 #unde‡
_ISOC99_SOURCE


127 
	#_ISOC99_SOURCE
 1

	)

128 #unde‡
_POSIX_SOURCE


129 
	#_POSIX_SOURCE
 1

	)

130 #unde‡
_POSIX_C_SOURCE


131 
	#_POSIX_C_SOURCE
 199506L

	)

132 #unde‡
_XOPEN_SOURCE


133 
	#_XOPEN_SOURCE
 600

	)

134 #unde‡
_XOPEN_SOURCE_EXTENDED


135 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

136 #unde‡
_LARGEFILE64_SOURCE


137 
	#_LARGEFILE64_SOURCE
 1

	)

138 #unde‡
_BSD_SOURCE


139 
	#_BSD_SOURCE
 1

	)

140 #unde‡
_SVID_SOURCE


141 
	#_SVID_SOURCE
 1

	)

146 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

147 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

148 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

149 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

150 
	#_BSD_SOURCE
 1

	)

151 
	#_SVID_SOURCE
 1

	)

158 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

159 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

160 
	#__USE_ISOC99
 1

	)

165 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_POSIX_SOURCE
 && \

166 !
deföed
 
_POSIX_C_SOURCE
)

167 
	#_POSIX_SOURCE
 1

	)

168 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

169 
	#_POSIX_C_SOURCE
 2

	)

171 
	#_POSIX_C_SOURCE
 199506L

	)

175 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


176 
	#__USE_POSIX
 1

	)

179 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


180 
	#__USE_POSIX2
 1

	)

183 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

184 
	#__USE_POSIX199309
 1

	)

187 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

188 
	#__USE_POSIX199506
 1

	)

191 #ifdef 
_XOPEN_SOURCE


192 
	#__USE_XOPEN
 1

	)

193 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

194 
	#__USE_XOPEN_EXTENDED
 1

	)

195 
	#__USE_UNIX98
 1

	)

196 #unde‡
_LARGEFILE_SOURCE


197 
	#_LARGEFILE_SOURCE
 1

	)

198 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

199 
	#__USE_XOPEN2K
 1

	)

200 #unde‡
__USE_ISOC99


201 
	#__USE_ISOC99
 1

	)

204 #ifde‡
_XOPEN_SOURCE_EXTENDED


205 
	#__USE_XOPEN_EXTENDED
 1

	)

210 #ifde‡
_LARGEFILE_SOURCE


211 
	#__USE_LARGEFILE
 1

	)

214 #ifde‡
_LARGEFILE64_SOURCE


215 
	#__USE_LARGEFILE64
 1

	)

218 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

219 
	#__USE_FILE_OFFSET64
 1

	)

222 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


223 
	#__USE_MISC
 1

	)

226 #ifdef 
_BSD_SOURCE


227 
	#__USE_BSD
 1

	)

230 #ifdef 
_SVID_SOURCE


231 
	#__USE_SVID
 1

	)

234 #ifdef 
_GNU_SOURCE


235 
	#__USE_GNU
 1

	)

238 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


239 
	#__USE_REENTRANT
 1

	)

243 
	#__STDC_IEC_559__
 1

	)

244 
	#__STDC_IEC_559_COMPLEX__
 1

	)

247 
	#__STDC_ISO_10646__
 200009L

	)

255 #unde‡
__GNU_LIBRARY__


256 
	#__GNU_LIBRARY__
 6

	)

260 
	#__GLIBC__
 2

	)

261 
	#__GLIBC_MINOR__
 3

	)

270 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


271 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

272 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

274 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

277 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

278 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

281 #i‡
deföed
 
__GNUC__
 \

282 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

283 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

284 || (
deföed
 
	g__STDC_VERSION
 && __STDC_VERSION >= 199901L)

285 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

289 #i‚de‡
__ASSEMBLER__


290 #i‚de‡
_SYS_CDEFS_H


291 
	~<sys/cdefs.h
>

296 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


297 
	#__USE_LARGEFILE
 1

	)

298 
	#__USE_LARGEFILE64
 1

	)

304 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

305 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__


306 
	#__USE_EXTERN_INLINES
 1

	)

310 #i‚de‡
_LIBC


320 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #ifdef 
__˝lu•lus


47 *
›èrg
;

61 
›töd
;

66 
›ãº
;

70 
›t›t
;

72 #i‚de‡
__√ed_gë›t


94 
	s›ti⁄


96 #i‡(
deföed
 
__STDC__
 && __STDC__Ë|| deföed 
__˝lu•lus


97 c⁄° *
	g«me
;

99 *
	g«me
;

103 
	ghas_¨g
;

104 *
	gÊag
;

105 
	gvÆ
;

110 
	#no_¨gumít
 0

	)

111 
	#ªquúed_¨gumít
 1

	)

112 
	#›ti⁄Æ_¨gumít
 2

	)

140 #i‡(
deföed
 
__STDC__
 && __STDC__Ë|| deföed 
__˝lu•lus


141 #ifde‡
__GNU_LIBRARY__


145 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
);

147 
gë›t
 ();

150 #i‚de‡
__√ed_gë›t


151 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

152 c⁄° *
__sh‹t›ts
,

153 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
);

154 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

155 c⁄° *
__sh‹t›ts
,

156 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
);

159 
_gë›t_öã∫Æ
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
,

162 
__l⁄g_⁄ly
);

165 
gë›t
 ();

166 #i‚de‡
__√ed_gë›t


167 
gë›t_l⁄g
 ();

168 
gë›t_l⁄g_⁄ly
 ();

170 
_gë›t_öã∫Æ
 ();

174 #ifdef 
__˝lu•lus


179 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

143 
	#_IO_SKIPWS
 01

	)

144 
	#_IO_LEFT
 02

	)

145 
	#_IO_RIGHT
 04

	)

146 
	#_IO_INTERNAL
 010

	)

147 
	#_IO_DEC
 020

	)

148 
	#_IO_OCT
 040

	)

149 
	#_IO_HEX
 0100

	)

150 
	#_IO_SHOWBASE
 0200

	)

151 
	#_IO_SHOWPOINT
 0400

	)

152 
	#_IO_UPPERCASE
 01000

	)

153 
	#_IO_SHOWPOS
 02000

	)

154 
	#_IO_SCIENTIFIC
 04000

	)

155 
	#_IO_FIXED
 010000

	)

156 
	#_IO_UNITBUF
 020000

	)

157 
	#_IO_STDIO
 040000

	)

158 
	#_IO_DONT_CLOSE
 0100000

	)

159 
	#_IO_BOOLALPHA
 0200000

	)

162 
_IO_jump_t
; 
	g_IO_FILE
;

165 #ifde‡
_IO_MTSAFE_IO


166 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

167 
	~<bôs/°dio-lock.h
>

172 
	t_IO_lock_t
;

178 
	s_IO_m¨kî
 {

179 
_IO_m¨kî
 *
	m_√xt
;

180 
_IO_FILE
 *
	m_sbuf
;

184 
	m_pos
;

186 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

187 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

188 
	mpublic
:

189 
°ªamm¨kî
(
°ªambuf
 *
sb
);

190 ~
°ªamm¨kî
();

191 
ßvög
(Ë{  
	m_•os
 == -2; }

192 
dñè
(
°ªamm¨kî
&);

193 
dñè
();

198 
	e__codecvt_ªsu…


200 
	m__codecvt_ok
,

201 
	m__codecvt_∑πül
,

202 
	m__codecvt_îr‹
,

203 
	m__codecvt_noc⁄v


206 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


209 
	s_IO_codecvt


211 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

212 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

213 
	m__mb°©e_t
 *,

214 c⁄° 
	mwch¨_t
 *,

215 c⁄° 
	mwch¨_t
 *,

216 c⁄° 
	mwch¨_t
 **, *,

218 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

219 
	m__mb°©e_t
 *, *,

221 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

222 
	m__mb°©e_t
 *,

224 c⁄° **, 
	mwch¨_t
 *,

225 
	mwch¨_t
 *, wchar_t **);

226 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

227 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

228 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

229 c⁄° *, c⁄° *, 
	m_IO_size_t
);

230 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

232 
_IO_ic⁄v_t
 
	m__cd_ö
;

233 
_IO_ic⁄v_t
 
	m__cd_out
;

237 
	s_IO_wide_d©a


239 
wch¨_t
 *
	m_IO_ªad_±r
;

240 
wch¨_t
 *
	m_IO_ªad_íd
;

241 
wch¨_t
 *
	m_IO_ªad_ba£
;

242 
wch¨_t
 *
	m_IO_wrôe_ba£
;

243 
wch¨_t
 *
	m_IO_wrôe_±r
;

244 
wch¨_t
 *
	m_IO_wrôe_íd
;

245 
wch¨_t
 *
	m_IO_buf_ba£
;

246 
wch¨_t
 *
	m_IO_buf_íd
;

248 
wch¨_t
 *
	m_IO_ßve_ba£
;

249 
wch¨_t
 *
	m_IO_backup_ba£
;

251 
wch¨_t
 *
	m_IO_ßve_íd
;

253 
__mb°©e_t
 
	m_IO_°©e
;

254 
__mb°©e_t
 
	m_IO_œ°_°©e
;

255 
_IO_codecvt
 
	m_codecvt
;

257 
wch¨_t
 
	m_sh‹tbuf
[1];

259 
_IO_jump_t
 *
	m_wide_vèbÀ
;

263 
	s_IO_FILE
 {

264 
	m_Êags
;

265 
	#_IO_fûe_Êags
 
_Êags


	)

269 * 
	m_IO_ªad_±r
;

270 * 
	m_IO_ªad_íd
;

271 * 
	m_IO_ªad_ba£
;

272 * 
	m_IO_wrôe_ba£
;

273 * 
	m_IO_wrôe_±r
;

274 * 
	m_IO_wrôe_íd
;

275 * 
	m_IO_buf_ba£
;

276 * 
	m_IO_buf_íd
;

278 *
	m_IO_ßve_ba£
;

279 *
	m_IO_backup_ba£
;

280 *
	m_IO_ßve_íd
;

282 
_IO_m¨kî
 *
	m_m¨kîs
;

284 
_IO_FILE
 *
	m_chaö
;

286 
	m_fûío
;

288 
	m_blksize
;

290 
	m_Êags2
;

292 
_IO_off_t
 
	m_ﬁd_off£t
;

294 
	#__HAVE_COLUMN


	)

296 
	m_cur_cﬁumn
;

297 sig√d 
	m_vèbÀ_off£t
;

298 
	m_sh‹tbuf
[1];

302 
_IO_lock_t
 *
	m_lock
;

303 #ifde‡
_IO_USE_OLD_IO_FILE


306 
	s_IO_FILE_com∂ëe


308 
_IO_FILE
 
	m_fûe
;

310 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

311 
_IO_off64_t
 
	m_off£t
;

312 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


314 
_IO_codecvt
 *
	m_codecvt
;

315 
_IO_wide_d©a
 *
	m_wide_d©a
;

317 *
	m__∑d1
;

318 *
	m__∑d2
;

320 
	m_mode
;

322 
	m_unu£d2
[15 *  () - 2 *  (*)];

326 #i‚de‡
__˝lu•lus


327 
_IO_FILE
 
	t_IO_FILE
;

330 
	g_IO_FILE_∂us
;

332 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

333 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

334 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

335 #i‚de‡
_LIBC


336 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

337 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

338 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

340 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

341 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

342 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

350 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

358 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

359 
	tsize_t
 
	t__n
);

367 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

370 
	t__io_˛o£_‚
 (*
	t__cookõ
);

373 #ifde‡
_GNU_SOURCE


375 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

376 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

377 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

378 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

383 
__io_ªad_‚
 *
	mªad
;

384 
__io_wrôe_‚
 *
	mwrôe
;

385 
__io_£ek_‚
 *
	m£ek
;

386 
__io_˛o£_‚
 *
	m˛o£
;

387 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

388 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

390 
	g_IO_cookõ_fûe
;

393 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

394 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

398 #ifde‡
__˝lu•lus


402 
__undîÊow
 (
_IO_FILE
 *Ë
__THROW
;

403 
__uÊow
 (
_IO_FILE
 *Ë
__THROW
;

404 
__ovîÊow
 (
_IO_FILE
 *, Ë
__THROW
;

405 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *Ë
__THROW
;

406 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *Ë
__THROW
;

407 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wöt_tË
__THROW
;

409 
	#_IO_gëc_u∆ocked
(
_Â
) \

410 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
 ? 
	`__uÊow
 (_fp) \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
++)

	)

412 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

413 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
 \

414 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

415 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

416 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

417 (((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
) \

418 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

419 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

421 
	#_IO_gëwc_u∆ocked
(
_Â
) \

422 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
 \

423 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

424 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

425 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 >(_Â)->_wide_d©a->
_IO_wrôe_íd
 \

426 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

427 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

429 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

430 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

432 
_IO_gëc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

433 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

435 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

440 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

441 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

443 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

445 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 #ifde‡
_IO_MTSAFE_IO


448 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

449 
	#_IO_Êockfûe
(
_Â
) \

450 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

451 
	#_IO_fu∆ockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

454 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

455 
	#_IO_Êockfûe
(
_Â
Ë

	)

456 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

457 
	#_IO_·rylockfûe
(
_Â
Ë

	)

458 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

459 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

462 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

463 
_IO_va_li°
, *
__ª°ri˘
Ë
__THROW
;

464 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

465 
_IO_va_li°
Ë
__THROW
;

466 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_tË
__THROW
;

467 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_tË
__THROW
;

469 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , Ë
__THROW
;

470 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, Ë
__THROW
;

472 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

474 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


475 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

476 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

477 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

478 #i‡
__GNUC__
 >= 2

481 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


482 
	~<shlib-com∑t.h
>

483 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

484 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

485 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

486 c⁄° 
_IO_°dö_u£d
;

487 
wók_exã∫
 (
_IO_°dö_u£d
);

490 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


491 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

495 
	#_IO_fwide
(
__Â
, 
__mode
) \

496 ({ 
__ªsu…
 = (
__mode
); \

497 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

499 i‡((
__Â
)->
_mode
 == 0) \

501 (
__Â
)->
_mode
 = -1; \

502 
__ªsu…
 = (
__Â
)->
_mode
; \

504 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

505 
__ªsu…
 = (
__Â
)->
_mode
; \

507 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

508 
__ªsu…
; })

	)

511 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

512 
_IO_va_li°
, *
__ª°ri˘
Ë
__THROW
;

513 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

514 
_IO_va_li°
Ë
__THROW
;

515 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_tË
__THROW
;

516 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

519 #ifde‡
__˝lu•lus


	@/usr/include/linux/binfmts.h

1 #i‚de‡
_LINUX_BINFMTS_H


2 
	#_LINUX_BINFMTS_H


	)

4 
	~<löux/±ø˚.h
>

5 
	~<löux/ˇ∑bûôy.h
>

12 
	#MAX_ARG_PAGES
 32

	)

15 
	#BINPRM_BUF_SIZE
 128

	)

	@/usr/include/linux/cache.h

1 #i‚de‡
__LINUX_CACHE_H


2 
	#__LINUX_CACHE_H


	)

4 
	~<löux/c⁄fig.h
>

5 
	~<asm/ˇche.h
>

7 #i‚de‡
L1_CACHE_ALIGN


8 
	#L1_CACHE_ALIGN
(
x
Ë(((x)+(
L1_CACHE_BYTES
-1))&~(L1_CACHE_BYTES-1))

	)

11 #i‚de‡
SMP_CACHE_BYTES


12 
	#SMP_CACHE_BYTES
 
L1_CACHE_BYTES


	)

15 #i‚de‡
____ˇchñöe_Æig√d


16 
	#____ˇchñöe_Æig√d
 
	`__©åibuã__
((
	`__Æig√d__
(
SMP_CACHE_BYTES
)))

	)

19 #i‚de‡
____ˇchñöe_Æig√d_ö_smp


20 #ifde‡
CONFIG_SMP


21 
	#____ˇchñöe_Æig√d_ö_smp
 
____ˇchñöe_Æig√d


	)

23 
	#____ˇchñöe_Æig√d_ö_smp


	)

27 #i‚de‡
__ˇchñöe_Æig√d


28 #ifde‡
MODULE


29 
	#__ˇchñöe_Æig√d
 
____ˇchñöe_Æig√d


	)

31 
	#__ˇchñöe_Æig√d
 \

32 
	`__©åibuã__
((
	`__Æig√d__
(
SMP_CACHE_BYTES
), \

33 
	`__£˘i⁄__
(".d©a.ˇchñöe_Æig√d")))

	)

	@/usr/include/linux/config.h

1 #i‚de‡
_LINUX_CONFIG_H


2 
	#_LINUX_CONFIG_H


	)

	@/usr/include/linux/dcache.h

1 #i‚de‡
__LINUX_DCACHE_H


2 
	#__LINUX_DCACHE_H


	)

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/linux/fs_struct.h

1 #i‚de‡
_LINUX_FS_STRUCT_H


2 
	#_LINUX_FS_STRUCT_H


	)

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/kdev_t.h

1 #i‚de‡
_LINUX_KDEV_T_H


2 
	#_LINUX_KDEV_T_H


	)

3 #i‡
deföed
(
__KERNEL__
Ë|| deföed(
_LVM_H_INCLUDE
)

64 
	#MINORBITS
 8

	)

65 
	#MINORMASK
 ((1U << 
MINORBITS
Ë- 1)

	)

67 
	tkdev_t
;

69 
	#MAJOR
(
dev
) ((Ë((devË>> 
MINORBITS
))

	)

70 
	#MINOR
(
dev
) ((Ë((devË& 
MINORMASK
))

	)

71 
	#HASHDEV
(
dev
) ((Ë(dev))

	)

72 
	#NODEV
 0

	)

73 
	#MKDEV
(
ma
,
mi
) (((maË<< 
MINORBITS
Ë| (mi))

	)

74 
	#B_FREE
 0xfff‡

	)

76 c⁄° * 
kdev«me
(
kdev_t
);

83 
ölöe
 
	$kdev_t_to_ƒ
(
kdev_t
 
dev
) {

84  (
	`MAJOR
(
dev
)<<8Ë| 
	`MINOR
(dev);

85 
	}
}

87 
ölöe
 
kdev_t
 
	$to_kdev_t
(
dev
)

89 
maj‹
, 
mö‹
;

91 
maj‹
 = (
dev
 >> 16);

92 i‡(!
maj‹
) {

93 
maj‹
 = (
dev
 >> 8);

94 
mö‹
 = (
dev
 & 0xff);

96 
mö‹
 = (
dev
 & 0xffff);

98 
maj‹
 = (
dev
 >> 8);

99 
mö‹
 = (
dev
 & 0xff);

101  
	`MKDEV
(
maj‹
, 
mö‹
);

102 
	}
}

110 
	#MAJOR
(
dev
) ((dev)>>8)

	)

111 
	#MINOR
(
dev
) ((devË& 0xff)

	)

112 
	#MKDEV
(
ma
,
mi
) ((ma)<<8 | (mi))

	)

	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

9 
	#SI_LOAD_SHIFT
 16

	)

10 
	ssysöfo
 {

11 
	mu±ime
;

12 
	mlﬂds
[3];

13 
	mtŸÆøm
;

14 
	m‰ìøm
;

15 
	msh¨edøm
;

16 
	mbuf„ºam
;

17 
	mtŸÆsw≠
;

18 
	m‰ìsw≠
;

19 
	m¥ocs
;

20 
	m∑d
;

21 
	mtŸÆhigh
;

22 
	m‰ìhigh
;

23 
	mmem_unô
;

24 
	m_f
[20-2*()-()];

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 32

	)

7 
	#ARG_MAX
 131072

	)

8 
	#CHILD_MAX
 999

	)

9 
	#OPEN_MAX
 256

	)

10 
	#LINK_MAX
 127

	)

11 
	#MAX_CANON
 255

	)

12 
	#MAX_INPUT
 255

	)

13 
	#NAME_MAX
 255

	)

14 
	#PATH_MAX
 4096

	)

15 
	#PIPE_BUF
 4096

	)

17 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/linkage.h

1 #i‚de‡
_LINUX_LINKAGE_H


2 
	#_LINUX_LINKAGE_H


	)

4 
	~<löux/c⁄fig.h
>

6 #ifde‡
__˝lu•lus


7 
	#CPP_ASMLINKAGE
 "C"

	)

9 
	#CPP_ASMLINKAGE


	)

12 #i‡
deföed
 
__i386__


13 
	#asmlökage
 
CPP_ASMLINKAGE
 
	`__©åibuã__
((
	`ªg∑rm
(0)))

	)

14 #ñi‡
deföed
 
__ü64__


15 
	#asmlökage
 
CPP_ASMLINKAGE
 
	`__©åibuã__
((
sysˇŒ_lökage
))

	)

17 
	#asmlökage
 
CPP_ASMLINKAGE


	)

20 
	#SYMBOL_NAME_STR
(
X
Ë#X

	)

21 
	#SYMBOL_NAME
(
X
Ë
	)
X

22 #ifde‡
__STDC__


23 
	#SYMBOL_NAME_LABEL
(
X
ËX##:

	)

25 
	#SYMBOL_NAME_LABEL
(
X
ËX :

	)

28 #ifde‡
__¨m__


29 
	#__ALIGN
 .
Æign
 0

	)

30 
	#__ALIGN_STR
 ".Æig¿0"

	)

32 #ifde‡
__mc68000__


33 
	#__ALIGN
 .
Æign
 4

	)

34 
	#__ALIGN_STR
 ".Æig¿4"

	)

36 #ifde‡
__sh__


37 
	#__ALIGN
 .
bÆign
 4

	)

38 
	#__ALIGN_STR
 ".bÆig¿4"

	)

40 #i‡
deföed
(
__i386__
Ë&& deföed(
CONFIG_X86_ALIGNMENT_16
)

41 
	#__ALIGN
 .
Æign
 16,0x90

	)

42 
	#__ALIGN_STR
 ".Æig¿16,0x90"

	)

44 
	#__ALIGN
 .
Æign
 4,0x90

	)

45 
	#__ALIGN_STR
 ".Æig¿4,0x90"

	)

51 #ifde‡
__ASSEMBLY__


53 
	#ALIGN
 
__ALIGN


	)

54 
	#ALIGN_STR
 
__ALIGN_STR


	)

56 
	#ENTRY
(
«me
) \

57 .
globl
 
	`SYMBOL_NAME
(
«me
); \

58 
ALIGN
; \

59 
	`SYMBOL_NAME_LABEL
(
«me
)

	)

	@/usr/include/linux/list.h

1 #i‚de‡
_LINUX_LIST_H


2 
	#_LINUX_LIST_H


	)

4 #i‡
deföed
(
__KERNEL__
Ë|| deföed(
_LVM_H_INCLUDE
)

6 
	~<löux/¥e„tch.h
>

18 
	sli°_hód
 {

19 
li°_hód
 *
	m√xt
, *
	m¥ev
;

22 
	#LIST_HEAD_INIT
(
«me
Ë{ &“ame), &“ameË}

	)

24 
	#LIST_HEAD
(
«me
) \

25 
li°_hód
 
«me
 = 
	`LIST_HEAD_INIT
“ame)

	)

27 
	#INIT_LIST_HEAD
(
±r
) do { \

28 (
±r
)->
√xt
 = (±r); (±r)->
¥ev
 = (ptr); \

29 } 0)

	)

37 
__ölöe__
 
	$__li°_add
(
li°_hód
 * 
√w
,

38 
li°_hód
 * 
¥ev
,

39 
li°_hód
 * 
√xt
)

41 
√xt
->
¥ev
 = 
√w
;

42 
√w
->
√xt
 =Çext;

43 
√w
->
¥ev
 =Örev;

44 
¥ev
->
√xt
 = 
√w
;

45 
	}
}

55 
__ölöe__
 
	$li°_add
(
li°_hód
 *
√w
, li°_hód *
hód
)

57 
	`__li°_add
(
√w
, 
hód
, hód->
√xt
);

58 
	}
}

68 
__ölöe__
 
	$li°_add_èû
(
li°_hód
 *
√w
, li°_hód *
hód
)

70 
	`__li°_add
(
√w
, 
hód
->
¥ev
, head);

71 
	}
}

80 
__ölöe__
 
	$__li°_dñ
(
li°_hód
 * 
¥ev
,

81 
li°_hód
 * 
√xt
)

83 
√xt
->
¥ev
 =Örev;

84 
¥ev
->
√xt
 =Çext;

85 
	}
}

92 
__ölöe__
 
	$li°_dñ
(
li°_hód
 *
íåy
)

94 
	`__li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

95 
íåy
->
√xt
 =É¡ry->
¥ev
 = 0;

96 
	}
}

102 
__ölöe__
 
	$li°_dñ_öô
(
li°_hód
 *
íåy
)

104 
	`__li°_dñ
(
íåy
->
¥ev
,É¡ry->
√xt
);

105 
	`INIT_LIST_HEAD
(
íåy
);

106 
	}
}

112 
__ölöe__
 
	$li°_em±y
(
li°_hód
 *
hód
)

114  
hód
->
√xt
 == head;

115 
	}
}

122 
__ölöe__
 
	$li°_•li˚
(
li°_hód
 *
li°
, li°_hód *
hód
)

124 
li°_hód
 *
fú°
 = 
li°
->
√xt
;

126 i‡(
fú°
 !
li°
) {

127 
li°_hód
 *
œ°
 = 
li°
->
¥ev
;

128 
li°_hód
 *
©
 = 
hód
->
√xt
;

130 
fú°
->
¥ev
 = 
hód
;

131 
hód
->
√xt
 = 
fú°
;

133 
œ°
->
√xt
 = 
©
;

134 
©
->
¥ev
 = 
œ°
;

136 
	}
}

144 
	#li°_íåy
(
±r
, 
ty≥
, 
membî
) \

145 ((
ty≥
 *)((*)(
±r
)-()(&(—y≥ *)0)->
membî
)))

	)

152 
	#li°_f‹_óch
(
pos
, 
hód
) \

153 
pos
 = (
hód
)->
√xt
, 
	`¥e„tch
(pos->next);Öos != (head); \

154 
pos
 =Öos->
√xt
, 
	`¥e„tch
’os->√xt))

	)

162 
	#li°_f‹_óch_ß„
(
pos
, 
n
, 
hód
) \

163 
pos
 = (
hód
)->
√xt
, 
n
 =Öos->next;Öos != (head); \

164 
pos
 = 
n
,Ç =Öos->
√xt
)

	)

	@/usr/include/linux/modversions.h

1 #îr‹ 
ModuÀs
 
should
 
√vî
 
u£
 
kî√l
-
hódîs
 
sy°em
 headers,

2 #îr‹ 
but
 
øthî
 
hódîs
 
‰om
 
™
 
≠¥›rüã
 
kî√l
-
sour˚
 
∑ckage
.

3 #îr‹ 
Ch™ge
 -
I
/
u§
/
§c
/
löux
/
ö˛ude
 (
‹
 
simû¨
Ë
to


4 #îr‹ -
I
/
lib
/
moduÀs
/
$
(
u«me
 -
r
)/
buûd
/
ö˛ude


5 #îr‹ 
to
 
buûd
 
agaö°
 
the
 
cuºíéy
-
ru¬ög
 
kî√l
.

	@/usr/include/linux/net.h

18 #i‚de‡
_LINUX_NET_H


19 
	#_LINUX_NET_H


	)

21 
	~<löux/c⁄fig.h
>

22 
	~<löux/sockë.h
>

23 
	~<löux/waô.h
>

25 
	gpﬁl_èbÀ_°ru˘
;

27 
	#NPROTO
 32

	)

30 
	#SYS_SOCKET
 1

	)

31 
	#SYS_BIND
 2

	)

32 
	#SYS_CONNECT
 3

	)

33 
	#SYS_LISTEN
 4

	)

34 
	#SYS_ACCEPT
 5

	)

35 
	#SYS_GETSOCKNAME
 6

	)

36 
	#SYS_GETPEERNAME
 7

	)

37 
	#SYS_SOCKETPAIR
 8

	)

38 
	#SYS_SEND
 9

	)

39 
	#SYS_RECV
 10

	)

40 
	#SYS_SENDTO
 11

	)

41 
	#SYS_RECVFROM
 12

	)

42 
	#SYS_SHUTDOWN
 13

	)

43 
	#SYS_SETSOCKOPT
 14

	)

44 
	#SYS_GETSOCKOPT
 15

	)

45 
	#SYS_SENDMSG
 16

	)

46 
	#SYS_RECVMSG
 17

	)

50 
	mSS_FREE
 = 0,

51 
	mSS_UNCONNECTED
,

52 
	mSS_CONNECTING
,

53 
	mSS_CONNECTED
,

54 
	mSS_DISCONNECTING


55 } 
	tsockë_°©e
;

57 
	#__SO_ACCEPTCON
 (1<<16Ë

	)

	@/usr/include/linux/pagemap.h

1 #i‚de‡
_LINUX_PAGEMAP_H


2 
	#_LINUX_PAGEMAP_H


	)

10 
	~<löux/mm.h
>

11 
	~<löux/fs.h
>

12 
	~<löux/li°.h
>

14 
	~<asm/sy°em.h
>

15 
	~<asm/pgèbÀ.h
>

16 
	~<löux/highmem.h
>

26 
	#PAGE_CACHE_SHIFT
 
PAGE_SHIFT


	)

27 
	#PAGE_CACHE_SIZE
 
PAGE_SIZE


	)

28 
	#PAGE_CACHE_MASK
 
PAGE_MASK


	)

29 
	#PAGE_CACHE_ALIGN
(
addr
) ((◊ddr)+
PAGE_CACHE_SIZE
-1)&
PAGE_CACHE_MASK
)

	)

31 
	#∑ge_ˇche_gë
(
x
) 
	`gë_∑ge
(x)

	)

32 
	#∑ge_ˇche_‰ì
(
x
) 
	`__‰ì_∑ge
(x)

	)

33 
	#∑ge_ˇche_ªÀa£
(
x
) 
	`__‰ì_∑ge
(x)

	)

35 
ölöe
 
∑ge
 *
	$∑ge_ˇche_Æloc
(
addªss_•a˚
 *
x
)

37  
	`Æloc_∑ges
(
x
->
gÂ_mask
, 0);

38 
	}
}

43 
	#∑ge_ˇche_íåy
(
x
) 
	`vút_to_∑ge
(x)

	)

45 
	s∑ge_ˇche_buckë
 {

46 
•ölock_t
 
	mlock
;

47 
∑ge
 *
	mchaö
;

48 } 
__©åibuã__
((
__Æig√d__
(8)));

50 
∑ge_hash_bôs
;

51 
	#PAGE_HASH_BITS
 (
∑ge_hash_bôs
)

	)

52 
	#PAGE_HASH_SIZE
 (1 << 
PAGE_HASH_BITS
)

	)

54 
©omic_t
 
∑ge_ˇche_size
;

55 
∑ge_ˇche_buckë
 *
∑ge_hash_èbÀ
;

57 
∑ge_ˇche_öô
();

68 
ölöe
 
	$_∑ge_hash‚
(
addªss_•a˚
 * 
m≠pög
, 
ödex
)

70 
	#i
 (((Ë
m≠pög
)/((
öode
Ë& ~ ((öodeË- 1)))

	)

71 
	#s
(
x
Ë((x)+((x)>>
PAGE_HASH_BITS
))

	)

72  
	`s
(
i
+
ödex
Ë& (
PAGE_HASH_SIZE
-1);

73 #unde‡
i


74 #unde‡
s


75 
	}
}

77 
	#∑ge_hash
(
m≠pög
,
ödex
) \

78 &((
∑ge_hash_èbÀ
+
	`_∑ge_hash‚
(
m≠pög
,
ödex
))->
chaö
)

	)

79 
	#__PAGECACHE_LOCK
(
m≠pög
,
ödex
) \

80 &((
∑ge_hash_èbÀ
+
	`_∑ge_hash‚
(
m≠pög
,
ödex
))->
lock
)

	)

81 
	#PAGECACHE_LOCK
(
∑ge
) \

82 
	`__PAGECACHE_LOCK
((
∑ge
)->
m≠pög
, (∑ge)->
ödex
)

	)

84 
∑ge
 * 
__föd_gë_∑ge
(
addªss_•a˚
 *
m≠pög
,

85 
ödex
, 
∑ge
 **
hash
);

86 
	#föd_gë_∑ge
(
m≠pög
, 
ödex
) \

87 
	`__föd_gë_∑ge
(
m≠pög
, 
ödex
, 
	`∑ge_hash
(m≠pög, index))

	)

88 
∑ge
 * 
__föd_lock_∑ge
 (
addªss_•a˚
 * 
m≠pög
,

89 
ödex
, 
∑ge
 **
hash
);

90 
lock_∑ge
(
∑ge
 *page);

91 
	#föd_lock_∑ge
(
m≠pög
, 
ödex
) \

92 
	`__föd_lock_∑ge
(
m≠pög
, 
ödex
, 
	`∑ge_hash
(m≠pög, index))

	)

94 
__add_∑ge_to_hash_queue
(
∑ge
 *Öage, ∑gê**
p
);

96 
add_to_∑ge_ˇche
(
∑ge
 *Öage, 
addªss_•a˚
 *
m≠pög
, 
ödex
);

97 
add_to_∑ge_ˇche_locked
(
∑ge
 *Öage, 
addªss_•a˚
 *
m≠pög
, 
ödex
);

99 
___waô_⁄_∑ge
(
∑ge
 *);

101 
ölöe
 
	$waô_⁄_∑ge
(
∑ge
 *Öage)

103 i‡(
	`PageLocked
(
∑ge
))

104 
	`___waô_⁄_∑ge
(
∑ge
);

105 
	}
}

107 
∑ge
 * 
gøb_ˇche_∑ge
 (
addªss_•a˚
 *, );

109 
	tfûÀr_t
(*, 
	t∑ge
*);

111 
∑ge
 *
ªad_ˇche_∑ge
(
addªss_•a˚
 *, ,

112 
fûÀr_t
 *, *);

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/linux/resource.h

1 #i‚de‡
_LINUX_RESOURCE_H


2 
	#_LINUX_RESOURCE_H


	)

4 
	~<löux/time.h
>

17 
	#RUSAGE_SELF
 0

	)

18 
	#RUSAGE_CHILDREN
 (-1)

	)

19 
	#RUSAGE_BOTH
 (-2Ë

	)

21 
	srußge
 {

22 
timevÆ
 
	mru_utime
;

23 
timevÆ
 
	mru_°ime
;

24 
	mru_maxrss
;

25 
	mru_ixrss
;

26 
	mru_idrss
;

27 
	mru_i§ss
;

28 
	mru_möÊt
;

29 
	mru_majÊt
;

30 
	mru_nsw≠
;

31 
	mru_öblock
;

32 
	mru_oublock
;

33 
	mru_msg¢d
;

34 
	mru_msgrcv
;

35 
	mru_nsig«ls
;

36 
	mru_nvcsw
;

37 
	mru_nivcsw
;

40 
	sæimô
 {

41 
	mæim_cur
;

42 
	mæim_max
;

45 
	#PRIO_MIN
 (-20)

	)

46 
	#PRIO_MAX
 20

	)

48 
	#PRIO_PROCESS
 0

	)

49 
	#PRIO_PGRP
 1

	)

50 
	#PRIO_USER
 2

	)

56 
	~<asm/ªsour˚.h
>

	@/usr/include/linux/securebits.h

1 #i‚de‡
_LINUX_SECUREBITS_H


2 
	#_LINUX_SECUREBITS_H
 1

	)

4 
	#SECUREBITS_DEFAULT
 0x00000000

	)

6 
£cuªbôs
;

14 
	#SECURE_NOROOT
 0

	)

19 
	#SECURE_NO_SETUID_FIXUP
 2

	)

26 
	#is£cuª
(
X
Ë–(1 << (X+1)Ë& 
SECUREBITS_DEFAULT
 ? \

27 (1 << (
X
)Ë& 
SECUREBITS_DEFAULT
 : \

28 (1 << (
X
)Ë& 
£cuªbôs
 )

	)

	@/usr/include/linux/sem.h

1 #i‚de‡
_LINUX_SEM_H


2 
	#_LINUX_SEM_H


	)

4 
	~<löux/ùc.h
>

7 
	#SEM_UNDO
 0x1000

	)

10 
	#GETPID
 11

	)

11 
	#GETVAL
 12

	)

12 
	#GETALL
 13

	)

13 
	#GETNCNT
 14

	)

14 
	#GETZCNT
 15

	)

15 
	#SETVAL
 16

	)

16 
	#SETALL
 17

	)

19 
	#SEM_STAT
 18

	)

20 
	#SEM_INFO
 19

	)

23 
	s£mid_ds
 {

24 
ùc_≥rm
 
	m£m_≥rm
;

25 
__kî√l_time_t
 
	m£m_Ÿime
;

26 
__kî√l_time_t
 
	m£m_˘ime
;

27 
£m
 *
	m£m_ba£
;

28 
£m_queue
 *
	m£m_≥ndög
;

29 
£m_queue
 **
	m£m_≥ndög_œ°
;

30 
£m_undo
 *
	mundo
;

31 
	m£m_n£ms
;

35 
	~<asm/£mbuf.h
>

38 
	s£mbuf
 {

39 
	m£m_num
;

40 
	m£m_›
;

41 
	m£m_Êg
;

45 
	u£mun
 {

46 
	mvÆ
;

47 
£mid_ds
 *
	mbuf
;

48 *
	m¨øy
;

49 
£möfo
 *
	m__buf
;

50 *
	m__∑d
;

53 
	s£möfo
 {

54 
	m£mm≠
;

55 
	m£mmni
;

56 
	m£mmns
;

57 
	m£mmnu
;

58 
	m£mm¶
;

59 
	m£m›m
;

60 
	m£mume
;

61 
	m£musz
;

62 
	m£mvmx
;

63 
	m£m´m
;

66 
	#SEMMNI
 128

	)

67 
	#SEMMSL
 250

	)

68 
	#SEMMNS
 (
SEMMNI
*
SEMMSL
Ë

	)

69 
	#SEMOPM
 32

	)

70 
	#SEMVMX
 32767

	)

73 
	#SEMUME
 
SEMOPM


	)

74 
	#SEMMNU
 
SEMMNS


	)

75 
	#SEMAEM
 (
SEMVMX
 >> 1Ë

	)

76 
	#SEMMAP
 
SEMMNS


	)

77 
	#SEMUSZ
 20

	)

	@/usr/include/linux/signal.h

1 #i‚de‡
_LINUX_SIGNAL_H


2 
	#_LINUX_SIGNAL_H


	)

4 
	~<asm/sig«l.h
>

5 
	~<asm/sigöfo.h
>

	@/usr/include/linux/smp.h

1 #i‚de‡
__LINUX_SMP_H


2 
	#__LINUX_SMP_H


	)

9 
	~<löux/c⁄fig.h
>

11 #ifde‡
CONFIG_SMP


13 
	~<löux/kî√l.h
>

14 
	~<asm/smp.h
>

24 
smp_£nd_°›
();

29 
FASTCALL
(
smp_£nd_ªscheduÀ
(
˝u
));

35 
smp_boŸ_˝us
();

40 
smp_ˇŒö
();

45 
smp_commí˚
();

50 
smp_ˇŒ_fun˘i⁄
 ((*
func
Ë(*
öfo
), *info,

51 
ªåy
, 
waô
);

56 
smp_thªads_ªady
;

58 
smp_num_˝us
;

60 vﬁ©ûê
smp_msg_d©a
;

61 vﬁ©ûê
smp_§c_˝u
;

62 vﬁ©ûê
smp_msg_id
;

64 
	#MSG_ALL_BUT_SELF
 0x8000

	)

65 
	#MSG_ALL
 0x8001

	)

67 
	#MSG_INVALIDATE_TLB
 0x0001

	)

68 
	#MSG_STOP_CPU
 0x0002

	)

71 
	#MSG_RESCHEDULE
 0x0003

	)

72 
	#MSG_CALL_FUNCTION
 0x0004

	)

80 
	#NR_CPUS
 1

	)

81 
	#smp_num_˝us
 1

	)

82 
	#smp_¥o˚ss‹_id
(Ë0

	)

83 
	#h¨d_smp_¥o˚ss‹_id
(Ë0

	)

84 
	#smp_thªads_ªady
 1

	)

85 
	#kî√l_lock
()

	)

86 
	#˝u_logiˇl_m≠
(
˝u
Ë0

	)

87 
	#˝u_numbî_m≠
(
˝u
Ë0

	)

88 
	#smp_ˇŒ_fun˘i⁄
(
func
,
öfo
,
ªåy
,
waô
) ({ 0; 
	}
})

	)

89 
	#˝u_⁄löe_m≠
 1

	)

	@/usr/include/linux/stat.h

1 #i‚de‡
_LINUX_STAT_H


2 
	#_LINUX_STAT_H


	)

4 #i‡
deföed
(
__KERNEL__
Ë|| !deföed(
__GLIBC__
) || (__GLIBC__ < 2)

6 
	#S_IFMT
 00170000

	)

7 
	#S_IFSOCK
 0140000

	)

8 
	#S_IFLNK
 0120000

	)

9 
	#S_IFREG
 0100000

	)

10 
	#S_IFBLK
 0060000

	)

11 
	#S_IFDIR
 0040000

	)

12 
	#S_IFCHR
 0020000

	)

13 
	#S_IFIFO
 0010000

	)

14 
	#S_ISUID
 0004000

	)

15 
	#S_ISGID
 0002000

	)

16 
	#S_ISVTX
 0001000

	)

18 
	#S_ISLNK
(
m
) (((mË& 
S_IFMT
Ë=
S_IFLNK
)

	)

19 
	#S_ISREG
(
m
) (((mË& 
S_IFMT
Ë=
S_IFREG
)

	)

20 
	#S_ISDIR
(
m
) (((mË& 
S_IFMT
Ë=
S_IFDIR
)

	)

21 
	#S_ISCHR
(
m
) (((mË& 
S_IFMT
Ë=
S_IFCHR
)

	)

22 
	#S_ISBLK
(
m
) (((mË& 
S_IFMT
Ë=
S_IFBLK
)

	)

23 
	#S_ISFIFO
(
m
) (((mË& 
S_IFMT
Ë=
S_IFIFO
)

	)

24 
	#S_ISSOCK
(
m
) (((mË& 
S_IFMT
Ë=
S_IFSOCK
)

	)

26 
	#S_IRWXU
 00700

	)

27 
	#S_IRUSR
 00400

	)

28 
	#S_IWUSR
 00200

	)

29 
	#S_IXUSR
 00100

	)

31 
	#S_IRWXG
 00070

	)

32 
	#S_IRGRP
 00040

	)

33 
	#S_IWGRP
 00020

	)

34 
	#S_IXGRP
 00010

	)

36 
	#S_IRWXO
 00007

	)

37 
	#S_IROTH
 00004

	)

38 
	#S_IWOTH
 00002

	)

39 
	#S_IXOTH
 00001

	)

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

4 #unde‡
NULL


5 #i‡
deföed
(
__˝lu•lus
)

6 
	#NULL
 0

	)

8 
	#NULL
 ((*)0)

	)

11 #unde‡
off£tof


12 
	#off£tof
(
TYPE
, 
MEMBER
Ë((
size_t
Ë&((TYPE *)0)->MEMBER)

	)

	@/usr/include/linux/threads.h

1 #i‚de‡
_LINUX_THREADS_H


2 
	#_LINUX_THREADS_H


	)

4 
	~<löux/c⁄fig.h
>

11 #ifde‡
CONFIG_SMP


12 
	#NR_CPUS
 32

	)

14 
	#NR_CPUS
 1

	)

17 
	#MIN_THREADS_LEFT_FOR_ROOT
 4

	)

22 
	#PID_MAX
 0x8000

	)

	@/usr/include/linux/time.h

1 #i‚de‡
_LINUX_TIME_H


2 
	#_LINUX_TIME_H


	)

4 
	~<asm/∑øm.h
>

5 
	~<löux/ty≥s.h
>

7 #i‚de‡
_STRUCT_TIMESPEC


8 
	#_STRUCT_TIMESPEC


	)

9 
	stime•ec
 {

10 
time_t
 
	mtv_£c
;

11 
	mtv_n£c
;

17 
	stimevÆ
 {

18 
time_t
 
	mtv_£c
;

19 
su£c⁄ds_t
 
	mtv_u£c
;

22 
	stimez⁄e
 {

23 
	mtz_möuãswe°
;

24 
	mtz_d°time
;

27 
	#NFDBITS
 
__NFDBITS


	)

29 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

30 
	#FD_SET
(
fd
,
fd£ç
) 
	`__FD_SET
(fd,fd£ç)

	)

31 
	#FD_CLR
(
fd
,
fd£ç
) 
	`__FD_CLR
(fd,fd£ç)

	)

32 
	#FD_ISSET
(
fd
,
fd£ç
) 
	`__FD_ISSET
(fd,fd£ç)

	)

33 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
(fd£ç)

	)

39 
	#ITIMER_REAL
 0

	)

40 
	#ITIMER_VIRTUAL
 1

	)

41 
	#ITIMER_PROF
 2

	)

43 
	sôimî•ec
 {

44 
time•ec
 
	mô_öãrvÆ
;

45 
time•ec
 
	mô_vÆue
;

48 
	sôimîvÆ
 {

49 
timevÆ
 
	mô_öãrvÆ
;

50 
timevÆ
 
	mô_vÆue
;

	@/usr/include/linux/timer.h

1 #i‚de‡
_LINUX_TIMER_H


2 
	#_LINUX_TIMER_H


	)

14 
	~<löux/c⁄fig.h
>

15 
	~<löux/smp.h
>

16 
	~<löux/thªads.h
>

17 
	~<löux/li°.h
>

18 
	~<löux/•ölock.h
>

23 
	#TVN_BITS
 6

	)

24 
	#TVR_BITS
 8

	)

25 
	#TVN_SIZE
 (1 << 
TVN_BITS
)

	)

26 
	#TVR_SIZE
 (1 << 
TVR_BITS
)

	)

27 
	#TVN_MASK
 (
TVN_SIZE
 - 1)

	)

28 
	#TVR_MASK
 (
TVR_SIZE
 - 1)

	)

30 
	stvec_s
 {

31 
	mödex
;

32 
li°_hód
 
	mvec
[
TVN_SIZE
];

33 } 
	ttvec_t
;

35 
	stvec_roŸ_s
 {

36 
	mödex
;

37 
li°_hód
 
	mvec
[
TVR_SIZE
];

38 } 
	ttvec_roŸ_t
;

40 
	#NOOF_TVECS
 5

	)

42 
timî_li°
 
	ttimî_t
;

44 
	stvec_t_ba£_s
 {

45 
•ölock_t
 
	mlock
;

46 
	mtimî_jiffõs
;

47 vﬁ©ûê
timî_t
 * vﬁ©ûê
	mru¬ög_timî
;

48 
tvec_roŸ_t
 
	mtv1
;

49 
tvec_t
 
	mtv2
;

50 
tvec_t
 
	mtv3
;

51 
tvec_t
 
	mtv4
;

52 
tvec_t
 
	mtv5
;

53 } 
	ttvec_ba£_t
;

62 
	stimî_li°
 {

63 
li°_hód
 
	mli°
;

64 
	mexpúes
;

65 
	md©a
;

66 (*
	mfun˘i⁄
)();

67 
tvec_ba£_t
 *
	mba£
;

70 
add_timî
(
timî_t
 * 
timî
);

71 
dñ_timî
(
timî_t
 * 
timî
);

73 #ifde‡
CONFIG_SMP


74 
dñ_timî_sync
(
timî_t
 * 
timî
);

75 
sync_timîs
();

76 
	#timî_íãr
(
ba£
, 
t
Ëdÿ{ ba£->
ru¬ög_timî
 =Å; 
	`mb
(); } 0)

	)

77 
	#timî_exô
(
ba£
Ëdÿ{ ba£->
ru¬ög_timî
 = 
NULL
; } 0)

	)

78 
	#timî_is_ru¬ög
(
ba£
,
t
Ë(ba£->
ru¬ög_timî
 =t)

	)

79 
	#timî_synchr⁄ize
(
ba£
,
t
Ë
	`timî_is_ru¬ög
(ba£,t)Ë
	`b¨rõr
()

	)

81 
	#dñ_timî_sync
(
t
) 
	`dñ_timî
—)

	)

82 
	#sync_timîs
(Ëdÿ{ } 0)

	)

83 
	#timî_íãr
(
ba£
,
t
Ëdÿ{ } 0)

	)

84 
	#timî_exô
(
ba£
Ëdÿ{ } 0)

	)

94 
mod_timî
(
timî_t
 *
timî
, 
expúes
);

96 
ô_ªÆ_‚
();

98 
öô_timîs
();

99 
run_loˇl_timîs
();

101 
tvec_ba£_t
 
tvec_ba£s
[
NR_CPUS
];

103 
ölöe
 
	$öô_timî
(
timî_t
 * 
timî
)

105 
timî
->
li°
.
√xt
 =Åimî->li°.
¥ev
 = 
NULL
;

106 
timî
->
ba£
 = 
tvec_ba£s
 + 0;

107 
	}
}

109 
	#TIMER_DEBUG
 0

	)

110 #i‡
TIMER_DEBUG


111 
	#CHECK_BASE
(
ba£
) \

112 i‡(
ba£
 && ((ba£ < 
tvec_ba£s
Ë|| (ba£ >tvec_ba£†+ 
NR_CPUS
))) \

113 
	`BUG
()

	)

115 
	#CHECK_BASE
(
ba£
)

	)

118 
ölöe
 
	$timî_≥ndög
(c⁄° 
timî_t
 * 
timî
)

120 
	`CHECK_BASE
(
timî
->
ba£
);

121  
timî
->
li°
.
√xt
 !
NULL
;

122 
	}
}

135 
	#time_a·î
(
a
,
b
Ë(()(bË- ()◊Ë< 0)

	)

136 
	#time_bef‹e
(
a
,
b
) 
	`time_a·î
(b,a)

	)

138 
	#time_a·î_eq
(
a
,
b
) (()◊Ë- ()(bË>0)

	)

139 
	#time_bef‹e_eq
(
a
,
b
) 
	`time_a·î_eq
(b,a)

	)

	@/usr/include/linux/times.h

1 #i‚de‡
_LINUX_TIMES_H


2 
	#_LINUX_TIMES_H


	)

4 
	stms
 {

5 
˛ock_t
 
	mtms_utime
;

6 
˛ock_t
 
	mtms_°ime
;

7 
˛ock_t
 
	mtms_cutime
;

8 
˛ock_t
 
	mtms_c°ime
;

	@/usr/include/linux/timex.h

51 #i‚de‡
_LINUX_TIMEX_H


52 
	#_LINUX_TIMEX_H


	)

54 
	~<asm/∑øm.h
>

63 #i‡
HZ
 >= 12 && HZ < 24

64 
	#SHIFT_HZ
 4

	)

65 #ñi‡
HZ
 >= 24 && HZ < 48

66 
	#SHIFT_HZ
 5

	)

67 #ñi‡
HZ
 >= 48 && HZ < 96

68 
	#SHIFT_HZ
 6

	)

69 #ñi‡
HZ
 >= 96 && HZ < 192

70 
	#SHIFT_HZ
 7

	)

71 #ñi‡
HZ
 >= 192 && HZ < 384

72 
	#SHIFT_HZ
 8

	)

73 #ñi‡
HZ
 >= 384 && HZ < 768

74 
	#SHIFT_HZ
 9

	)

75 #ñi‡
HZ
 >= 768 && HZ < 1536

76 
	#SHIFT_HZ
 10

	)

78 #îr‹ 
You
 
lo£
.

92 
	#SHIFT_KG
 6

	)

93 
	#SHIFT_KF
 16

	)

94 
	#SHIFT_KH
 2

	)

95 
	#MAXTC
 6

	)

111 
	#SHIFT_SCALE
 22

	)

112 
	#SHIFT_UPDATE
 (
SHIFT_KG
 + 
MAXTC
Ë

	)

113 
	#SHIFT_USEC
 16

	)

114 
	#FINEUSEC
 (1L << 
SHIFT_SCALE
Ë

	)

116 
	#MAXPHASE
 512000L

	)

117 
	#MAXFREQ
 (512L << 
SHIFT_USEC
Ë

	)

118 
	#MAXTIME
 (200L << 
PPS_AVG
Ë

	)

119 
	#MINSEC
 16L

	)

120 
	#MAXSEC
 1200L

	)

121 
	#NTP_PHASE_LIMIT
 (
MAXPHASE
 << 5)

	)

143 
	#PPS_AVG
 2

	)

144 
	#PPS_SHIFT
 2

	)

145 
	#PPS_SHIFTMAX
 8

	)

146 
	#PPS_VALID
 120

	)

147 
	#MAXGLITCH
 30

	)

152 
	~<asm/timex.h
>

155 
	#LATCH
 ((
CLOCK_TICK_RATE
 + 
HZ
/2Ë/ HZ)

	)

161 
	stimex
 {

162 
	mmodes
;

163 
	moff£t
;

164 
	m‰eq
;

165 
	mmaxîr‹
;

166 
	me°îr‹
;

167 
	m°©us
;

168 
	mc⁄°™t
;

169 
	m¥ecisi⁄
;

170 
	mtﬁî™˚
;

173 
timevÆ
 
	mtime
;

174 
	mtick
;

176 
	mµs‰eq
;

177 
	mjôãr
;

178 
	mshi·
;

179 
	m°abû
;

180 
	mjô˙t
;

181 
	mˇl˙t
;

182 
	mîr˙t
;

183 
	m°b˙t
;

193 
	#ADJ_OFFSET
 0x0001

	)

194 
	#ADJ_FREQUENCY
 0x0002

	)

195 
	#ADJ_MAXERROR
 0x0004

	)

196 
	#ADJ_ESTERROR
 0x0008

	)

197 
	#ADJ_STATUS
 0x0010

	)

198 
	#ADJ_TIMECONST
 0x0020

	)

199 
	#ADJ_TICK
 0x4000

	)

200 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

203 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

204 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

205 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

206 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

207 
	#MOD_STATUS
 
ADJ_STATUS


	)

208 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

209 
	#MOD_CLKB
 
ADJ_TICK


	)

210 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

216 
	#STA_PLL
 0x0001

	)

217 
	#STA_PPSFREQ
 0x0002

	)

218 
	#STA_PPSTIME
 0x0004

	)

219 
	#STA_FLL
 0x0008

	)

221 
	#STA_INS
 0x0010

	)

222 
	#STA_DEL
 0x0020

	)

223 
	#STA_UNSYNC
 0x0040

	)

224 
	#STA_FREQHOLD
 0x0080

	)

226 
	#STA_PPSSIGNAL
 0x0100

	)

227 
	#STA_PPSJITTER
 0x0200

	)

228 
	#STA_PPSWANDER
 0x0400

	)

229 
	#STA_PPSERROR
 0x0800

	)

231 
	#STA_CLOCKERR
 0x1000

	)

233 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

234 
STA_PPSERROR
 | 
STA_CLOCKERR
Ë

	)

239 
	#TIME_OK
 0

	)

240 
	#TIME_INS
 1

	)

241 
	#TIME_DEL
 2

	)

242 
	#TIME_OOP
 3

	)

243 
	#TIME_WAIT
 4

	)

244 
	#TIME_ERROR
 5

	)

245 
	#TIME_BAD
 
TIME_ERROR


	)

	@/usr/include/linux/tty.h

1 #i‚de‡
_LINUX_TTY_H


2 
	#_LINUX_TTY_H


	)

12 
	#MIN_NR_CONSOLES
 1

	)

13 
	#MAX_NR_CONSOLES
 63

	)

14 
	#MAX_NR_USER_CONSOLES
 63

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<löux/posix_ty≥s.h
>

5 
	~<asm/ty≥s.h
>

7 #i‚de‡
__KERNEL_STRICT_NAMES


9 
__kî√l_fd_£t
 
	tfd_£t
;

10 
__kî√l_dev_t
 
	tdev_t
;

11 
__kî√l_öo_t
 
	töo_t
;

12 
__kî√l_mode_t
 
	tmode_t
;

13 
__kî√l_∆ök_t
 
	t∆ök_t
;

14 
__kî√l_off_t
 
	toff_t
;

15 
__kî√l_pid_t
 
	tpid_t
;

16 
__kî√l_daddr_t
 
	tdaddr_t
;

17 
__kî√l_key_t
 
	tkey_t
;

18 
__kî√l_su£c⁄ds_t
 
	tsu£c⁄ds_t
;

20 
__kî√l_uid_t
 
	tuid_t
;

21 
__kî√l_gid_t
 
	tgid_t
;

24 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

25 
__kî√l_loff_t
 
	tloff_t
;

32 #i‚de‡
_SIZE_T


33 
	#_SIZE_T


	)

34 
__kî√l_size_t
 
	tsize_t
;

37 #i‚de‡
_SSIZE_T


38 
	#_SSIZE_T


	)

39 
__kî√l_ssize_t
 
	tssize_t
;

42 #i‚de‡
_PTRDIFF_T


43 
	#_PTRDIFF_T


	)

44 
__kî√l_±rdiff_t
 
	t±rdiff_t
;

47 #i‚de‡
_TIME_T


48 
	#_TIME_T


	)

49 
__kî√l_time_t
 
	ttime_t
;

52 #i‚de‡
_CLOCK_T


53 
	#_CLOCK_T


	)

54 
__kî√l_˛ock_t
 
	t˛ock_t
;

57 #i‚de‡
_CADDR_T


58 
	#_CADDR_T


	)

59 
__kî√l_ˇddr_t
 
	tˇddr_t
;

63 
	tu_ch¨
;

64 
	tu_sh‹t
;

65 
	tu_öt
;

66 
	tu_l⁄g
;

69 
	tunch¨
;

70 
	tush‹t
;

71 
	tuöt
;

72 
	tul⁄g
;

74 #i‚de‡
__BIT_TYPES_DEFINED__


75 
	#__BIT_TYPES_DEFINED__


	)

77 
__u8
 
	tu_öt8_t
;

78 
__s8
 
	töt8_t
;

79 
__u16
 
	tu_öt16_t
;

80 
__s16
 
	töt16_t
;

81 
__u32
 
	tu_öt32_t
;

82 
__s32
 
	töt32_t
;

86 
__u8
 
	tuöt8_t
;

87 
__u16
 
	tuöt16_t
;

88 
__u32
 
	tuöt32_t
;

90 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

91 
__u64
 
	tuöt64_t
;

92 
__u64
 
	tu_öt64_t
;

93 
__s64
 
	töt64_t
;

103 
	su°©
 {

104 
__kî√l_daddr_t
 
	mf_t‰ì
;

105 
__kî√l_öo_t
 
	mf_töode
;

106 
	mf_‚ame
[6];

107 
	mf_Âack
[6];

	@/usr/include/linux/version.h

1 
	#UTS_RELEASE
 "2.4.9-9"

	)

2 
	#LINUX_VERSION_CODE
 132105

	)

3 
	#KERNEL_VERSION
(
a
,
b
,
c
Ë((◊Ë<< 16Ë+ ((bË<< 8Ë+ (c))

	)

	@/usr/include/linux/vfs.h

1 #i‚de‡
_LINUX_VFS_H


2 
	#_LINUX_VFS_H


	)

4 
	~<asm/°©fs.h
>

	@/usr/include/linux/wait.h

1 #i‚de‡
_LINUX_WAIT_H


2 
	#_LINUX_WAIT_H


	)

4 
	#WNOHANG
 0x00000001

	)

5 
	#WUNTRACED
 0x00000002

	)

7 
	#__WNOTHREAD
 0x20000000

	)

8 
	#__WALL
 0x40000000

	)

9 
	#__WCLONE
 0x80000000

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #undef 
__NFDBITS


59 #undef 
__FDELT


60 #undef 
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
) ((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
) ((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
) 
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
) 
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
) 
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


106 
	$£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
Ë
__THROW
;

111 #ifde‡
__USE_XOPEN2K


115 
	$p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

116 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

117 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

118 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

119 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
Ë
__THROW
;

122 
__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

27 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 
	#maj‹
(
dev
Ë(()(((devË>> 8Ë& 0xff))

	)

29 
	#mö‹
(
dev
Ë(()((devË& 0xff))

	)

30 
	#makedev
(
maj‹
, 
mö‹
) (((() (major)) << 8) \

31 | ((Ë(
mö‹
)))

	)

35 
	~<ídün.h
>

36 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


37 
	#maj‹
(
dev
Ë(((dev).
__vÆ
[1] >> 8Ë& 0xff)

	)

38 
	#mö‹
(
dev
Ë((dev).
__vÆ
[1] & 0xff)

	)

39 
	#makedev
(
maj‹
, 
mö‹
) { 0, (((() (major)) << 8) \

40 | ((Ë(
mö‹
))Ë}

	)

42 
	#maj‹
(
dev
Ë(((dev).
__vÆ
[0] >> 8Ë& 0xff)

	)

43 
	#mö‹
(
dev
Ë((dev).
__vÆ
[0] & 0xff)

	)

44 
	#makedev
(
maj‹
, 
mö‹
) { (((() (major)) << 8) \

45 | ((Ë(
mö‹
))), 0 }

	)

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 
	#__√ed_wch¨_t


	)

12 
	#__√ed_wöt_t


	)

13 
	#__√ed_NULL


	)

14 
	~<°ddef.h
>

15 #i‚de‡
_WINT_T


20 
	#_WINT_T


	)

21 
	twöt_t
;

23 
	#__√ed_mb°©e_t


	)

24 
	~<wch¨.h
>

25 
	#_G_size_t
 
size_t


	)

28 
__off_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos_t
;

33 
__off64_t
 
	m__pos
;

34 
__mb°©e_t
 
	m__°©e
;

35 } 
	t_G_Âos64_t
;

36 
	#_G_ssize_t
 
__ssize_t


	)

37 
	#_G_off_t
 
__off_t


	)

38 
	#_G_off64_t
 
__off64_t


	)

39 
	#_G_pid_t
 
__pid_t


	)

40 
	#_G_uid_t
 
__uid_t


	)

41 
	#_G_wch¨_t
 
wch¨_t


	)

42 
	#_G_wöt_t
 
wöt_t


	)

43 
	#_G_°©64
 
°©64


	)

44 
	~<gc⁄v.h
>

47 
__gc⁄v_öfo
 
	m__cd
;

50 
__gc⁄v_öfo
 
	m__cd
;

51 
__gc⁄v_°ï_d©a
 
	m__d©a
;

52 } 
	m__comböed
;

53 } 
	t_G_ic⁄v_t
;

55 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

57 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

58 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

60 
	#_G_HAVE_BOOL
 1

	)

64 
	#_G_HAVE_ATEXIT
 1

	)

65 
	#_G_HAVE_SYS_CDEFS
 1

	)

66 
	#_G_HAVE_SYS_WAIT
 1

	)

67 
	#_G_NEED_STDARG_H
 1

	)

68 
	#_G_va_li°
 
__gnuc_va_li°


	)

70 
	#_G_HAVE_PRINTF_FP
 1

	)

71 
	#_G_HAVE_MMAP
 1

	)

72 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

73 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

74 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

76 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

78 
	#_G_OPEN64
 
__›í64


	)

79 
	#_G_LSEEK64
 
__l£ek64


	)

80 
	#_G_MMAP64
 
__mm≠64


	)

81 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

84 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

86 
	#_G_BUFSIZ
 8192

	)

89 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

90 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

91 
	#_G_USING_THUNKS
 1

	)

92 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

93 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

96 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


97 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

99 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/cache.h

4 #i‚de‡
__ARCH_I386_CACHE_H


5 
	#__ARCH_I386_CACHE_H


	)

7 
	~<löux/c⁄fig.h
>

10 
	#L1_CACHE_SHIFT
 (
CONFIG_X86_L1_CACHE_SHIFT
)

	)

11 
	#L1_CACHE_BYTES
 (1 << 
L1_CACHE_SHIFT
)

	)

	@/usr/include/asm/cpufeature.h

7 #i‚de‡
__ASM_I386_CPUFEATURE_H


8 
	#__ASM_I386_CPUFEATURE_H


	)

11 
	#CPU_FEATURE_P
(
CAP
, 
FEATURE
Ë
	`ã°_bô
(CAP, 
X86_FEATURE_
##FEATURE ##
_BIT
)

	)

13 
	#NCAPINTS
 4

	)

16 
	#X86_FEATURE_FPU
 (0*32+ 0Ë

	)

17 
	#X86_FEATURE_VME
 (0*32+ 1Ë

	)

18 
	#X86_FEATURE_DE
 (0*32+ 2Ë

	)

19 
	#X86_FEATURE_PSE
 (0*32+ 3Ë

	)

20 
	#X86_FEATURE_TSC
 (0*32+ 4Ë

	)

21 
	#X86_FEATURE_MSR
 (0*32+ 5Ë

	)

22 
	#X86_FEATURE_PAE
 (0*32+ 6Ë

	)

23 
	#X86_FEATURE_MCE
 (0*32+ 7Ë

	)

24 
	#X86_FEATURE_CX8
 (0*32+ 8Ë

	)

25 
	#X86_FEATURE_APIC
 (0*32+ 9Ë

	)

26 
	#X86_FEATURE_SEP
 (0*32+11Ë

	)

27 
	#X86_FEATURE_MTRR
 (0*32+12Ë

	)

28 
	#X86_FEATURE_PGE
 (0*32+13Ë

	)

29 
	#X86_FEATURE_MCA
 (0*32+14Ë

	)

30 
	#X86_FEATURE_CMOV
 (0*32+15Ë

	)

31 
	#X86_FEATURE_PAT
 (0*32+16Ë

	)

32 
	#X86_FEATURE_PSE36
 (0*32+17Ë

	)

33 
	#X86_FEATURE_PN
 (0*32+18Ë

	)

34 
	#X86_FEATURE_CLFLSH
 (0*32+19Ë

	)

35 
	#X86_FEATURE_DTES
 (0*32+21Ë

	)

36 
	#X86_FEATURE_ACPI
 (0*32+22Ë

	)

37 
	#X86_FEATURE_MMX
 (0*32+23Ë

	)

38 
	#X86_FEATURE_FXSR
 (0*32+24Ë

	)

40 
	#X86_FEATURE_XMM
 (0*32+25Ë

	)

41 
	#X86_FEATURE_XMM2
 (0*32+26Ë

	)

42 
	#X86_FEATURE_SELFSNOOP
 (0*32+27Ë

	)

43 
	#X86_FEATURE_ACC
 (0*32+29Ë

	)

44 
	#X86_FEATURE_IA64
 (0*32+30Ë

	)

48 
	#X86_FEATURE_SYSCALL
 (1*32+11Ë

	)

49 
	#X86_FEATURE_MMXEXT
 (1*32+22Ë

	)

50 
	#X86_FEATURE_LM
 (1*32+29Ë

	)

51 
	#X86_FEATURE_3DNOWEXT
 (1*32+30Ë

	)

52 
	#X86_FEATURE_3DNOW
 (1*32+31Ë

	)

55 
	#X86_FEATURE_RECOVERY
 (2*32+ 0Ë

	)

56 
	#X86_FEATURE_LONGRUN
 (2*32+ 1Ë

	)

57 
	#X86_FEATURE_LRTI
 (2*32+ 3Ë

	)

61 
	#X86_FEATURE_CXMMX
 (3*32+ 0Ë

	)

62 
	#X86_FEATURE_K6_MTRR
 (3*32+ 1Ë

	)

63 
	#X86_FEATURE_CYRIX_ARR
 (3*32+ 2Ë

	)

64 
	#X86_FEATURE_CENTAUR_MCR
 (3*32+ 3Ë

	)

	@/usr/include/asm/errno.h

1 #i‚de‡
_I386_ERRNO_H


2 
	#_I386_ERRNO_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

38 
	#EDEADLK
 35

	)

39 
	#ENAMETOOLONG
 36

	)

40 
	#ENOLCK
 37

	)

41 
	#ENOSYS
 38

	)

42 
	#ENOTEMPTY
 39

	)

43 
	#ELOOP
 40

	)

44 
	#EWOULDBLOCK
 
EAGAIN


	)

45 
	#ENOMSG
 42

	)

46 
	#EIDRM
 43

	)

47 
	#ECHRNG
 44

	)

48 
	#EL2NSYNC
 45

	)

49 
	#EL3HLT
 46

	)

50 
	#EL3RST
 47

	)

51 
	#ELNRNG
 48

	)

52 
	#EUNATCH
 49

	)

53 
	#ENOCSI
 50

	)

54 
	#EL2HLT
 51

	)

55 
	#EBADE
 52

	)

56 
	#EBADR
 53

	)

57 
	#EXFULL
 54

	)

58 
	#ENOANO
 55

	)

59 
	#EBADRQC
 56

	)

60 
	#EBADSLT
 57

	)

62 
	#EDEADLOCK
 
EDEADLK


	)

64 
	#EBFONT
 59

	)

65 
	#ENOSTR
 60

	)

66 
	#ENODATA
 61

	)

67 
	#ETIME
 62

	)

68 
	#ENOSR
 63

	)

69 
	#ENONET
 64

	)

70 
	#ENOPKG
 65

	)

71 
	#EREMOTE
 66

	)

72 
	#ENOLINK
 67

	)

73 
	#EADV
 68

	)

74 
	#ESRMNT
 69

	)

75 
	#ECOMM
 70

	)

76 
	#EPROTO
 71

	)

77 
	#EMULTIHOP
 72

	)

78 
	#EDOTDOT
 73

	)

79 
	#EBADMSG
 74

	)

80 
	#EOVERFLOW
 75

	)

81 
	#ENOTUNIQ
 76

	)

82 
	#EBADFD
 77

	)

83 
	#EREMCHG
 78

	)

84 
	#ELIBACC
 79

	)

85 
	#ELIBBAD
 80

	)

86 
	#ELIBSCN
 81

	)

87 
	#ELIBMAX
 82

	)

88 
	#ELIBEXEC
 83

	)

89 
	#EILSEQ
 84

	)

90 
	#ERESTART
 85

	)

91 
	#ESTRPIPE
 86

	)

92 
	#EUSERS
 87

	)

93 
	#ENOTSOCK
 88

	)

94 
	#EDESTADDRREQ
 89

	)

95 
	#EMSGSIZE
 90

	)

96 
	#EPROTOTYPE
 91

	)

97 
	#ENOPROTOOPT
 92

	)

98 
	#EPROTONOSUPPORT
 93

	)

99 
	#ESOCKTNOSUPPORT
 94

	)

100 
	#EOPNOTSUPP
 95

	)

101 
	#EPFNOSUPPORT
 96

	)

102 
	#EAFNOSUPPORT
 97

	)

103 
	#EADDRINUSE
 98

	)

104 
	#EADDRNOTAVAIL
 99

	)

105 
	#ENETDOWN
 100

	)

106 
	#ENETUNREACH
 101

	)

107 
	#ENETRESET
 102

	)

108 
	#ECONNABORTED
 103

	)

109 
	#ECONNRESET
 104

	)

110 
	#ENOBUFS
 105

	)

111 
	#EISCONN
 106

	)

112 
	#ENOTCONN
 107

	)

113 
	#ESHUTDOWN
 108

	)

114 
	#ETOOMANYREFS
 109

	)

115 
	#ETIMEDOUT
 110

	)

116 
	#ECONNREFUSED
 111

	)

117 
	#EHOSTDOWN
 112

	)

118 
	#EHOSTUNREACH
 113

	)

119 
	#EALREADY
 114

	)

120 
	#EINPROGRESS
 115

	)

121 
	#ESTALE
 116

	)

122 
	#EUCLEAN
 117

	)

123 
	#ENOTNAM
 118

	)

124 
	#ENAVAIL
 119

	)

125 
	#EISNAM
 120

	)

126 
	#EREMOTEIO
 121

	)

127 
	#EDQUOT
 122

	)

129 
	#ENOMEDIUM
 123

	)

130 
	#EMEDIUMTYPE
 124

	)

	@/usr/include/asm/ioctl.h

6 #i‚de‡
_ASMI386_IOCTL_H


7 
	#_ASMI386_IOCTL_H


	)

27 
	#_IOC_NRBITS
 8

	)

28 
	#_IOC_TYPEBITS
 8

	)

29 
	#_IOC_SIZEBITS
 14

	)

30 
	#_IOC_DIRBITS
 2

	)

32 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

33 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

34 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

35 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

37 
	#_IOC_NRSHIFT
 0

	)

38 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

39 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

40 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

45 
	#_IOC_NONE
 0U

	)

46 
	#_IOC_WRITE
 1U

	)

47 
	#_IOC_READ
 2U

	)

49 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

50 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

51 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

52 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

53 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

56 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

57 
	#_IOR
(
ty≥
,
ƒ
,
size
) 
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

58 
	#_IOW
(
ty≥
,
ƒ
,
size
) 
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

59 
	#_IOWR
(
ty≥
,
ƒ
,
size
) 
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

62 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

63 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

64 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

65 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

69 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

70 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

71 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

72 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

73 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm/math_emu.h

1 #i‚de‡
_I386_MATH_EMU_H


2 
	#_I386_MATH_EMU_H


	)

4 
	~<asm/sigc⁄ãxt.h
>

6 
ª°‹e_i387_so·
(*
s387
, 
_Â°©e
 *
buf
);

7 
ßve_i387_so·
(*
s387
, 
_Â°©e
 * 
buf
);

13 
	söfo
 {

14 
	m___‹ig_eù
;

15 
	m___ebx
;

16 
	m___ecx
;

17 
	m___edx
;

18 
	m___esi
;

19 
	m___edi
;

20 
	m___ebp
;

21 
	m___óx
;

22 
	m___ds
;

23 
	m___es
;

24 
	m___‹ig_óx
;

25 
	m___eù
;

26 
	m___cs
;

27 
	m___eÊags
;

28 
	m___e•
;

29 
	m___ss
;

30 
	m___vm86_es
;

31 
	m___vm86_ds
;

32 
	m___vm86_fs
;

33 
	m___vm86_gs
;

	@/usr/include/asm/pgtable.h

1 #i‚de‡
_I386_PGTABLE_H


2 
	#_I386_PGTABLE_H


	)

4 
	~<löux/c⁄fig.h
>

15 #i‚de‡
__ASSEMBLY__


16 
	~<asm/¥o˚ss‹.h
>

17 
	~<asm/fixm≠.h
>

18 
	~<löux/thªads.h
>

20 #i‚de‡
_I386_BITOPS_H


21 
	~<asm/bô›s.h
>

24 
pgd_t
 
sw≠≥r_pg_dú
[1024];

25 
∑gög_öô
();

28 
	#Êush_ˇche_Æl
(Ëdÿ{ } 0)

	)

29 
	#Êush_ˇche_mm
(
mm
Ëdÿ{ } 0)

	)

30 
	#Êush_ˇche_ønge
(
mm
, 
°¨t
, 
íd
) dÿ{ } 0)

	)

31 
	#Êush_ˇche_∑ge
(
vma
, 
vmaddr
Ëdÿ{ } 0)

	)

32 
	#Êush_∑ge_to_øm
(
∑ge
Ëdÿ{ } 0)

	)

33 
	#Êush_dˇche_∑ge
(
∑ge
Ëdÿ{ } 0)

	)

34 
	#Êush_iˇche_ønge
(
°¨t
, 
íd
Ëdÿ{ } 0)

	)

35 
	#Êush_iˇche_∑ge
(
vma
,
pg
Ëdÿ{ } 0)

	)

37 
	#__Êush_éb
() \

39 
tm¥eg
; \

41 
__asm__
 
	`__vﬁ©ûe__
( \

44 : "Ù" (
tm¥eg
) \

46 } 0)

	)

52 
	#__Êush_éb_globÆ
() \

54 
tm¥eg
; \

56 
__asm__
 
	`__vﬁ©ûe__
( \

61 : "=&r" (
tm¥eg
) \

62 : "r" (
mmu_¸4_„©uªs
 & ~
X86_CR4_PGE
), \

63 "r" (
mmu_¸4_„©uªs
) \

65 } 0)

	)

67 
pgkîn_mask
;

72 #ifde‡
CONFIG_X86_PGE


73 
	#__Êush_éb_Æl
(Ë
	`__Êush_éb_globÆ
()

	)

75 
	#__Êush_éb_Æl
() \

77 i‡(
˝u_has_pge
) \

78 
	`__Êush_éb_globÆ
(); \

80 
	`__Êush_éb
(); \

81 } 0)

	)

84 #i‚de‡
CONFIG_X86_INVLPG


85 
	#__Êush_éb_⁄e
(
addr
Ë
	`__Êush_éb
()

	)

87 
	#__Êush_éb_⁄e
(
addr
) \

88 
__asm__
 
	`__vﬁ©ûe__
("övÕg %0": :"m" (*(*Ë
addr
))

	)

95 
em±y_zîo_∑ge
[1024];

96 
	#ZERO_PAGE
(
vaddr
Ë(
	`vút_to_∑ge
(
em±y_zîo_∑ge
))

	)

105 #i‚de‡
__ASSEMBLY__


106 #i‡
CONFIG_X86_PAE


107 
	~<asm/pgèbÀ-3Àvñ.h
>

112 
pgèbÀ_ˇche_öô
();

115 
	~<asm/pgèbÀ-2Àvñ.h
>

120 
	#pgèbÀ_ˇche_öô
() dÿ{ } 0)

	)

125 
	#__bìp
(Ë
	`asm
("movb $0x3,%Æ; outb %Æ,$0x61")

	)

127 
	#PMD_SIZE
 (1UL << 
PMD_SHIFT
)

	)

128 
	#PMD_MASK
 (~(
PMD_SIZE
-1))

	)

129 
	#PGDIR_SIZE
 (1UL << 
PGDIR_SHIFT
)

	)

130 
	#PGDIR_MASK
 (~(
PGDIR_SIZE
-1))

	)

132 
	#USER_PTRS_PER_PGD
 (
TASK_SIZE
/
PGDIR_SIZE
)

	)

133 
	#FIRST_USER_PGD_NR
 0

	)

135 
	#USER_PGD_PTRS
 (
PAGE_OFFSET
 >> 
PGDIR_SHIFT
)

	)

136 
	#KERNEL_PGD_PTRS
 (
PTRS_PER_PGD
-
USER_PGD_PTRS
)

	)

138 
	#TWOLEVEL_PGDIR_SHIFT
 22

	)

139 
	#BOOT_USER_PGD_PTRS
 (
__PAGE_OFFSET
 >> 
TWOLEVEL_PGDIR_SHIFT
)

	)

140 
	#BOOT_KERNEL_PGD_PTRS
 (1024-
BOOT_USER_PGD_PTRS
)

	)

143 #i‚de‡
__ASSEMBLY__


151 
	#VMALLOC_OFFSET
 (8*1024*1024)

	)

152 
	#VMALLOC_START
 (((Ë
high_mem‹y
 + 2*
VMALLOC_OFFSET
-1) & \

153 ~(
VMALLOC_OFFSET
-1))

	)

154 
	#VMALLOC_VMADDR
(
x
Ë(()(x))

	)

155 #i‡
CONFIG_HIGHMEM


156 
	#VMALLOC_END
 (
PKMAP_BASE
-2*
PAGE_SIZE
)

	)

158 
	#VMALLOC_END
 (
FIXADDR_START
-2*
PAGE_SIZE
)

	)

168 
	#_PAGE_BIT_PRESENT
 0

	)

169 
	#_PAGE_BIT_RW
 1

	)

170 
	#_PAGE_BIT_USER
 2

	)

171 
	#_PAGE_BIT_PWT
 3

	)

172 
	#_PAGE_BIT_PCD
 4

	)

173 
	#_PAGE_BIT_ACCESSED
 5

	)

174 
	#_PAGE_BIT_DIRTY
 6

	)

175 
	#_PAGE_BIT_PSE
 7

	)

176 
	#_PAGE_BIT_GLOBAL
 8

	)

178 
	#_PAGE_PRESENT
 0x001

	)

179 
	#_PAGE_RW
 0x002

	)

180 
	#_PAGE_USER
 0x004

	)

181 
	#_PAGE_PWT
 0x008

	)

182 
	#_PAGE_PCD
 0x010

	)

183 
	#_PAGE_ACCESSED
 0x020

	)

184 
	#_PAGE_DIRTY
 0x040

	)

185 
	#_PAGE_PSE
 0x080

	)

186 
	#_PAGE_GLOBAL
 0x100

	)

188 
	#_PAGE_PROTNONE
 0x080

	)

190 
	#_PAGE_TABLE
 (
_PAGE_PRESENT
 | 
_PAGE_RW
 | 
_PAGE_USER
 | 
_PAGE_ACCESSED
 | 
_PAGE_DIRTY
)

	)

191 
	#_KERNPG_TABLE
 (
_PAGE_PRESENT
 | 
_PAGE_RW
 | 
_PAGE_ACCESSED
 | 
_PAGE_DIRTY
)

	)

192 
	#_PAGE_CHG_MASK
 (
PTE_MASK
 | 
_PAGE_ACCESSED
 | 
_PAGE_DIRTY
)

	)

194 
	#PAGE_NONE
 
	`__pg¥Ÿ
(
_PAGE_PROTNONE
 | 
_PAGE_ACCESSED
)

	)

195 
	#PAGE_SHARED
 
	`__pg¥Ÿ
(
_PAGE_PRESENT
 | 
_PAGE_RW
 | 
_PAGE_USER
 | 
_PAGE_ACCESSED
)

	)

196 
	#PAGE_COPY
 
	`__pg¥Ÿ
(
_PAGE_PRESENT
 | 
_PAGE_USER
 | 
_PAGE_ACCESSED
)

	)

197 
	#PAGE_READONLY
 
	`__pg¥Ÿ
(
_PAGE_PRESENT
 | 
_PAGE_USER
 | 
_PAGE_ACCESSED
)

	)

199 
	#__PAGE_KERNEL
 \

200 (
_PAGE_PRESENT
 | 
_PAGE_RW
 | 
_PAGE_DIRTY
 | 
_PAGE_ACCESSED
)

	)

201 
	#__PAGE_KERNEL_NOCACHE
 \

202 (
_PAGE_PRESENT
 | 
_PAGE_RW
 | 
_PAGE_DIRTY
 | 
_PAGE_PCD
 | 
_PAGE_ACCESSED
)

	)

203 
	#__PAGE_KERNEL_RO
 \

204 (
_PAGE_PRESENT
 | 
_PAGE_DIRTY
 | 
_PAGE_ACCESSED
)

	)

206 #ifde‡
CONFIG_X86_PGE


207 
	#MAKE_GLOBAL
(
x
Ë
	`__pg¥Ÿ
((xË| 
_PAGE_GLOBAL
)

	)

209 
	#MAKE_GLOBAL
(
x
) \

211 
pg¥Ÿ_t
 
__ªt
; \

213 i‡(
˝u_has_pge
) \

214 
__ªt
 = 
	`__pg¥Ÿ
((
x
Ë| 
_PAGE_GLOBAL
); \

216 
__ªt
 = 
	`__pg¥Ÿ
(
x
); \

217 
__ªt
; \

218 })

	)

221 
	#PAGE_KERNEL
 
	`MAKE_GLOBAL
(
__PAGE_KERNEL
)

	)

222 
	#PAGE_KERNEL_RO
 
	`MAKE_GLOBAL
(
__PAGE_KERNEL_RO
)

	)

223 
	#PAGE_KERNEL_NOCACHE
 
	`MAKE_GLOBAL
(
__PAGE_KERNEL_NOCACHE
)

	)

230 
	#__P000
 
PAGE_NONE


	)

231 
	#__P001
 
PAGE_READONLY


	)

232 
	#__P010
 
PAGE_COPY


	)

233 
	#__P011
 
PAGE_COPY


	)

234 
	#__P100
 
PAGE_READONLY


	)

235 
	#__P101
 
PAGE_READONLY


	)

236 
	#__P110
 
PAGE_COPY


	)

237 
	#__P111
 
PAGE_COPY


	)

239 
	#__S000
 
PAGE_NONE


	)

240 
	#__S001
 
PAGE_READONLY


	)

241 
	#__S010
 
PAGE_SHARED


	)

242 
	#__S011
 
PAGE_SHARED


	)

243 
	#__S100
 
PAGE_READONLY


	)

244 
	#__S101
 
PAGE_READONLY


	)

245 
	#__S110
 
PAGE_SHARED


	)

246 
	#__S111
 
PAGE_SHARED


	)

253 #unde‡
TEST_VERIFY_AREA


256 
pg0
[1024];

258 
	#±e_¥e£¡
(
x
) ((x).
±e_low
 & (
_PAGE_PRESENT
 | 
_PAGE_PROTNONE
))

	)

259 
	#±e_˛ór
(
xp
) dÿ{ 
	`£t_±e
(xp, 
	`__±e
(0)); } 0)

	)

261 
	#pmd_n⁄e
(
x
) (!
	`pmd_vÆ
(x))

	)

262 
	#pmd_¥e£¡
(
x
) (
	`pmd_vÆ
(xË& 
_PAGE_PRESENT
)

	)

263 
	#pmd_˛ór
(
xp
) dÿ{ 
	`£t_pmd
(xp, 
	`__pmd
(0)); } 0)

	)

264 
	#pmd_bad
(
x
) ((
	`pmd_vÆ
(xË& (~
PAGE_MASK
 & ~
_PAGE_USER
)Ë!
_KERNPG_TABLE
)

	)

270 
	#∑ge_addªss
(
∑ge
Ë(’age)->
vútuÆ
)

	)

271 
	#∑ges_to_mb
(
x
Ë((xË>> (20-
PAGE_SHIFT
))

	)

277 
ölöe
 
	$±e_ªad
(
±e_t
 
±e
Ë{  (±e).
±e_low
 & 
_PAGE_USER
; 
	}
}

278 
ölöe
 
	$±e_exec
(
±e_t
 
±e
Ë{  (±e).
±e_low
 & 
_PAGE_USER
; 
	}
}

279 
ölöe
 
	$±e_dúty
(
±e_t
 
±e
Ë{  (±e).
±e_low
 & 
_PAGE_DIRTY
; 
	}
}

280 
ölöe
 
	$±e_young
(
±e_t
 
±e
Ë{  (±e).
±e_low
 & 
_PAGE_ACCESSED
; 
	}
}

281 
ölöe
 
	$±e_wrôe
(
±e_t
 
±e
Ë{  (±e).
±e_low
 & 
_PAGE_RW
; 
	}
}

283 
ölöe
 
±e_t
 
	$±e_rd¥Ÿe˘
(
±e_t
 
±e
) { (±e).
±e_low
 &~
_PAGE_USER
; Öã; 
	}
}

284 
ölöe
 
±e_t
 
	$±e_ex¥Ÿe˘
(
±e_t
 
±e
) { (±e).
±e_low
 &~
_PAGE_USER
; Öã; 
	}
}

285 
ölöe
 
±e_t
 
	$±e_mk˛ón
(
±e_t
 
±e
) { (±e).
±e_low
 &~
_PAGE_DIRTY
; Öã; 
	}
}

286 
ölöe
 
±e_t
 
	$±e_mkﬁd
(
±e_t
 
±e
) { (±e).
±e_low
 &~
_PAGE_ACCESSED
; Öã; 
	}
}

287 
ölöe
 
±e_t
 
	$±e_wΩrŸe˘
(
±e_t
 
±e
) { (±e).
±e_low
 &~
_PAGE_RW
; Öã; 
	}
}

288 
ölöe
 
±e_t
 
	$±e_mkªad
(
±e_t
 
±e
) { (±e).
±e_low
 |
_PAGE_USER
; Öã; 
	}
}

289 
ölöe
 
±e_t
 
	$±e_mkexec
(
±e_t
 
±e
) { (±e).
±e_low
 |
_PAGE_USER
; Öã; 
	}
}

290 
ölöe
 
±e_t
 
	$±e_mkdúty
(
±e_t
 
±e
) { (±e).
±e_low
 |
_PAGE_DIRTY
; Öã; 
	}
}

291 
ölöe
 
±e_t
 
	$±e_mkyoung
(
±e_t
 
±e
) { (±e).
±e_low
 |
_PAGE_ACCESSED
; Öã; 
	}
}

292 
ölöe
 
±e_t
 
	$±e_mkwrôe
(
±e_t
 
±e
) { (±e).
±e_low
 |
_PAGE_RW
; Öã; 
	}
}

294 
ölöe
 
	$±ï_ã°_™d_˛ór_dúty
(
±e_t
 *
±ï
) {  
	`ã°_™d_˛ór_bô
(
_PAGE_BIT_DIRTY
,Öãp); 
	}
}

295 
ölöe
 
	$±ï_ã°_™d_˛ór_young
(
±e_t
 *
±ï
) {  
	`ã°_™d_˛ór_bô
(
_PAGE_BIT_ACCESSED
,Öãp); 
	}
}

296 
ölöe
 
	$±ï_£t_wΩrŸe˘
(
±e_t
 *
±ï
Ë{ 
	`˛ór_bô
(
_PAGE_BIT_RW
,Öãp); 
	}
}

297 
ölöe
 
	$±ï_mkdúty
(
±e_t
 *
±ï
Ë{ 
	`£t_bô
(
_PAGE_BIT_DIRTY
,Öãp); 
	}
}

304 
	#mk_±e
(
∑ge
, 
pg¥Ÿ
) 
	`__mk_±e
(’ageË- 
mem_m≠
, (pg¥Ÿ))

	)

307 
	#mk_±e_phys
(
phy•age
, 
pg¥Ÿ
) 
	`__mk_±e
(’hy•ageË>> 
PAGE_SHIFT
,Ög¥Ÿ)

	)

309 
ölöe
 
±e_t
 
	$±e_modify
(
±e_t
 
±e
, 
pg¥Ÿ_t
 
√w¥Ÿ
)

311 
±e
.
±e_low
 &
_PAGE_CHG_MASK
;

312 
±e
.
±e_low
 |
	`pg¥Ÿ_vÆ
(
√w¥Ÿ
);

313  
±e
;

314 
	}
}

316 
	#∑ge_±e
(
∑ge
Ë
	`∑ge_±e_¥Ÿ
’age, 
	`__pg¥Ÿ
(0))

	)

318 
	#pmd_∑ge
(
pmd
) \

319 ((Ë
	`__va
(
	`pmd_vÆ
(
pmd
Ë& 
PAGE_MASK
))

	)

322 
	#pgd_ödex
(
addªss
Ë(◊ddªs†>> 
PGDIR_SHIFT
Ë& (
PTRS_PER_PGD
-1))

	)

324 
	#__pgd_off£t
(
addªss
Ë
	`pgd_ödex
◊ddªss)

	)

326 
	#pgd_off£t
(
mm
, 
addªss
Ë((mm)->
pgd
+
	`pgd_ödex
◊ddªss))

	)

329 
	#pgd_off£t_k
(
addªss
Ë
	`pgd_off£t
(&
öô_mm
,áddªss)

	)

331 
	#__pmd_off£t
(
addªss
) \

332 (((
addªss
Ë>> 
PMD_SHIFT
Ë& (
PTRS_PER_PMD
-1))

	)

335 
	#__±e_off£t
(
addªss
) \

336 ((
addªss
 >> 
PAGE_SHIFT
Ë& (
PTRS_PER_PTE
 - 1))

	)

337 
	#±e_off£t
(
dú
, 
addªss
Ë((
±e_t
 *Ë
	`pmd_∑ge
(*(dir)) + \

338 
	`__±e_off£t
(
addªss
))

	)

344 
	#upd©e_mmu_ˇche
(
vma
,
addªss
,
±e
Ëdÿ{ } 0)

	)

347 
	#SWP_TYPE
(
x
Ë(((x).
vÆ
 >> 1Ë& 0x3f)

	)

348 
	#SWP_OFFSET
(
x
Ë((x).
vÆ
 >> 8)

	)

349 
	#SWP_ENTRY
(
ty≥
, 
off£t
Ë((
swp_íåy_t
Ë{ (—y≥Ë<< 1Ë| ((off£tË<< 8Ë})

	)

350 
	#±e_to_swp_íåy
(
±e
Ë((
swp_íåy_t
Ë{ (±e).
±e_low
 })

	)

351 
	#swp_íåy_to_±e
(
x
Ë((
±e_t
Ë{ (x).
vÆ
 })

	)

356 
	#PageSkù
(
∑ge
Ë(0)

	)

357 
	#kîn_addr_vÆid
(
addr
) (1)

	)

359 
	#io_ªm≠_∑ge_ønge
 
ªm≠_∑ge_ønge


	)

	@/usr/include/asm/resource.h

1 #i‚de‡
_I386_RESOURCE_H


2 
	#_I386_RESOURCE_H


	)

8 
	#RLIMIT_CPU
 0

	)

9 
	#RLIMIT_FSIZE
 1

	)

10 
	#RLIMIT_DATA
 2

	)

11 
	#RLIMIT_STACK
 3

	)

12 
	#RLIMIT_CORE
 4

	)

13 
	#RLIMIT_RSS
 5

	)

14 
	#RLIMIT_NPROC
 6

	)

15 
	#RLIMIT_NOFILE
 7

	)

16 
	#RLIMIT_MEMLOCK
 8

	)

17 
	#RLIMIT_AS
 9

	)

18 
	#RLIMIT_LOCKS
 10

	)

20 
	#RLIM_NLIMITS
 11

	)

26 
	#RLIM_INFINITY
 (~0UL)

	)

	@/usr/include/asm/segment.h

1 #i‚de‡
_ASM_SEGMENT_H


2 
	#_ASM_SEGMENT_H


	)

4 
	#__KERNEL_CS
 0x10

	)

5 
	#__KERNEL_DS
 0x18

	)

7 
	#__USER_CS
 0x23

	)

8 
	#__USER_DS
 0x2B

	)

	@/usr/include/asm/sembuf.h

1 #i‚de‡
_I386_SEMBUF_H


2 
	#_I386_SEMBUF_H


	)

14 
	s£mid64_ds
 {

15 
ùc64_≥rm
 
	m£m_≥rm
;

16 
__kî√l_time_t
 
	m£m_Ÿime
;

17 
	m__unu£d1
;

18 
__kî√l_time_t
 
	m£m_˘ime
;

19 
	m__unu£d2
;

20 
	m£m_n£ms
;

21 
	m__unu£d3
;

22 
	m__unu£d4
;

	@/usr/include/asm/sigcontext.h

1 #i‚de‡
_ASMi386_SIGCONTEXT_H


2 
	#_ASMi386_SIGCONTEXT_H


	)

18 
	s_Âªg
 {

19 
	msignifiˇnd
[4];

20 
	mexp⁄ít
;

23 
	s_Âxªg
 {

24 
	msignifiˇnd
[4];

25 
	mexp⁄ít
;

26 
	m∑ddög
[3];

29 
	s_xmmªg
 {

30 
	mñemít
[4];

33 
	s_Â°©e
 {

35 
	mcw
;

36 
	msw
;

37 
	mèg
;

38 
	mùoff
;

39 
	mcs£l
;

40 
	md©aoff
;

41 
	md©a£l
;

42 
_Âªg
 
	m_°
[8];

43 
	m°©us
;

44 
	mmagic
;

47 
	m_fx§_ív
[6];

48 
	mmxc§
;

49 
	mª£rved
;

50 
_Âxªg
 
	m_fx§_°
[8];

51 
_xmmªg
 
	m_xmm
[8];

52 
	m∑ddög
[56];

55 
	#X86_FXSR_MAGIC
 0x0000

	)

57 
	ssigc⁄ãxt
 {

58 
	mgs
, 
	m__gsh
;

59 
	mfs
, 
	m__fsh
;

60 
	mes
, 
	m__esh
;

61 
	mds
, 
	m__dsh
;

62 
	medi
;

63 
	mesi
;

64 
	mebp
;

65 
	me•
;

66 
	mebx
;

67 
	medx
;

68 
	mecx
;

69 
	móx
;

70 
	må≠no
;

71 
	mîr
;

72 
	meù
;

73 
	mcs
, 
	m__csh
;

74 
	meÊags
;

75 
	me•_©_sig«l
;

76 
	mss
, 
	m__ssh
;

77 
_Â°©e
 * 
	mÂ°©e
;

78 
	mﬁdmask
;

79 
	m¸2
;

	@/usr/include/asm/siginfo.h

1 #i‚de‡
_I386_SIGINFO_H


2 
	#_I386_SIGINFO_H


	)

4 
	~<löux/ty≥s.h
>

8 
	usigvÆ
 {

9 
	msivÆ_öt
;

10 *
	msivÆ_±r
;

11 } 
	tsigvÆ_t
;

13 
	#SI_MAX_SIZE
 128

	)

14 
	#SI_PAD_SIZE
 ((
SI_MAX_SIZE
/()Ë- 3)

	)

16 
	ssigöfo
 {

17 
	msi_signo
;

18 
	msi_î∫o
;

19 
	msi_code
;

22 
	m_∑d
[
SI_PAD_SIZE
];

26 
pid_t
 
	m_pid
;

27 
uid_t
 
	m_uid
;

28 } 
	m_kûl
;

32 
	m_timî1
;

33 
	m_timî2
;

34 } 
	m_timî
;

38 
pid_t
 
	m_pid
;

39 
uid_t
 
	m_uid
;

40 
sigvÆ_t
 
	m_sigvÆ
;

41 } 
	m_π
;

45 
pid_t
 
	m_pid
;

46 
uid_t
 
	m_uid
;

47 
	m_°©us
;

48 
˛ock_t
 
	m_utime
;

49 
˛ock_t
 
	m_°ime
;

50 } 
	m_sigchld
;

54 *
	m_addr
;

55 } 
	m_sigÁu…
;

59 
	m_b™d
;

60 
	m_fd
;

61 } 
	m_sigpﬁl
;

62 } 
	m_sifõlds
;

63 } 
	tsigöfo_t
;

68 
	#si_pid
 
_sifõlds
.
_kûl
.
_pid


	)

69 
	#si_uid
 
_sifõlds
.
_kûl
.
_uid


	)

70 
	#si_°©us
 
_sifõlds
.
_sigchld
.
_°©us


	)

71 
	#si_utime
 
_sifõlds
.
_sigchld
.
_utime


	)

72 
	#si_°ime
 
_sifõlds
.
_sigchld
.
_°ime


	)

73 
	#si_vÆue
 
_sifõlds
.
_π
.
_sigvÆ


	)

74 
	#si_öt
 
_sifõlds
.
_π
.
_sigvÆ
.
sivÆ_öt


	)

75 
	#si_±r
 
_sifõlds
.
_π
.
_sigvÆ
.
sivÆ_±r


	)

76 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
_addr


	)

77 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
_b™d


	)

78 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
_fd


	)

80 #ifde‡
__KERNEL__


81 
	#__SI_MASK
 0xffff0000

	)

82 
	#__SI_KILL
 (0 << 16)

	)

83 
	#__SI_TIMER
 (1 << 16)

	)

84 
	#__SI_POLL
 (2 << 16)

	)

85 
	#__SI_FAULT
 (3 << 16)

	)

86 
	#__SI_CHLD
 (4 << 16)

	)

87 
	#__SI_RT
 (5 << 16)

	)

88 
	#__SI_CODE
(
T
,
N
) ((TË<< 16 | ((NË& 0xffff))

	)

90 
	#__SI_KILL
 0

	)

91 
	#__SI_TIMER
 0

	)

92 
	#__SI_POLL
 0

	)

93 
	#__SI_FAULT
 0

	)

94 
	#__SI_CHLD
 0

	)

95 
	#__SI_RT
 0

	)

96 
	#__SI_CODE
(
T
,
N
) (N)

	)

103 
	#SI_USER
 0

	)

104 
	#SI_KERNEL
 0x80

	)

105 
	#SI_QUEUE
 -1

	)

106 
	#SI_TIMER
 
	`__SI_CODE
(
__SI_TIMER
,-2Ë

	)

107 
	#SI_MESGQ
 -3

	)

108 
	#SI_ASYNCIO
 -4

	)

109 
	#SI_SIGIO
 -5

	)

111 
	#SI_FROMUSER
(
sùå
) ((sùå)->
si_code
 <0)

	)

112 
	#SI_FROMKERNEL
(
sùå
) ((sùå)->
si_code
 > 0)

	)

117 
	#ILL_ILLOPC
 (
__SI_FAULT
|1)

	)

118 
	#ILL_ILLOPN
 (
__SI_FAULT
|2)

	)

119 
	#ILL_ILLADR
 (
__SI_FAULT
|3)

	)

120 
	#ILL_ILLTRP
 (
__SI_FAULT
|4)

	)

121 
	#ILL_PRVOPC
 (
__SI_FAULT
|5)

	)

122 
	#ILL_PRVREG
 (
__SI_FAULT
|6)

	)

123 
	#ILL_COPROC
 (
__SI_FAULT
|7)

	)

124 
	#ILL_BADSTK
 (
__SI_FAULT
|8)

	)

125 
	#NSIGILL
 8

	)

130 
	#FPE_INTDIV
 (
__SI_FAULT
|1)

	)

131 
	#FPE_INTOVF
 (
__SI_FAULT
|2)

	)

132 
	#FPE_FLTDIV
 (
__SI_FAULT
|3)

	)

133 
	#FPE_FLTOVF
 (
__SI_FAULT
|4)

	)

134 
	#FPE_FLTUND
 (
__SI_FAULT
|5)

	)

135 
	#FPE_FLTRES
 (
__SI_FAULT
|6)

	)

136 
	#FPE_FLTINV
 (
__SI_FAULT
|7)

	)

137 
	#FPE_FLTSUB
 (
__SI_FAULT
|8)

	)

138 
	#NSIGFPE
 8

	)

143 
	#SEGV_MAPERR
 (
__SI_FAULT
|1)

	)

144 
	#SEGV_ACCERR
 (
__SI_FAULT
|2)

	)

145 
	#NSIGSEGV
 2

	)

150 
	#BUS_ADRALN
 (
__SI_FAULT
|1)

	)

151 
	#BUS_ADRERR
 (
__SI_FAULT
|2)

	)

152 
	#BUS_OBJERR
 (
__SI_FAULT
|3)

	)

153 
	#NSIGBUS
 3

	)

158 
	#TRAP_BRKPT
 (
__SI_FAULT
|1)

	)

159 
	#TRAP_TRACE
 (
__SI_FAULT
|2)

	)

160 
	#NSIGTRAP
 2

	)

165 
	#CLD_EXITED
 (
__SI_CHLD
|1)

	)

166 
	#CLD_KILLED
 (
__SI_CHLD
|2)

	)

167 
	#CLD_DUMPED
 (
__SI_CHLD
|3)

	)

168 
	#CLD_TRAPPED
 (
__SI_CHLD
|4)

	)

169 
	#CLD_STOPPED
 (
__SI_CHLD
|5)

	)

170 
	#CLD_CONTINUED
 (
__SI_CHLD
|6)

	)

171 
	#NSIGCHLD
 6

	)

176 
	#POLL_IN
 (
__SI_POLL
|1)

	)

177 
	#POLL_OUT
 (
__SI_POLL
|2)

	)

178 
	#POLL_MSG
 (
__SI_POLL
|3)

	)

179 
	#POLL_ERR
 (
__SI_POLL
|4)

	)

180 
	#POLL_PRI
 (
__SI_POLL
|5)

	)

181 
	#POLL_HUP
 (
__SI_POLL
|6)

	)

182 
	#NSIGPOLL
 6

	)

192 
	#SIGEV_SIGNAL
 0

	)

193 
	#SIGEV_NONE
 1

	)

194 
	#SIGEV_THREAD
 2

	)

196 
	#SIGEV_MAX_SIZE
 64

	)

197 
	#SIGEV_PAD_SIZE
 ((
SIGEV_MAX_SIZE
/()Ë- 3)

	)

199 
	ssigevít
 {

200 
sigvÆ_t
 
	msigev_vÆue
;

201 
	msigev_signo
;

202 
	msigev_nŸify
;

204 
	m_∑d
[
SIGEV_PAD_SIZE
];

207 (*
	m_fun˘i⁄
)(
	msigvÆ_t
);

208 *
	m_©åibuã
;

209 } 
	m_sigev_thªad
;

210 } 
	m_sigev_un
;

211 } 
	tsigevít_t
;

213 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

214 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

	@/usr/include/asm/signal.h

1 #i‚de‡
_ASMi386_SIGNAL_H


2 
	#_ASMi386_SIGNAL_H


	)

4 
	~<löux/ty≥s.h
>

7 
	gsigöfo
;

9 
	#SIGHUP
 1

	)

10 
	#SIGINT
 2

	)

11 
	#SIGQUIT
 3

	)

12 
	#SIGILL
 4

	)

13 
	#SIGTRAP
 5

	)

14 
	#SIGABRT
 6

	)

15 
	#SIGIOT
 6

	)

16 
	#SIGBUS
 7

	)

17 
	#SIGFPE
 8

	)

18 
	#SIGKILL
 9

	)

19 
	#SIGUSR1
 10

	)

20 
	#SIGSEGV
 11

	)

21 
	#SIGUSR2
 12

	)

22 
	#SIGPIPE
 13

	)

23 
	#SIGALRM
 14

	)

24 
	#SIGTERM
 15

	)

25 
	#SIGSTKFLT
 16

	)

26 
	#SIGCHLD
 17

	)

27 
	#SIGCONT
 18

	)

28 
	#SIGSTOP
 19

	)

29 
	#SIGTSTP
 20

	)

30 
	#SIGTTIN
 21

	)

31 
	#SIGTTOU
 22

	)

32 
	#SIGURG
 23

	)

33 
	#SIGXCPU
 24

	)

34 
	#SIGXFSZ
 25

	)

35 
	#SIGVTALRM
 26

	)

36 
	#SIGPROF
 27

	)

37 
	#SIGWINCH
 28

	)

38 
	#SIGIO
 29

	)

39 
	#SIGPOLL
 
SIGIO


	)

43 
	#SIGPWR
 30

	)

44 
	#SIGSYS
 31

	)

45 
	#SIGUNUSED
 31

	)

48 
	#SIGRTMIN
 32

	)

49 
	#SIGRTMAX
 (
_NSIG
-1)

	)

65 
	#SA_NOCLDSTOP
 0x00000001

	)

66 
	#SA_NOCLDWAIT
 0x00000002

	)

67 
	#SA_SIGINFO
 0x00000004

	)

68 
	#SA_ONSTACK
 0x08000000

	)

69 
	#SA_RESTART
 0x10000000

	)

70 
	#SA_NODEFER
 0x40000000

	)

71 
	#SA_RESETHAND
 0x80000000

	)

73 
	#SA_NOMASK
 
SA_NODEFER


	)

74 
	#SA_ONESHOT
 
SA_RESETHAND


	)

75 
	#SA_INTERRUPT
 0x20000000

	)

77 
	#SA_RESTORER
 0x04000000

	)

82 
	#SS_ONSTACK
 1

	)

83 
	#SS_DISABLE
 2

	)

85 
	#MINSIGSTKSZ
 2048

	)

86 
	#SIGSTKSZ
 8192

	)

89 
	#SIG_BLOCK
 0

	)

90 
	#SIG_UNBLOCK
 1

	)

91 
	#SIG_SETMASK
 2

	)

94 (*
	t__sigh™dÀr_t
)();

96 
	#SIG_DFL
 ((
__sigh™dÀr_t
)0)

	)

97 
	#SIG_IGN
 ((
__sigh™dÀr_t
)1)

	)

98 
	#SIG_ERR
 ((
__sigh™dÀr_t
)-1)

	)

102 
	ssiga˘i⁄
 {

104 
__sigh™dÀr_t
 
_ß_h™dÀr
;

105 (*
_ß_siga˘i⁄
)(, 
sigöfo
 *, *);

106 } 
_u
;

107 
sig£t_t
 
ß_mask
;

108 
ß_Êags
;

109 (*
ß_ª°‹î
)();

112 
	#ß_h™dÀr
 
_u
.
_ß_h™dÀr


	)

113 
	#ß_siga˘i⁄
 
_u
.
_ß_siga˘i⁄


	)

116 
	ssigÆt°ack
 {

117 *
ss_•
;

118 
ss_Êags
;

119 
size_t
 
ss_size
;

120 } 
	t°ack_t
;

	@/usr/include/asm/smp.h

1 #i‚de‡
__ASM_SMP_H


2 
	#__ASM_SMP_H


	)

7 #i‚de‡
ASSEMBLY


8 
	~<löux/c⁄fig.h
>

9 
	~<löux/thªads.h
>

10 
	~<löux/±ø˚.h
>

13 #ifde‡
CONFIG_X86_LOCAL_APIC


14 #i‚de‡
ASSEMBLY


15 
	~<asm/fixm≠.h
>

16 
	~<asm/bô›s.h
>

17 
	~<asm/mp•ec.h
>

18 #ifde‡
CONFIG_X86_IO_APIC


19 
	~<asm/io_≠ic.h
>

21 
	~<asm/≠ic.h
>

25 #ifde‡
CONFIG_SMP


26 #i‚de‡
ASSEMBLY


32 
smp_Æloc_mem‹y
();

33 
phys_˝u_¥e£¡_m≠
;

34 
˝u_⁄löe_m≠
;

35 vﬁ©ûê
smp_övÆid©e_√eded
;

36 
pic_mode
;

37 
smp_Êush_éb
();

38 
smp_mesßge_úq
(
˝l
, *
dev_id
, 
±_ªgs
 *
ªgs
);

39 
smp_£nd_ªscheduÀ
(
˝u
);

40 
smp_övÆid©e_rcv
();

41 (*
mår_hook
) ();

42 
	`z≠_low_m≠pögs
 ();

49 
ölöe
 
	$˝u_logiˇl_m≠
(
˝u
)

51  
˝u
;

52 
	}
}

53 
ölöe
 
	$˝u_numbî_m≠
(
˝u
)

55  
˝u
;

56 
	}
}

62 vﬁ©ûê
x86_≠icid_to_˝u
[
NR_CPUS
];

63 vﬁ©ûê
x86_˝u_to_≠icid
[
NR_CPUS
];

69 
smp_boŸ_˝us
();

70 
smp_°‹e_˝u_öfo
(
id
);

78 
	#smp_¥o˚ss‹_id
(Ë(
cuºít
->
¥o˚ss‹
)

	)

80 
__ölöe
 
	$h¨d_smp_¥o˚ss‹_id
()

83  
	`GET_APIC_ID
(*(*)(
APIC_BASE
+
APIC_ID
));

84 
	}
}

88 
	#NO_PROC_ID
 0xFF

	)

100 
	#PROC_CHANGE_PENALTY
 15

	)

	@/usr/include/asm/statfs.h

1 #i‚de‡
_I386_STATFS_H


2 
	#_I386_STATFS_H


	)

4 #i‚de‡
__KERNEL_STRICT_NAMES


6 
	~<löux/ty≥s.h
>

8 
__kî√l_fsid_t
 
	tfsid_t
;

12 
	s°©fs
 {

13 
	mf_ty≥
;

14 
	mf_bsize
;

15 
	mf_blocks
;

16 
	mf_b‰ì
;

17 
	mf_bavaû
;

18 
	mf_fûes
;

19 
	mf_f‰ì
;

20 
__kî√l_fsid_t
 
	mf_fsid
;

21 
	mf_«mñí
;

22 
	mf_•¨e
[6];

	@/usr/include/asm/timex.h

6 #i‚de‡
_ASMi386_TIMEX_H


7 
	#_ASMi386_TIMEX_H


	)

9 
	~<löux/c⁄fig.h
>

11 
	#CLOCK_TICK_RATE
 1193180

	)

12 
	#CLOCK_TICK_FACTOR
 20

	)

13 
	#FINETUNE
 (((((()
LATCH
 * 
HZ
 - 
CLOCK_TICK_RATE
Ë<< 
SHIFT_HZ
) * \

14 (1000000/
CLOCK_TICK_FACTOR
Ë/ (
CLOCK_TICK_RATE
/CLOCK_TICK_FACTOR)) \

15 << (
SHIFT_SCALE
-
SHIFT_HZ
)Ë/ 
HZ
)

	)

31 
	tcy˛es_t
;

33 
cy˛es_t
 
ˇcheÊush_time
;

35 
ölöe
 
cy˛es_t
 
	$gë_cy˛es
 ()

37 #i‚de‡
CONFIG_X86_TSC


40 
ªt
;

42 
	`rdts˛l
(
ªt
);

43  
ªt
;

45 
	}
}

47 
˝u_khz
;

	@/usr/include/asm/types.h

1 #i‚de‡
_I386_TYPES_H


2 
	#_I386_TYPES_H


	)

4 
	tumode_t
;

11 
__sig√d__
 
	t__s8
;

12 
	t__u8
;

14 
__sig√d__
 
	t__s16
;

15 
	t__u16
;

17 
__sig√d__
 
	t__s32
;

18 
	t__u32
;

20 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

21 
__sig√d__
 
	t__s64
;

22 
	t__u64
;

28 #ifde‡
__KERNEL__


30 
	~<löux/c⁄fig.h
>

32 sig√d 
	ts8
;

33 
	tu8
;

35 sig√d 
	ts16
;

36 
	tu16
;

38 sig√d 
	ts32
;

39 
	tu32
;

41 sig√d 
	ts64
;

42 
	tu64
;

44 
	#BITS_PER_LONG
 32

	)

48 #ifde‡
CONFIG_HIGHMEM


49 
u64
 
	tdma_addr_t
;

51 
u32
 
	tdma_addr_t
;

53 
u64
 
	tdma64_addr_t
;

	@/usr/include/asm/vm86.h

1 #i‚de‡
_LINUX_VM86_H


2 
	#_LINUX_VM86_H


	)

15 
	#TF_MASK
 0x00000100

	)

16 
	#IF_MASK
 0x00000200

	)

17 
	#IOPL_MASK
 0x00003000

	)

18 
	#NT_MASK
 0x00004000

	)

19 
	#VM_MASK
 0x00020000

	)

20 
	#AC_MASK
 0x00040000

	)

21 
	#VIF_MASK
 0x00080000

	)

22 
	#VIP_MASK
 0x00100000

	)

23 
	#ID_MASK
 0x00200000

	)

25 
	#BIOSSEG
 0x0f000

	)

27 
	#CPU_086
 0

	)

28 
	#CPU_186
 1

	)

29 
	#CPU_286
 2

	)

30 
	#CPU_386
 3

	)

31 
	#CPU_486
 4

	)

32 
	#CPU_586
 5

	)

37 
	#VM86_TYPE
(
ªtvÆ
) (‘ëvÆË& 0xff)

	)

38 
	#VM86_ARG
(
ªtvÆ
) (‘ëvÆË>> 8)

	)

40 
	#VM86_SIGNAL
 0

	)

41 
	#VM86_UNKNOWN
 1

	)

42 
	#VM86_INTx
 2

	)

43 
	#VM86_STI
 3

	)

48 
	#VM86_PICRETURN
 4

	)

49 
	#VM86_TRAP
 6

	)

54 
	#VM86_PLUS_INSTALL_CHECK
 0

	)

55 
	#VM86_ENTER
 1

	)

56 
	#VM86_ENTER_NO_BYPASS
 2

	)

57 
	#VM86_REQUEST_IRQ
 3

	)

58 
	#VM86_FREE_IRQ
 4

	)

59 
	#VM86_GET_IRQ_BITS
 5

	)

60 
	#VM86_GET_AND_RESET_IRQ
 6

	)

68 
	svm86_ªgs
 {

72 
	mebx
;

73 
	mecx
;

74 
	medx
;

75 
	mesi
;

76 
	medi
;

77 
	mebp
;

78 
	móx
;

79 
	m__nuŒ_ds
;

80 
	m__nuŒ_es
;

81 
	m__nuŒ_fs
;

82 
	m__nuŒ_gs
;

83 
	m‹ig_óx
;

84 
	meù
;

85 
	mcs
, 
	m__csh
;

86 
	meÊags
;

87 
	me•
;

88 
	mss
, 
	m__ssh
;

92 
	mes
, 
	m__esh
;

93 
	mds
, 
	m__dsh
;

94 
	mfs
, 
	m__fsh
;

95 
	mgs
, 
	m__gsh
;

98 
	sªve˘‹ed_°ru˘
 {

99 
	m__m≠
[8];

102 
	svm86_°ru˘
 {

103 
vm86_ªgs
 
	mªgs
;

104 
	mÊags
;

105 
	ms¸ìn_bôm≠
;

106 
	m˝u_ty≥
;

107 
ªve˘‹ed_°ru˘
 
	möt_ªve˘‹ed
;

108 
ªve˘‹ed_°ru˘
 
	möt21_ªve˘‹ed
;

114 
	#VM86_SCREEN_BITMAP
 0x0001

	)

116 
	svm86∂us_öfo_°ru˘
 {

117 
	mf‹˚_ªtu∫_f‹_pic
:1;

118 
	mvm86dbg_a˘ive
:1;

119 
	mvm86dbg_TF≥ndig
:1;

120 
	munu£d
:28;

121 
	mis_vm86pus
:1;

122 
	mvm86dbg_ötxxèb
[32];

125 
	svm86∂us_°ru˘
 {

126 
vm86_ªgs
 
	mªgs
;

127 
	mÊags
;

128 
	ms¸ìn_bôm≠
;

129 
	m˝u_ty≥
;

130 
ªve˘‹ed_°ru˘
 
	möt_ªve˘‹ed
;

131 
ªve˘‹ed_°ru˘
 
	möt21_ªve˘‹ed
;

132 
vm86∂us_öfo_°ru˘
 
	mvm86∂us
;

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/pthreadtypes.h

15 #i‡!
deföed
 
_BITS_TYPES_H
 && !deföed 
_PTHREAD_H


19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	#__√ed_sched∑øm


	)

23 
	~<bôs/sched.h
>

26 
	s_±hªad_Á°lock


28 
	m__°©us
;

29 
	m__•ölock
;

33 #i‚de‡
_PTHREAD_DESCR_DEFINED


35 
_±hªad_des¸_°ru˘
 *
	t_±hªad_des¸
;

36 
	#_PTHREAD_DESCR_DEFINED


	)

41 
	s__±hªad_©å_s


43 
	m__dëach°©e
;

44 
	m__schedpﬁicy
;

45 
__sched_∑øm
 
	m__sched∑øm
;

46 
	m__öhîôsched
;

47 
	m__sc›e
;

48 
size_t
 
	m__gu¨dsize
;

49 
	m__°ackaddr_£t
;

50 *
	m__°ackaddr
;

51 
size_t
 
	m__°acksize
;

52 } 
	t±hªad_©å_t
;

58 
_±hªad_Á°lock
 
	m__c_lock
;

59 
_±hªad_des¸
 
	m__c_waôög
;

60 } 
	t±hªad_c⁄d_t
;

66 
	m__dummy
;

67 } 
	t±hªad_c⁄d©å_t
;

70 
	t±hªad_key_t
;

78 
	m__m_ª£rved
;

79 
	m__m_cou¡
;

80 
_±hªad_des¸
 
	m__m_ow√r
;

81 
	m__m_köd
;

82 
_±hªad_Á°lock
 
	m__m_lock
;

83 } 
	t±hªad_muãx_t
;

89 
	m__muãxköd
;

90 } 
	t±hªad_muãx©å_t
;

94 
	t±hªad_⁄˚_t
;

97 #ifde‡
__USE_UNIX98


99 
	s_±hªad_rwlock_t


101 
_±hªad_Á°lock
 
	m__rw_lock
;

102 
	m__rw_ªadîs
;

103 
_±hªad_des¸
 
	m__rw_wrôî
;

104 
_±hªad_des¸
 
	m__rw_ªad_waôög
;

105 
_±hªad_des¸
 
	m__rw_wrôe_waôög
;

106 
	m__rw_köd
;

107 
	m__rw_psh¨ed
;

108 } 
	t±hªad_rwlock_t
;

114 
	m__lockköd
;

115 
	m__psh¨ed
;

116 } 
	t±hªad_rwlock©å_t
;

119 #ifde‡
__USE_XOPEN2K


121 vﬁ©ûê
	t±hªad_•ölock_t
;

125 
_±hªad_Á°lock
 
	m__ba_lock
;

126 
	m__ba_ªquúed
;

127 
	m__ba_¥e£¡
;

128 
_±hªad_des¸
 
	m__ba_waôög
;

129 } 
	t±hªad_b¨rõr_t
;

133 
	m__psh¨ed
;

134 } 
	t±hªad_b¨rõøâr_t
;

140 
	t±hªad_t
;

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


24 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

26 
	#__FD_ZERO
(
fd•
) \

28 
__d0
, 
__d1
; \

29 
__asm__
 
	`__vﬁ©ûe__
 ("cld;Ñep; stosl" \

30 : "=c" (
__d0
), "=D" (
__d1
) \

31 : "a" (0), "0" ( (
fd_£t
) \

32 /  (
__fd_mask
)), \

33 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

35 } 0)

	)

37 
	#__FD_SET
(
fd
, 
fd•
) \

38 
__asm__
 
	`__vﬁ©ûe__
 ("btsl %1,%0" \

39 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

40 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

41 : "cc","mem‹y")

	)

42 
	#__FD_CLR
(
fd
, 
fd•
) \

43 
__asm__
 
	`__vﬁ©ûe__
 ("btrl %1,%0" \

44 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

45 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

46 : "cc","mem‹y")

	)

47 
	#__FD_ISSET
(
fd
, 
fd•
) \

48 (
__exãnsi⁄__
 \

49 ({
__ªsu…
; \

50 
__asm__
 
	`__vﬁ©ûe__
 ("btl %1,%2 ; setcb %b0" \

51 : "=q" (
__ªsu…
) \

52 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
), \

53 "m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

55 
__ªsu…
; }))

	)

61 
	#__FD_ZERO
(
£t
) \

63 
__i
; \

64 
fd_£t
 *
__¨r
 = (
£t
); \

65 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

66 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

67 } 0)

	)

68 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

69 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

70 
	#__FD_ISSET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] & 
	`__FDMASK
 (d))

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
) (((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
) 
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
) 
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
) 
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_u∆ock
(
	t_«me
) 
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

40 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

41 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

42 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

43 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

44 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

45 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

	@/usr/include/bits/wordsize.h

19 
	#__WORDSIZE
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
) (1 << (bô))

	)

45 
	#_ISbô
(
bô
) ((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
) (((cË& ~0x7fË=0)

	)

92 
	#__tﬂscii
(
c
) ((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
) 
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
) 
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
) 
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
) 
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
) 
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
) 
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
) 
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
) 
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
) 
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
) 
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
) 
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
) 
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
) 
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__ölöe
 

191 
	$tﬁowî
 (
__c
Ë
__THROW


193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__ölöe
 

197 
	$touµî
 (
__c
Ë
__THROW


199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
) 
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
) 
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
) 
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
) 
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
) ((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
) ((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
) 
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
) 
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
) 
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
) 
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
) 
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
) 
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
) 
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
) 
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
) 
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
) 
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
) 
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
) 
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
) 
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
) 
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
) (÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
) (÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
) 
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
) 
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
) 
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
) 
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
) 
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
) 
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
) 
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
) 
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
) 
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
) 
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
) 
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
) 
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
) 
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
) 
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/gnu/stubs.h

5 
	#__°ub___kî√l_co¶


	)

6 
	#__°ub___kî√l_söl


	)

7 
	#__°ub___kî√l_è∆


	)

8 
	#__°ub_chÊags


	)

9 
	#__°ub_Áâach


	)

10 
	#__°ub_fchÊags


	)

11 
	#__°ub_fdëach


	)

12 
	#__°ub_„xecve


	)

13 
	#__°ub_futimes


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lutimes


	)

16 
	#__°ub_posix_Ádvi£


	)

17 
	#__°ub_posix_Ádvi£64


	)

18 
	#__°ub_ªvoke


	)

19 
	#__°ub_£éogö


	)

20 
	#__°ub_sigªtu∫


	)

21 
	#__°ub_s°k


	)

22 
	#__°ub_°ty


	)

	@/usr/include/linux/bitops.h

1 #i‚de‡
_LINUX_BITOPS_H


2 
	#_LINUX_BITOPS_H


	)

11 
ölöe
 
	$gíîic_ffs
(
x
)

13 
r
 = 1;

15 i‡(!
x
)

17 i‡(!(
x
 & 0xffff)) {

18 
x
 >>= 16;

19 
r
 += 16;

21 i‡(!(
x
 & 0xff)) {

22 
x
 >>= 8;

23 
r
 += 8;

25 i‡(!(
x
 & 0xf)) {

26 
x
 >>= 4;

27 
r
 += 4;

29 i‡(!(
x
 & 3)) {

30 
x
 >>= 2;

31 
r
 += 2;

33 i‡(!(
x
 & 1)) {

34 
x
 >>= 1;

35 
r
 += 1;

37  
r
;

38 
	}
}

45 
ölöe
 
	$gíîic_hweight32
(
w
)

47 
ªs
 = (
w
 & 0x55555555) + ((w >> 1) & 0x55555555);

48 
ªs
 = (res & 0x33333333) + ((res >> 2) & 0x33333333);

49 
ªs
 = (res & 0x0F0F0F0F) + ((res >> 4) & 0x0F0F0F0F);

50 
ªs
 = (res & 0x00FF00FF) + ((res >> 8) & 0x00FF00FF);

51  (
ªs
 & 0x0000FFFF) + ((res >> 16) & 0x0000FFFF);

52 
	}
}

54 
ölöe
 
	$gíîic_hweight16
(
w
)

56 
ªs
 = (
w
 & 0x5555) + ((w >> 1) & 0x5555);

57 
ªs
 = (res & 0x3333) + ((res >> 2) & 0x3333);

58 
ªs
 = (res & 0x0F0F) + ((res >> 4) & 0x0F0F);

59  (
ªs
 & 0x00FF) + ((res >> 8) & 0x00FF);

60 
	}
}

62 
ölöe
 
	$gíîic_hweight8
(
w
)

64 
ªs
 = (
w
 & 0x55) + ((w >> 1) & 0x55);

65 
ªs
 = (res & 0x33) + ((res >> 2) & 0x33);

66  (
ªs
 & 0x0F) + ((res >> 4) & 0x0F);

67 
	}
}

69 
	~<asm/bô›s.h
>

	@/usr/include/linux/capability.h

13 #i‚de‡
_LINUX_CAPABILITY_H


14 
	#_LINUX_CAPABILITY_H


	)

16 
	~<löux/ty≥s.h
>

17 
	~<löux/fs.h
>

30 
	#_LINUX_CAPABILITY_VERSION
 0x19980330

	)

32 
	s__u£r_ˇp_hódî_°ru˘
 {

33 
__u32
 
	mvîsi⁄
;

34 
	mpid
;

35 } *
	tˇp_u£r_hódî_t
;

37 
	s__u£r_ˇp_d©a_°ru˘
 {

38 
__u32
 
	mef„˘ive
;

39 
__u32
 
	m≥rmôãd
;

40 
__u32
 
	möhîôabÀ
;

41 } *
	tˇp_u£r_d©a_t
;

51 
	#CAP_CHOWN
 0

	)

57 
	#CAP_DAC_OVERRIDE
 1

	)

63 
	#CAP_DAC_READ_SEARCH
 2

	)

69 
	#CAP_FOWNER
 3

	)

78 
	#CAP_FSETID
 4

	)

82 
	#CAP_FS_MASK
 0x1f

	)

88 
	#CAP_KILL
 5

	)

94 
	#CAP_SETGID
 6

	)

99 
	#CAP_SETUID
 7

	)

109 
	#CAP_SETPCAP
 8

	)

113 
	#CAP_LINUX_IMMUTABLE
 9

	)

118 
	#CAP_NET_BIND_SERVICE
 10

	)

122 
	#CAP_NET_BROADCAST
 11

	)

138 
	#CAP_NET_ADMIN
 12

	)

143 
	#CAP_NET_RAW
 13

	)

149 
	#CAP_IPC_LOCK
 14

	)

153 
	#CAP_IPC_OWNER
 15

	)

157 
	#CAP_SYS_MODULE
 16

	)

162 
	#CAP_SYS_RAWIO
 17

	)

166 
	#CAP_SYS_CHROOT
 18

	)

170 
	#CAP_SYS_PTRACE
 19

	)

174 
	#CAP_SYS_PACCT
 20

	)

213 
	#CAP_SYS_ADMIN
 21

	)

217 
	#CAP_SYS_BOOT
 22

	)

225 
	#CAP_SYS_NICE
 23

	)

239 
	#CAP_SYS_RESOURCE
 24

	)

245 
	#CAP_SYS_TIME
 25

	)

250 
	#CAP_SYS_TTY_CONFIG
 26

	)

254 
	#CAP_MKNOD
 27

	)

258 
	#CAP_LEASE
 28

	)

	@/usr/include/linux/highmem.h

1 #i‚de‡
_LINUX_HIGHMEM_H


2 
	#_LINUX_HIGHMEM_H


	)

4 
	~<löux/c⁄fig.h
>

5 
	~<asm/pgÆloc.h
>

7 #ifde‡
CONFIG_HIGHMEM


9 
∑ge
 *
highmem_°¨t_∑ge
;

11 
	~<asm/highmem.h
>

14 
FASTCALL
(
ƒ_‰ì_high∑ges
());

16 
buf„r_hód
 *
¸óã_boun˚
(
rw
, buf„r_hód * 
bh_‹ig
);

18 
ölöe
 *
	$bh_km≠
(
buf„r_hód
 *
bh
)

20  
	`km≠
(
bh
->
b_∑ge
Ë+ 
	`bh_off£t
(bh);

21 
	}
}

23 
ölöe
 
	$bh_kunm≠
(
buf„r_hód
 *
bh
)

25 
	`kunm≠
(
bh
->
b_∑ge
);

26 
	}
}

32 
ölöe
 *
	$bh_km≠_úq
(
buf„r_hód
 *
bh
, *
Êags
)

34 
addr
;

36 
	`__ßve_Êags
(*
Êags
);

41 i‡(!
	`PageHighMem
(
bh
->
b_∑ge
))

42  
bh
->
b_d©a
;

47 
	`__˛i
();

48 
addr
 = (Ë
	`km≠_©omic
(
bh
->
b_∑ge
, 
KM_BH_IRQ
);

50 i‡(
addr
 & ~
PAGE_MASK
)

51 
	`BUG
();

53  (*Ë
addr
 + 
	`bh_off£t
(
bh
);

54 
	}
}

56 
ölöe
 
	$bh_kunm≠_úq
(*
buf„r
, *
Êags
)

58 
±r
 = (Ë
buf„r
 & 
PAGE_MASK
;

60 
	`kunm≠_©omic
((*Ë
±r
, 
KM_BH_IRQ
);

61 
	`__ª°‹e_Êags
(*
Êags
);

62 
	}
}

66 
ölöe
 
	$ƒ_‰ì_high∑ges
(Ë{  0; 
	}
}

68 
ölöe
 *
	$km≠
(
∑ge
 *∑geË{  
	`∑ge_addªss
’age); 
	}
}

70 
	#kunm≠
(
∑ge
Ëdÿ{ } 0)

	)

72 
	#km≠_©omic
(
∑ge
,
idx
Ë
	`km≠
’age)

	)

73 
	#kunm≠_©omic
(
∑ge
,
idx
Ë
	`kunm≠
’age)

	)

75 
	#bh_km≠
(
bh
Ë((bh)->
b_d©a
)

	)

76 
	#bh_kunm≠
(
bh
Ëdÿ{ } 0)

	)

77 
	#bh_km≠_úq
(
bh
, 
Êags
Ë((bh)->
b_d©a
)

	)

78 
	#bh_kunm≠_úq
(
bh
, 
Êags
) dÿ{ } 0)

	)

83 
ölöe
 
	$˛ór_u£r_high∑ge
(
∑ge
 *∑ge, 
vaddr
)

85 *
addr
 = 
	`km≠_©omic
(
∑ge
, 
KM_USER0
);

86 
	`˛ór_u£r_∑ge
(
addr
, 
vaddr
);

87 
	`kunm≠_©omic
(
addr
, 
KM_USER0
);

88 
	}
}

90 
ölöe
 
	$˛ór_high∑ge
(
∑ge
 *page)

92 
	`˛ór_∑ge
(
	`km≠
(
∑ge
));

93 
	`kunm≠
(
∑ge
);

94 
	}
}

96 
ölöe
 
	$mem˛ór_high∑ge
(
∑ge
 *∑ge, 
off£t
, 
size
)

98 *
kaddr
;

100 i‡(
off£t
 + 
size
 > 
PAGE_SIZE
)

101 
	`BUG
();

102 
kaddr
 = 
	`km≠
(
∑ge
);

103 
	`mem£t
(
kaddr
 + 
off£t
, 0, 
size
);

104 
	`kunm≠
(
∑ge
);

105 
	}
}

110 
ölöe
 
	$mem˛ór_high∑ge_Êush
(
∑ge
 *∑ge, 
off£t
, 
size
)

112 *
kaddr
;

114 i‡(
off£t
 + 
size
 > 
PAGE_SIZE
)

115 
	`BUG
();

116 
kaddr
 = 
	`km≠
(
∑ge
);

117 
	`mem£t
(
kaddr
 + 
off£t
, 0, 
size
);

118 
	`Êush_∑ge_to_øm
(
∑ge
);

119 
	`kunm≠
(
∑ge
);

120 
	}
}

122 
ölöe
 
	$c›y_u£r_high∑ge
(
∑ge
 *
to
, ∑gê*
‰om
, 
vaddr
)

124 *
v‰om
, *
vto
;

126 
v‰om
 = 
	`km≠_©omic
(
‰om
, 
KM_USER0
);

127 
vto
 = 
	`km≠_©omic
(
to
, 
KM_USER1
);

128 
	`c›y_u£r_∑ge
(
vto
, 
v‰om
, 
vaddr
);

129 
	`kunm≠_©omic
(
v‰om
, 
KM_USER0
);

130 
	`kunm≠_©omic
(
vto
, 
KM_USER1
);

131 
	}
}

133 
ölöe
 
	$c›y_high∑ge
(
∑ge
 *
to
, ∑gê*
‰om
)

135 *
v‰om
, *
vto
;

137 
v‰om
 = 
	`km≠
(
‰om
);

138 
vto
 = 
	`km≠
(
to
);

139 
	`c›y_∑ge
(
vto
, 
v‰om
);

140 
	`kunm≠
(
‰om
);

141 
	`kunm≠
(
to
);

142 
	}
}

	@/usr/include/linux/ipc.h

1 #i‚de‡
_LINUX_IPC_H


2 
	#_LINUX_IPC_H


	)

4 
	~<löux/ty≥s.h
>

6 
	#IPC_PRIVATE
 ((
__kî√l_key_t
Ë0Ë

	)

9 
	sùc_≥rm


11 
__kî√l_key_t
 
	mkey
;

12 
__kî√l_uid_t
 
	muid
;

13 
__kî√l_gid_t
 
	mgid
;

14 
__kî√l_uid_t
 
	mcuid
;

15 
__kî√l_gid_t
 
	mcgid
;

16 
__kî√l_mode_t
 
	mmode
;

17 
	m£q
;

21 
	~<asm/ùcbuf.h
>

24 
	#IPC_CREAT
 00001000

	)

25 
	#IPC_EXCL
 00002000

	)

26 
	#IPC_NOWAIT
 00004000

	)

31 
	#IPC_DIPC
 00010000

	)

32 
	#IPC_OWN
 00020000

	)

38 
	#IPC_RMID
 0

	)

39 
	#IPC_SET
 1

	)

40 
	#IPC_STAT
 2

	)

41 
	#IPC_INFO
 3

	)

47 
	#IPC_OLD
 0

	)

49 
	#IPC_64
 0x0100

	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
) ((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
) (1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

46 
	~<asm/posix_ty≥s.h
>

	@/usr/include/linux/prefetch.h

10 #i‚de‡
_LINUX_PREFETCH_H


11 
	#_LINUX_PREFETCH_H


	)

13 
	~<asm/¥o˚ss‹.h
>

14 
	~<asm/ˇche.h
>

41 #i‚de‡
ARCH_HAS_PREFETCH


42 
	#ARCH_HAS_PREFETCH


	)

43 
ölöe
 
	$¥e„tch
(c⁄° *
x
Ë{;
	}
}

46 #i‚de‡
ARCH_HAS_PREFETCHW


47 
	#ARCH_HAS_PREFETCHW


	)

48 
ölöe
 
	$¥e„tchw
(c⁄° *
x
Ë{;
	}
}

51 #i‚de‡
ARCH_HAS_SPINLOCK_PREFETCH


52 
	#ARCH_HAS_SPINLOCK_PREFETCH


	)

53 
	#•ö_lock_¥e„tch
(
x
Ë
	`¥e„tchw
(x)

	)

56 #i‚de‡
PREFETCH_STRIDE


57 
	#PREFETCH_STRIDE
 (4*
L1_CACHE_BYTES
)

	)

	@/usr/include/linux/ptrace.h

1 #i‚de‡
_LINUX_PTRACE_H


2 
	#_LINUX_PTRACE_H


	)

8 
	#PTRACE_TRACEME
 0

	)

9 
	#PTRACE_PEEKTEXT
 1

	)

10 
	#PTRACE_PEEKDATA
 2

	)

11 
	#PTRACE_PEEKUSR
 3

	)

12 
	#PTRACE_POKETEXT
 4

	)

13 
	#PTRACE_POKEDATA
 5

	)

14 
	#PTRACE_POKEUSR
 6

	)

15 
	#PTRACE_CONT
 7

	)

16 
	#PTRACE_KILL
 8

	)

17 
	#PTRACE_SINGLESTEP
 9

	)

19 
	#PTRACE_ATTACH
 0x10

	)

20 
	#PTRACE_DETACH
 0x11

	)

22 
	#PTRACE_SYSCALL
 24

	)

24 
	~<asm/±ø˚.h
>

	@/usr/include/linux/socket.h

1 #i‚de‡
_LINUX_SOCKET_H


2 
	#_LINUX_SOCKET_H


	)

4 #i‡
deföed
(
__KERNEL__
Ë|| !deföed(
__GLIBC__
) || (__GLIBC__ < 2)

6 
	~<asm/sockë.h
>

7 
	~<löux/sockios.h
>

8 
	~<löux/uio.h
>

9 
	~<löux/ty≥s.h
>

11 
	tß_Ámûy_t
;

17 
	ssockaddr
 {

18 
ß_Ámûy_t
 
	mß_Ámûy
;

19 
	mß_d©a
[14];

22 
	slögî
 {

23 
	ml_⁄off
;

24 
	ml_lögî
;

33 
	smsghdr
 {

34 * 
	mmsg_«me
;

35 
	mmsg_«mñí
;

36 
iovec
 * 
	mmsg_iov
;

37 
__kî√l_size_t
 
	mmsg_iovÀn
;

38 * 
	mmsg_c⁄åﬁ
;

39 
__kî√l_size_t
 
	mmsg_c⁄åﬁÀn
;

40 
	mmsg_Êags
;

49 
	scmsghdr
 {

50 
__kî√l_size_t
 
	mcmsg_Àn
;

51 
	mcmsg_Àvñ
;

52 
	mcmsg_ty≥
;

60 
	#__CMSG_NXTHDR
(
˘l
, 
Àn
, 
cmsg
Ë
	`__cmsg_nxthdr
((˘l),÷í),(cmsg))

	)

61 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`cmsg_nxthdr
((mhdr), (cmsg))

	)

63 
	#CMSG_ALIGN
(
Àn
Ë–(÷í)+()-1Ë& ~(()-1Ë)

	)

65 
	#CMSG_DATA
(
cmsg
) ((*)((*)(cmsgË+ 
	`CMSG_ALIGN
((
cmsghdr
))))

	)

66 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
((
cmsghdr
)Ë+ CMSG_ALIGN÷í))

	)

67 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
((
cmsghdr
)Ë+ (Àn))

	)

69 
	#__CMSG_FIRSTHDR
(
˘l
,
Àn
Ë(÷íË>(
cmsghdr
) ? \

70 (
cmsghdr
 *)(
˘l
) : \

71 (
cmsghdr
 *)
NULL
)

	)

72 
	#CMSG_FIRSTHDR
(
msg
) 
	`__CMSG_FIRSTHDR
((msg)->
msg_c⁄åﬁ
, (msg)->
msg_c⁄åﬁÀn
)

	)

78 #i‡ 
deföed
(
__GNUC__
)

79 
	#__KINLINE
 
__ölöe__


	)

80 #ñi‡
deföed
(
__˝lu•lus
)

81 
	#__KINLINE
 
ölöe


	)

97 
__KINLINE
 
cmsghdr
 * 
	$__cmsg_nxthdr
(*
__˘l
, 
__kî√l_size_t
 
__size
,

98 
cmsghdr
 *
__cmsg
)

100 
cmsghdr
 * 
__±r
;

102 
__±r
 = (
cmsghdr
*)(((*Ë
__cmsg
Ë+ 
	`CMSG_ALIGN
(__cmsg->
cmsg_Àn
));

103 i‡(()((*)(
__±r
+1Ë- (*Ë
__˘l
Ë> 
__size
)

104  (
cmsghdr
 *)0;

106  
__±r
;

107 
	}
}

109 
__KINLINE
 
cmsghdr
 * 
	$cmsg_nxthdr
 (
msghdr
 *
__msg
, 
cmsghdr
 *
__cmsg
)

111  
	`__cmsg_nxthdr
(
__msg
->
msg_c⁄åﬁ
, __msg->
msg_c⁄åﬁÀn
, 
__cmsg
);

112 
	}
}

116 
	#SCM_RIGHTS
 0x01

	)

117 
	#SCM_CREDENTIALS
 0x02

	)

118 
	#SCM_CONNECT
 0x03

	)

120 
	su¸ed
 {

121 
__u32
 
	mpid
;

122 
__u32
 
	muid
;

123 
__u32
 
	mgid
;

127 
	#AF_UNSPEC
 0

	)

128 
	#AF_UNIX
 1

	)

129 
	#AF_LOCAL
 1

	)

130 
	#AF_INET
 2

	)

131 
	#AF_AX25
 3

	)

132 
	#AF_IPX
 4

	)

133 
	#AF_APPLETALK
 5

	)

134 
	#AF_NETROM
 6

	)

135 
	#AF_BRIDGE
 7

	)

136 
	#AF_ATMPVC
 8

	)

137 
	#AF_X25
 9

	)

138 
	#AF_INET6
 10

	)

139 
	#AF_ROSE
 11

	)

140 
	#AF_DEC√t
 12

	)

141 
	#AF_NETBEUI
 13

	)

142 
	#AF_SECURITY
 14

	)

143 
	#AF_KEY
 15

	)

144 
	#AF_NETLINK
 16

	)

145 
	#AF_ROUTE
 
AF_NETLINK


	)

146 
	#AF_PACKET
 17

	)

147 
	#AF_ASH
 18

	)

148 
	#AF_ECONET
 19

	)

149 
	#AF_ATMSVC
 20

	)

150 
	#AF_SNA
 22

	)

151 
	#AF_IRDA
 23

	)

152 
	#AF_PPPOX
 24

	)

153 
	#AF_WANPIPE
 25

	)

154 
	#AF_BLUETOOTH
 31

	)

155 
	#AF_MAX
 32

	)

158 
	#PF_UNSPEC
 
AF_UNSPEC


	)

159 
	#PF_UNIX
 
AF_UNIX


	)

160 
	#PF_LOCAL
 
AF_LOCAL


	)

161 
	#PF_INET
 
AF_INET


	)

162 
	#PF_AX25
 
AF_AX25


	)

163 
	#PF_IPX
 
AF_IPX


	)

164 
	#PF_APPLETALK
 
AF_APPLETALK


	)

165 
	#PF_NETROM
 
AF_NETROM


	)

166 
	#PF_BRIDGE
 
AF_BRIDGE


	)

167 
	#PF_ATMPVC
 
AF_ATMPVC


	)

168 
	#PF_X25
 
AF_X25


	)

169 
	#PF_INET6
 
AF_INET6


	)

170 
	#PF_ROSE
 
AF_ROSE


	)

171 
	#PF_DEC√t
 
AF_DEC√t


	)

172 
	#PF_NETBEUI
 
AF_NETBEUI


	)

173 
	#PF_SECURITY
 
AF_SECURITY


	)

174 
	#PF_KEY
 
AF_KEY


	)

175 
	#PF_NETLINK
 
AF_NETLINK


	)

176 
	#PF_ROUTE
 
AF_ROUTE


	)

177 
	#PF_PACKET
 
AF_PACKET


	)

178 
	#PF_ASH
 
AF_ASH


	)

179 
	#PF_ECONET
 
AF_ECONET


	)

180 
	#PF_ATMSVC
 
AF_ATMSVC


	)

181 
	#PF_SNA
 
AF_SNA


	)

182 
	#PF_IRDA
 
AF_IRDA


	)

183 
	#PF_PPPOX
 
AF_PPPOX


	)

184 
	#PF_WANPIPE
 
AF_WANPIPE


	)

185 
	#PF_BLUETOOTH
 
AF_BLUETOOTH


	)

186 
	#PF_MAX
 
AF_MAX


	)

189 
	#SOMAXCONN
 128

	)

195 
	#MSG_OOB
 1

	)

196 
	#MSG_PEEK
 2

	)

197 
	#MSG_DONTROUTE
 4

	)

198 
	#MSG_TRYHARD
 4

	)

199 
	#MSG_CTRUNC
 8

	)

200 
	#MSG_PROBE
 0x10

	)

201 
	#MSG_TRUNC
 0x20

	)

202 
	#MSG_DONTWAIT
 0x40

	)

203 
	#MSG_EOR
 0x80

	)

204 
	#MSG_WAITALL
 0x100

	)

205 
	#MSG_FIN
 0x200

	)

206 
	#MSG_SYN
 0x400

	)

207 
	#MSG_CONFIRM
 0x800

	)

208 
	#MSG_RST
 0x1000

	)

209 
	#MSG_ERRQUEUE
 0x2000

	)

210 
	#MSG_NOSIGNAL
 0x4000

	)

211 
	#MSG_MORE
 0x8000

	)

213 
	#MSG_EOF
 
MSG_FIN


	)

217 
	#SOL_IP
 0

	)

219 
	#SOL_TCP
 6

	)

220 
	#SOL_UDP
 17

	)

221 
	#SOL_IPV6
 41

	)

222 
	#SOL_ICMPV6
 58

	)

223 
	#SOL_RAW
 255

	)

224 
	#SOL_IPX
 256

	)

225 
	#SOL_AX25
 257

	)

226 
	#SOL_ATALK
 258

	)

227 
	#SOL_NETROM
 259

	)

228 
	#SOL_ROSE
 260

	)

229 
	#SOL_DECNET
 261

	)

230 
	#SOL_X25
 262

	)

231 
	#SOL_PACKET
 263

	)

232 
	#SOL_ATM
 264

	)

233 
	#SOL_AAL
 265

	)

234 
	#SOL_IRDA
 266

	)

237 
	#IPX_TYPE
 1

	)

	@/usr/include/linux/spinlock.h

1 #i‚de‡
__LINUX_SPINLOCK_H


2 
	#__LINUX_SPINLOCK_H


	)

	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


35 #undef 
__P


36 #undef 
__PMT


38 #ifde‡
__GNUC__


43 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

44 
	#__THROW
 
	`throw
 ()

	)

46 
	#__THROW


	)

48 
	#__P
(
¨gs
)árg†
__THROW


	)

51 
	#__PMT
(
¨gs
) 
	)
args

55 
	#__ölöe


	)

57 
	#__THROW


	)

58 
	#__P
(
¨gs
) 
	)
args

59 
	#__PMT
(
¨gs
) 
	)
args

61 
	#__c⁄°
 c⁄°

	)

62 
	#__sig√d
 sig√d

	)

63 
	#__vﬁ©ûe
 vﬁ©ûe

	)

70 
	#__CONCAT
(
x
,
y
) x ## 
	)
y

71 
	#__STRING
(
x
) #x

	)

74 
	#__±r_t
 *

	)

75 
	#__l⁄g_doubÀ_t
 

	)

79 #ifdef 
__˝lu•lus


80 
	#__BEGIN_DECLS
 "C" {

	)

81 
	#__END_DECLS
 }

	)

83 
	#__BEGIN_DECLS


	)

84 
	#__END_DECLS


	)

93 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


94 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

95 
	#__END_NAMESPACE_STD
 }

	)

96 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

97 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

98 
	#__END_NAMESPACE_C99
 }

	)

99 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

104 
	#__BEGIN_NAMESPACE_STD


	)

105 
	#__END_NAMESPACE_STD


	)

106 
	#__USING_NAMESPACE_STD
(
«me
)

	)

107 
	#__BEGIN_NAMESPACE_C99


	)

108 
	#__END_NAMESPACE_C99


	)

109 
	#__USING_NAMESPACE_C99
(
«me
)

	)

114 #i‚de‡
__BOUNDED_POINTERS__


115 
	#__bounded


	)

116 
	#__unbounded


	)

117 
	#__±rvÆue


	)

122 #i‡
__GNUC_PREREQ
 (2,97)

124 
	#__Êex¨r
 []

	)

126 #ifde‡
__GNUC__


127 
	#__Êex¨r
 [0]

	)

129 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

130 
	#__Êex¨r
 []

	)

133 
	#__Êex¨r
 [1]

	)

149 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

151 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

152 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

153 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

166 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

167 
	#__©åibuã__
(
xyz
)

	)

173 #i‡
__GNUC_PREREQ
 (2,96)

174 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

176 
	#__©åibuã_mÆloc__


	)

182 #i‡
__GNUC_PREREQ
 (2,96)

183 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

185 
	#__©åibuã_puª__


	)

191 #i‡
__GNUC_PREREQ
 (3,1)

192 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

193 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

195 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

196 
	#__©åibuã_noölöe__


	)

205 #i‡
__GNUC_PREREQ
 (2,8)

206 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

208 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

215 #i‡
__GNUC_PREREQ
 (2,97)

216 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

217 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

219 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

226 #i‡!
__GNUC_PREREQ
 (2,8)

227 
	#__exãnsi⁄__


	)

231 #i‡!
__GNUC_PREREQ
 (2,92)

232 
	#__ª°ri˘


	)

238 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


239 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

241 #ifde‡
__GNUC__


242 
	#__ª°ri˘_¨r


	)

244 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

245 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

248 
	#__ª°ri˘_¨r


	)

	@/usr/include/asm/apic.h

1 #i‚de‡
__ASM_APIC_H


2 
	#__ASM_APIC_H


	)

4 
	~<löux/c⁄fig.h
>

5 
	~<löux/pm.h
>

6 
	~<asm/≠icdef.h
>

7 
	~<asm/sy°em.h
>

9 #ifde‡
CONFIG_X86_LOCAL_APIC


11 
	#APIC_DEBUG
 0

	)

13 #i‡
APIC_DEBUG


14 
	#D¥ötk
(
x
...Ë
	`¥ötk
(x)

	)

16 
	#D¥ötk
(
x
...)

	)

23 
__ölöe
 
	$≠ic_wrôe
(
ªg
, 
v
)

25 *((vﬁ©ûê*)(
APIC_BASE
+
ªg
)Ë
v
;

26 
	}
}

28 
__ölöe
 
	$≠ic_wrôe_©omic
(
ªg
, 
v
)

30 
	`xchg
((vﬁ©ûê*)(
APIC_BASE
+
ªg
), 
v
);

31 
	}
}

33 
__ölöe
 
	$≠ic_ªad
(
ªg
)

35  *((vﬁ©ûê*)(
APIC_BASE
+
ªg
));

36 
	}
}

38 
__ölöe__
 
	$≠ic_waô_i¸_idÀ
()

40 dÿ{ }  
	`≠ic_ªad
–
APIC_ICR
 ) & 
APIC_ICR_BUSY
 );

41 
	}
}

43 #ifde‡
CONFIG_X86_GOOD_APIC


44 
	#FORCE_READ_AROUND_WRITE
 0

	)

45 
	#≠ic_ªad_¨ound
(
x
)

	)

46 
	#≠ic_wrôe_¨ound
(
x
,
y
Ë
	`≠ic_wrôe
((x),(y))

	)

48 
	#FORCE_READ_AROUND_WRITE
 1

	)

49 
	#≠ic_ªad_¨ound
(
x
Ë
	`≠ic_ªad
(x)

	)

50 
	#≠ic_wrôe_¨ound
(
x
,
y
Ë
	`≠ic_wrôe_©omic
((x),(y))

	)

53 
ölöe
 
	$ack_APIC_úq
()

63 
	`≠ic_wrôe_¨ound
(
APIC_EOI
, 0);

64 
	}
}

66 
gë_maxlvt
();

67 
c⁄√˘_b•_APIC
 ();

68 
disc⁄√˘_b•_APIC
 ();

69 
dißbÀ_loˇl_APIC
 ();

70 
vîify_loˇl_APIC
 ();

71 
ˇche_APIC_ªgi°îs
 ();

72 
sync_Arb_IDs
 ();

73 
öô_b•_APIC
 ();

74 
£tup_loˇl_APIC
 ();

75 
öô_≠ic_m≠pögs
 ();

76 
smp_loˇl_timî_öãºu±
 (
±_ªgs
 * 
ªgs
);

77 
£tup_APIC_˛ocks
 ();

78 
£tup_≠ic_nmi_w©chdog
 ();

79 
ölöe
 
nmi_w©chdog_tick
 (
±_ªgs
 * 
ªgs
);

80 
APIC_öô_unùro˚ss‹
 ();

82 
pm_dev
 *
≠ic_pm_ªgi°î
(
pm_dev_t
, , 
pm_ˇŒback
);

83 
≠ic_pm_uƒegi°î
(
pm_dev
*);

85 
≠ic_timî_úqs
 [
NR_CPUS
];

86 
check_nmi_w©chdog
 ();

88 
nmi_w©chdog
;

89 
	#NMI_NONE
 0

	)

90 
	#NMI_IO_APIC
 1

	)

91 
	#NMI_LOCAL_APIC
 2

	)

92 
	#NMI_INVALID
 3

	)

	@/usr/include/asm/bitops.h

1 #i‚de‡
_I386_BITOPS_H


2 
	#_I386_BITOPS_H


	)

8 
	~<löux/c⁄fig.h
>

18 #ifde‡
CONFIG_SMP


19 
	#LOCK_PREFIX
 "lock ; "

	)

21 
	#LOCK_PREFIX
 ""

	)

24 
	#ADDR
 (*(vﬁ©ûê*Ë
addr
)

	)

36 
__ölöe__
 
	$£t_bô
(
ƒ
, vﬁ©ûê* 
addr
)

38 
__asm__
 
	`__vﬁ©ûe__
–
LOCK_PREFIX


40 :"=m" (
ADDR
)

41 :"Ir" (
ƒ
));

42 
	}
}

53 
__ölöe__
 
	$__£t_bô
(
ƒ
, vﬁ©ûê* 
addr
)

55 
	`__asm__
(

57 :"=m" (
ADDR
)

58 :"Ir" (
ƒ
));

59 
	}
}

71 
__ölöe__
 
	$˛ór_bô
(
ƒ
, vﬁ©ûê* 
addr
)

73 
__asm__
 
	`__vﬁ©ûe__
–
LOCK_PREFIX


75 :"=m" (
ADDR
)

76 :"Ir" (
ƒ
));

77 
	}
}

78 
	#smp_mb__bef‹e_˛ór_bô
() 
	`b¨rõr
()

	)

79 
	#smp_mb__a·î_˛ór_bô
() 
	`b¨rõr
()

	)

90 
__ölöe__
 
	$__ch™ge_bô
(
ƒ
, vﬁ©ûê* 
addr
)

92 
__asm__
 
	`__vﬁ©ûe__
(

94 :"=m" (
ADDR
)

95 :"Ir" (
ƒ
));

96 
	}
}

107 
__ölöe__
 
	$ch™ge_bô
(
ƒ
, vﬁ©ûê* 
addr
)

109 
__asm__
 
	`__vﬁ©ûe__
–
LOCK_PREFIX


111 :"=m" (
ADDR
)

112 :"Ir" (
ƒ
));

113 
	}
}

123 
__ölöe__
 
	$ã°_™d_£t_bô
(
ƒ
, vﬁ©ûê* 
addr
)

125 
ﬁdbô
;

127 
__asm__
 
	`__vﬁ©ûe__
–
LOCK_PREFIX


129 :"Ù" (
ﬁdbô
),"=m" (
ADDR
)

130 :"Ir" (
ƒ
) : "memory");

131  
ﬁdbô
;

132 
	}
}

143 
__ölöe__
 
	$__ã°_™d_£t_bô
(
ƒ
, vﬁ©ûê* 
addr
)

145 
ﬁdbô
;

147 
	`__asm__
(

149 :"Ù" (
ﬁdbô
),"=m" (
ADDR
)

150 :"Ir" (
ƒ
));

151  
ﬁdbô
;

152 
	}
}

162 
__ölöe__
 
	$ã°_™d_˛ór_bô
(
ƒ
, vﬁ©ûê* 
addr
)

164 
ﬁdbô
;

166 
__asm__
 
	`__vﬁ©ûe__
–
LOCK_PREFIX


168 :"Ù" (
ﬁdbô
),"=m" (
ADDR
)

169 :"Ir" (
ƒ
) : "memory");

170  
ﬁdbô
;

171 
	}
}

182 
__ölöe__
 
	$__ã°_™d_˛ór_bô
(
ƒ
, vﬁ©ûê* 
addr
)

184 
ﬁdbô
;

186 
	`__asm__
(

188 :"Ù" (
ﬁdbô
),"=m" (
ADDR
)

189 :"Ir" (
ƒ
));

190  
ﬁdbô
;

191 
	}
}

194 
__ölöe__
 
	$__ã°_™d_ch™ge_bô
(
ƒ
, vﬁ©ûê* 
addr
)

196 
ﬁdbô
;

198 
__asm__
 
	`__vﬁ©ûe__
(

200 :"Ù" (
ﬁdbô
),"=m" (
ADDR
)

201 :"Ir" (
ƒ
) : "memory");

202  
ﬁdbô
;

203 
	}
}

213 
__ölöe__
 
	$ã°_™d_ch™ge_bô
(
ƒ
, vﬁ©ûê* 
addr
)

215 
ﬁdbô
;

217 
__asm__
 
	`__vﬁ©ûe__
–
LOCK_PREFIX


219 :"Ù" (
ﬁdbô
),"=m" (
ADDR
)

220 :"Ir" (
ƒ
) : "memory");

221  
ﬁdbô
;

222 
	}
}

230 
ã°_bô
(
ƒ
, c⁄° vﬁ©ûê* 
addr
);

233 
__ölöe__
 
	$c⁄°™t_ã°_bô
(
ƒ
, c⁄° vﬁ©ûê* 
addr
)

235  ((1UL << (
ƒ
 & 31)Ë& (((c⁄° vﬁ©ûê*Ë
addr
)[nr >> 5])) != 0;

236 
	}
}

238 
__ölöe__
 
	$v¨übÀ_ã°_bô
(
ƒ
, vﬁ©ûê* 
addr
)

240 
ﬁdbô
;

242 
__asm__
 
	`__vﬁ©ûe__
(

244 :"Ù" (
ﬁdbô
)

245 :"m" (
ADDR
),"Ir" (
ƒ
));

246  
ﬁdbô
;

247 
	}
}

249 
	#ã°_bô
(
ƒ
,
addr
) \

250 (
	`__buûtö_c⁄°™t_p
(
ƒ
) ? \

251 
	`c⁄°™t_ã°_bô
((
ƒ
),(
addr
)) : \

252 
	`v¨übÀ_ã°_bô
((
ƒ
),(
addr
)))

	)

262 
__ölöe__
 
	$föd_fú°_zîo_bô
(* 
addr
, 
size
)

264 
d0
, 
d1
, 
d2
;

265 
ªs
;

267 i‡(!
size
)

270 
__asm__
 
	`__vﬁ©ûe__
(

281 :"=d" (
ªs
), "=&c" (
d0
), "=&D" (
d1
), "=&a" (
d2
)

282 :"1" ((
size
 + 31Ë>> 5), "2" (
addr
), "b" (addr));

283  
ªs
;

284 
	}
}

292 
__ölöe__
 
	$föd_√xt_zîo_bô
 (* 
addr
, 
size
, 
off£t
)

294 * 
p
 = ((*Ë
addr
Ë+ (
off£t
 >> 5);

295 
£t
 = 0, 
bô
 = 
off£t
 & 31, 
ªs
;

297 i‡(
bô
) {

301 
	`__asm__
("bsfl %1,%0\n\t"

305 : "Ù" (
£t
)

306 : "r" (~(*
p
 >> 
bô
)));

307 i‡(
£t
 < (32 - 
bô
))

308  
£t
 + 
off£t
;

309 
£t
 = 32 - 
bô
;

310 
p
++;

315 
ªs
 = 
	`föd_fú°_zîo_bô
 (
p
, 
size
 - 32 * (∞- (*Ë
addr
));

316  (
off£t
 + 
£t
 + 
ªs
);

317 
	}
}

325 
__ölöe__
 
	$ffz
(
w‹d
)

327 
	`__asm__
("bsfl %1,%0"

328 :"Ù" (
w‹d
)

329 :"r" (~
w‹d
));

330  
w‹d
;

331 
	}
}

333 #w¨nög 
This
 
ö˛udefûe
 
is
 
nŸ
 
avaûabÀ
 
⁄
 
Æl
 
¨chôe˘uªs
.

334 #w¨nög 
Usög
 
kî√l
 
hódîs
 
ö
 
u£r•a˚
.

	@/usr/include/asm/highmem.h

18 #i‚de‡
_ASM_HIGHMEM_H


19 
	#_ASM_HIGHMEM_H


	)

	@/usr/include/asm/ipcbuf.h

1 #i‚de‡
__i386_IPCBUF_H__


2 
	#__i386_IPCBUF_H__


	)

14 
	sùc64_≥rm


16 
__kî√l_key_t
 
	mkey
;

17 
__kî√l_uid32_t
 
	muid
;

18 
__kî√l_gid32_t
 
	mgid
;

19 
__kî√l_uid32_t
 
	mcuid
;

20 
__kî√l_gid32_t
 
	mcgid
;

21 
__kî√l_mode_t
 
	mmode
;

22 
	m__∑d1
;

23 
	m£q
;

24 
	m__∑d2
;

25 
	m__unu£d1
;

26 
	m__unu£d2
;

	@/usr/include/asm/mpspec.h

1 #i‚de‡
__ASM_MPSPEC_H


2 
	#__ASM_MPSPEC_H


	)

14 
	#SMP_MAGIC_IDENT
 (('_'<<24)|('P'<<16)|('M'<<8)|'_')

	)

19 
	#MAX_APICS
 16

	)

21 
	söãl_mp_Êﬂtög


23 
	mmpf_sig«tuª
[4];

24 
	mmpf_phy•å
;

25 
	mmpf_Àngth
;

26 
	mmpf_•ecifiˇti⁄
;

27 
	mmpf_checksum
;

28 
	mmpf_„©uª1
;

29 
	mmpf_„©uª2
;

30 
	mmpf_„©uª3
;

31 
	mmpf_„©uª4
;

32 
	mmpf_„©uª5
;

35 
	smp_c⁄fig_èbÀ


37 
	mmpc_sig«tuª
[4];

38 
	#MPC_SIGNATURE
 "PCMP"

	)

39 
	mmpc_Àngth
;

40 
	mmpc_•ec
;

41 
	mmpc_checksum
;

42 
	mmpc_€m
[8];

43 
	mmpc_¥odu˘id
[12];

44 
	mmpc_€m±r
;

45 
	mmpc_€msize
;

46 
	mmpc_€mcou¡
;

47 
	mmpc_œpic
;

48 
	mª£rved
;

53 
	#MP_PROCESSOR
 0

	)

54 
	#MP_BUS
 1

	)

55 
	#MP_IOAPIC
 2

	)

56 
	#MP_INTSRC
 3

	)

57 
	#MP_LINTSRC
 4

	)

59 
	smpc_c⁄fig_¥o˚ss‹


61 
	mmpc_ty≥
;

62 
	mmpc_≠icid
;

63 
	mmpc_≠icvî
;

64 
	mmpc_˝uÊag
;

65 
	#CPU_ENABLED
 1

	)

66 
	#CPU_BOOTPROCESSOR
 2

	)

67 
	mmpc_˝u„©uª
;

68 
	#CPU_STEPPING_MASK
 0x0F

	)

69 
	#CPU_MODEL_MASK
 0xF0

	)

70 
	#CPU_FAMILY_MASK
 0xF00

	)

71 
	mmpc_„©uªÊag
;

72 
	mmpc_ª£rved
[2];

75 
	smpc_c⁄fig_bus


77 
	mmpc_ty≥
;

78 
	mmpc_busid
;

79 
	mmpc_bu°y≥
[6] 
__©åibuã
((
∑cked
));

83 
	#BUSTYPE_EISA
 "EISA"

	)

84 
	#BUSTYPE_ISA
 "ISA"

	)

85 
	#BUSTYPE_INTERN
 "INTERN"

	)

86 
	#BUSTYPE_MCA
 "MCA"

	)

87 
	#BUSTYPE_VL
 "VL"

	)

88 
	#BUSTYPE_PCI
 "PCI"

	)

89 
	#BUSTYPE_PCMCIA
 "PCMCIA"

	)

90 
	#BUSTYPE_CBUS
 "CBUS"

	)

91 
	#BUSTYPE_CBUSII
 "CBUSII"

	)

92 
	#BUSTYPE_FUTURE
 "FUTURE"

	)

93 
	#BUSTYPE_MBI
 "MBI"

	)

94 
	#BUSTYPE_MBII
 "MBII"

	)

95 
	#BUSTYPE_MPI
 "MPI"

	)

96 
	#BUSTYPE_MPSA
 "MPSA"

	)

97 
	#BUSTYPE_NUBUS
 "NUBUS"

	)

98 
	#BUSTYPE_TC
 "TC"

	)

99 
	#BUSTYPE_VME
 "VME"

	)

100 
	#BUSTYPE_XPRESS
 "XPRESS"

	)

102 
	smpc_c⁄fig_iﬂpic


104 
	mmpc_ty≥
;

105 
	mmpc_≠icid
;

106 
	mmpc_≠icvî
;

107 
	mmpc_Êags
;

108 
	#MPC_APIC_USABLE
 0x01

	)

109 
	mmpc_≠iˇddr
;

112 
	smpc_c⁄fig_öt§c


114 
	mmpc_ty≥
;

115 
	mmpc_úqty≥
;

116 
	mmpc_úqÊag
;

117 
	mmpc_§cbus
;

118 
	mmpc_§cbusúq
;

119 
	mmpc_d°≠ic
;

120 
	mmpc_d°úq
;

123 
	emp_úq_sour˚_ty≥s
 {

124 
	mmp_INT
 = 0,

125 
	mmp_NMI
 = 1,

126 
	mmp_SMI
 = 2,

127 
	mmp_ExtINT
 = 3

130 
	#MP_IRQDIR_DEFAULT
 0

	)

131 
	#MP_IRQDIR_HIGH
 1

	)

132 
	#MP_IRQDIR_LOW
 3

	)

135 
	smpc_c⁄fig_löt§c


137 
	mmpc_ty≥
;

138 
	mmpc_úqty≥
;

139 
	mmpc_úqÊag
;

140 
	mmpc_§cbusid
;

141 
	mmpc_§cbusúq
;

142 
	mmpc_de°≠ic
;

143 
	#MP_APIC_ALL
 0xFF

	)

144 
	mmpc_de°≠i˛öt
;

159 
	#MAX_IRQ_SOURCES
 128

	)

160 
	#MAX_MP_BUSSES
 32

	)

161 
	emp_bu°y≥
 {

162 
	mMP_BUS_ISA
 = 1,

163 
	mMP_BUS_EISA
,

164 
	mMP_BUS_PCI
,

165 
	mMP_BUS_MCA


167 
mp_bus_id_to_ty≥
 [
MAX_MP_BUSSES
];

168 
mp_bus_id_to_pci_bus
 [
MAX_MP_BUSSES
];

170 
boŸ_˝u_id
;

171 
phys_˝u_¥e£¡_m≠
;

172 
smp_found_c⁄fig
;

173 
föd_smp_c⁄fig
 ();

174 
gë_smp_c⁄fig
 ();

175 
ƒ_iﬂpics
;

176 
≠ic_vîsi⁄
 [
MAX_APICS
];

177 
mp_bus_id_to_ty≥
 [
MAX_MP_BUSSES
];

178 
mp_úq_íåõs
;

179 
mpc_c⁄fig_öt§c
 
mp_úqs
 [
MAX_IRQ_SOURCES
];

180 
mpc_deÁu…_ty≥
;

181 
mp_bus_id_to_pci_bus
 [
MAX_MP_BUSSES
];

182 
mp_cuºít_pci_id
;

183 
mp_œpic_addr
;

184 
pic_mode
;

185 
usög_≠ic_timî
;

	@/usr/include/asm/pgalloc.h

1 #i‚de‡
_I386_PGALLOC_H


2 
	#_I386_PGALLOC_H


	)

4 
	~<löux/c⁄fig.h
>

5 
	~<asm/¥o˚ss‹.h
>

6 
	~<asm/fixm≠.h
>

7 
	~<löux/thªads.h
>

9 
	#pgd_quickli°
 (
cuºít_˝u_d©a
.
pgd_quick
)

	)

10 
	#pmd_quickli°
 (
cuºít_˝u_d©a
.
pmd_quick
)

	)

11 
	#±e_quickli°
 (
cuºít_˝u_d©a
.
±e_quick
)

	)

12 
	#pgèbÀ_ˇche_size
 (
cuºít_˝u_d©a
.
pgèbÀ_ˇche_sz
)

	)

14 
	#pmd_p›uœã
(
mm
, 
pmd
, 
±e
) \

15 
	`£t_pmd
(
pmd
, 
	`__pmd
(
_PAGE_TABLE
 + 
	`__∑
(
±e
)))

	)

21 #i‡
CONFIG_X86_PAE


23 
	gkmem_ˇche_s
;

25 
kmem_ˇche_s
 *
∑e_pgd_ˇchï
;

27 *
kmem_ˇche_Æloc
(
kmem_ˇche_s
 *, );

28 
kmem_ˇche_‰ì
(
kmem_ˇche_s
 *, *);

30 
öô_∑e_pgd_ˇche
();

32 
ölöe
 
pgd_t
 *
	$gë_pgd_¶ow
()

34 
i
;

35 
pgd_t
 *
pgd
 = 
	`kmem_ˇche_Æloc
(
∑e_pgd_ˇchï
, 
GFP_KERNEL
);

37 i‡(
pgd
) {

38 
i
 = 0; i < 
USER_PTRS_PER_PGD
; i++) {

39 
pmd
 = 
	`__gë_‰ì_∑ge
(
GFP_KERNEL
);

40 i‡(!
pmd
)

41 
out_oom
;

42 
	`˛ór_∑ge
(
pmd
);

43 
	`£t_pgd
(
pgd
 + 
i
, 
	`__pgd
(1 + 
	`__∑
(
pmd
)));

45 
	`mem˝y
(
pgd
 + 
USER_PTRS_PER_PGD
, 
sw≠≥r_pg_dú
 + USER_PTRS_PER_PGD, (
PTRS_PER_PGD
 - USER_PTRS_PER_PGDË* (
pgd_t
));

47  
pgd
;

48 
out_oom
:

49 
i
--; i >= 0; i--)

50 
	`‰ì_∑ge
(()
	`__va
(
	`pgd_vÆ
(
pgd
[
i
])-1));

51 
	`kmem_ˇche_‰ì
(
∑e_pgd_ˇchï
, 
pgd
);

52  
NULL
;

53 
	}
}

57 
ölöe
 
pgd_t
 *
	$gë_pgd_¶ow
()

59 
pgd_t
 *
pgd
 = (pgd_à*)
	`__gë_‰ì_∑ge
(
GFP_KERNEL
);

61 i‡(
pgd
) {

62 
	`mem£t
(
pgd
, 0, 
USER_PTRS_PER_PGD
 * (
pgd_t
));

63 
	`mem˝y
(
pgd
 + 
USER_PTRS_PER_PGD
, 
sw≠≥r_pg_dú
 + USER_PTRS_PER_PGD, (
PTRS_PER_PGD
 - USER_PTRS_PER_PGDË* (
pgd_t
));

65  
pgd
;

66 
	}
}

70 
ölöe
 
pgd_t
 *
	$gë_pgd_Á°
()

72 *
ªt
;

74 i‡((
ªt
 = 
pgd_quickli°
Ë!
NULL
) {

75 
pgd_quickli°
 = (*)(*
ªt
);

76 
ªt
[0] = 0;

77 
pgèbÀ_ˇche_size
--;

79 
ªt
 = (*)
	`gë_pgd_¶ow
();

80  (
pgd_t
 *)
ªt
;

81 
	}
}

83 
ölöe
 
	$‰ì_pgd_Á°
(
pgd_t
 *
pgd
)

85 *(*)
pgd
 = (Ë
pgd_quickli°
;

86 
pgd_quickli°
 = (*Ë
pgd
;

87 
pgèbÀ_ˇche_size
++;

88 
	}
}

90 
ölöe
 
	$‰ì_pgd_¶ow
(
pgd_t
 *
pgd
)

92 #i‡
CONFIG_X86_PAE


93 
i
;

95 
i
 = 0; i < 
USER_PTRS_PER_PGD
; i++)

96 
	`‰ì_∑ge
(()
	`__va
(
	`pgd_vÆ
(
pgd
[
i
])-1));

97 
	`kmem_ˇche_‰ì
(
∑e_pgd_ˇchï
, 
pgd
);

99 
	`‰ì_∑ge
(()
pgd
);

101 
	}
}

103 
ölöe
 
±e_t
 *
	$±e_Æloc_⁄e
(
mm_°ru˘
 *
mm
, 
addªss
)

105 
±e_t
 *
±e
=
NULL
;

106 
cou¡
 = 0;

109 
±e
 = (
±e_t
 *Ë
	`__gë_‰ì_∑ge
(
GFP_KERNEL
);

110 i‡(
±e
)

111 
	`˛ór_∑ge
(
±e
);

113 
	`scheduÀ_timeout
(
HZ
);

114 } (
±e
==
NULL
)&&(
cou¡
++<10));

115  
±e
;

116 
	}
}

118 
ölöe
 
±e_t
 *
	$±e_Æloc_⁄e_Á°
(
mm_°ru˘
 *
mm
, 
addªss
)

120 *
ªt
;

122 i‡((
ªt
 = (*)
±e_quickli°
Ë!
NULL
) {

123 
±e_quickli°
 = (*)(*
ªt
);

124 
ªt
[0] =Ñet[1];

125 
pgèbÀ_ˇche_size
--;

127  (
±e_t
 *)
ªt
;

128 
	}
}

130 
ölöe
 
	$±e_‰ì_Á°
(
±e_t
 *
±e
)

132 *(*)
±e
 = (Ë
±e_quickli°
;

133 
±e_quickli°
 = (*Ë
±e
;

134 
pgèbÀ_ˇche_size
++;

135 
	}
}

137 
ölöe
 
	$±e_‰ì_¶ow
(
±e_t
 *
±e
)

139 
	`‰ì_∑ge
(()
±e
);

140 
	}
}

142 
	#±e_‰ì
(
±e
Ë
	`±e_‰ì_¶ow
’ã)

	)

143 
	#pgd_‰ì
(
pgd
Ë
	`‰ì_pgd_¶ow
’gd)

	)

144 
	#pgd_Æloc
(
mm
Ë
	`gë_pgd_Á°
()

	)

152 
	#pmd_Æloc_⁄e_Á°
(
mm
, 
addr
) ({ 
	`BUG
(); ((
pmd_t
 *)1); })

	)

153 
	#pmd_Æloc_⁄e
(
mm
, 
addr
Ë({ 
	`BUG
(); ((
pmd_t
 *)2); })

	)

154 
	#pmd_‰ì_¶ow
(
x
Ëdÿ{ } 0)

	)

155 
	#pmd_‰ì_Á°
(
x
Ëdÿ{ } 0)

	)

156 
	#pmd_‰ì
(
x
Ëdÿ{ } 0)

	)

157 
	#pgd_p›uœã
(
mm
, 
pmd
, 
±e
) 
	`BUG
()

	)

159 
do_check_pgt_ˇche
(, );

175 #i‚de‡
CONFIG_SMP


177 
	#Êush_éb
(Ë
	`__Êush_éb
()

	)

178 
	#Êush_éb_Æl
(Ë
	`__Êush_éb_Æl
()

	)

179 
	#loˇl_Êush_éb
(Ë
	`__Êush_éb
()

	)

181 
ölöe
 
	$Êush_éb_mm
(
mm_°ru˘
 *
mm
)

183 i‡(
mm
 =
cuºít
->
a˘ive_mm
)

184 
	`__Êush_éb
();

185 
	}
}

187 
ölöe
 
	$Êush_éb_∑ge
(
vm_¨ó_°ru˘
 *
vma
,

188 
addr
)

190 i‡(
vma
->
vm_mm
 =
cuºít
->
a˘ive_mm
)

191 
	`__Êush_éb_⁄e
(
addr
);

192 
	}
}

194 
ölöe
 
	$Êush_éb_ønge
(
mm_°ru˘
 *
mm
,

195 
°¨t
, 
íd
)

197 i‡(
mm
 =
cuºít
->
a˘ive_mm
)

198 
	`__Êush_éb
();

199 
	}
}

203 
	~<asm/smp.h
>

205 
	#loˇl_Êush_éb
() \

206 
	`__Êush_éb
()

	)

208 
Êush_éb_Æl
();

209 
Êush_éb_cuºít_èsk
();

210 
Êush_éb_mm
(
mm_°ru˘
 *);

211 
Êush_éb_∑ge
(
vm_¨ó_°ru˘
 *, );

213 
	#Êush_éb
() 
	`Êush_éb_cuºít_èsk
()

	)

215 
ölöe
 
	$Êush_éb_ønge
(
mm_°ru˘
 * 
mm
, 
°¨t
, 
íd
)

217 
	`Êush_éb_mm
(
mm
);

218 
	}
}

220 
	#TLBSTATE_OK
 1

	)

221 
	#TLBSTATE_LAZY
 2

	)

223 
	séb_°©e


225 
mm_°ru˘
 *
	ma˘ive_mm
;

226 
	m°©e
;

228 
éb_°©e
 
˝u_éb°©e
[
NR_CPUS
];

233 
ölöe
 
	$Êush_éb_pgèbÀs
(
mm_°ru˘
 *
mm
,

234 
°¨t
, 
íd
)

237 
	}
}

	@/usr/include/asm/pgtable-2level.h

1 #i‚de‡
_I386_PGTABLE_2LEVEL_H


2 
	#_I386_PGTABLE_2LEVEL_H


	)

8 
	#PGDIR_SHIFT
 22

	)

9 
	#PTRS_PER_PGD
 1024

	)

15 
	#PMD_SHIFT
 22

	)

16 
	#PTRS_PER_PMD
 1

	)

18 
	#PTRS_PER_PTE
 1024

	)

20 
	#±e_ERROR
(
e
) \

21 
	`¥ötk
("%s:%d: badÖã %08lx.\n", 
__FILE__
, 
__LINE__
, (
e
).
±e_low
)

	)

22 
	#pmd_ERROR
(
e
) \

23 
	`¥ötk
("%s:%d: badÖmd %08lx.\n", 
__FILE__
, 
__LINE__
, 
	`pmd_vÆ
(
e
))

	)

24 
	#pgd_ERROR
(
e
) \

25 
	`¥ötk
("%s:%d: badÖgd %08lx.\n", 
__FILE__
, 
__LINE__
, 
	`pgd_vÆ
(
e
))

	)

32 
ölöe
 
	$pgd_n⁄e
(
pgd_t
 
pgd
Ë{  0; 
	}
}

33 
ölöe
 
	$pgd_bad
(
pgd_t
 
pgd
Ë{  0; 
	}
}

34 
ölöe
 
	$pgd_¥e£¡
(
pgd_t
 
pgd
) {  1; 
	}
}

35 
	#pgd_˛ór
(
xp
Ëdÿ{ } 0)

	)

42 
	#£t_±e
(
±ïå
, 
±evÆ
Ë(*’ã±rË±evÆ)

	)

47 
	#£t_pmd
(
pmd±r
, 
pmdvÆ
Ë(*’md±rËpmdvÆ)

	)

48 
	#£t_pgd
(
pgd±r
, 
pgdvÆ
Ë(*’gd±rËpgdvÆ)

	)

50 
	#pgd_∑ge
(
pgd
) \

51 ((Ë
	`__va
(
	`pgd_vÆ
(
pgd
Ë& 
PAGE_MASK
))

	)

53 
ölöe
 
pmd_t
 * 
	$pmd_off£t
(
pgd_t
 * 
dú
, 
addªss
)

55  (
pmd_t
 *Ë
dú
;

56 
	}
}

57 
	#±ï_gë_™d_˛ór
(
xp
) 
	`__±e
(
	`xchg
(&(xp)->
±e_low
, 0))

	)

58 
	#±e_ßme
(
a
, 
b
Ë(◊).
±e_low
 =(b).±e_low)

	)

59 
	#±e_∑ge
(
x
Ë(
mem_m≠
+(()(((x).
±e_low
 >> 
PAGE_SHIFT
))))

	)

60 
	#±e_n⁄e
(
x
Ë(!(x).
±e_low
)

	)

61 
	#__mk_±e
(
∑ge_ƒ
,
pg¥Ÿ
Ë
	`__±e
((’age_ƒË<< 
PAGE_SHIFT
Ë| 
	`pg¥Ÿ_vÆ
’g¥Ÿ))

	)

	@/usr/include/asm/pgtable-3level.h

1 #i‚de‡
_I386_PGTABLE_3LEVEL_H


2 
	#_I386_PGTABLE_3LEVEL_H


	)

14 
	#PGDIR_SHIFT
 30

	)

15 
	#PTRS_PER_PGD
 4

	)

21 
	#PMD_SHIFT
 21

	)

22 
	#PTRS_PER_PMD
 512

	)

27 
	#PTRS_PER_PTE
 512

	)

29 
	#±e_ERROR
(
e
) \

30 
	`¥ötk
("%s:%d: badÖã %p(%08lx%08lx).\n", 
__FILE__
, 
__LINE__
, &(
e
), (e).
±e_high
, (e).
±e_low
)

	)

31 
	#pmd_ERROR
(
e
) \

32 
	`¥ötk
("%s:%d: badÖmd %p(%016Lx).\n", 
__FILE__
, 
__LINE__
, &(
e
), 
	`pmd_vÆ
”))

	)

33 
	#pgd_ERROR
(
e
) \

34 
	`¥ötk
("%s:%d: badÖgd %p(%016Lx).\n", 
__FILE__
, 
__LINE__
, &(
e
), 
	`pgd_vÆ
”))

	)

36 
ölöe
 
	$pgd_n⁄e
(
pgd_t
 
pgd
Ë{  0; 
	}
}

37 
ölöe
 
	$pgd_bad
(
pgd_t
 
pgd
Ë{  0; 
	}
}

38 
ölöe
 
	$pgd_¥e£¡
(
pgd_t
 
pgd
) {  1; 
	}
}

46 
ölöe
 
	$£t_±e
(
±e_t
 *
±ï
,Öã_à
±e
)

48 
±ï
->
±e_high
 = 
±e
.pte_high;

49 
	`smp_wmb
();

50 
±ï
->
±e_low
 = 
±e
.pte_low;

51 
	}
}

52 
	#£t_pmd
(
pmd±r
,
pmdvÆ
) \

53 
	`£t_64bô
((*)(
pmd±r
),
	`pmd_vÆ
(
pmdvÆ
))

	)

54 
	#£t_pgd
(
pgd±r
,
pgdvÆ
) \

55 
	`£t_64bô
((*)(
pgd±r
),
	`pgd_vÆ
(
pgdvÆ
))

	)

63 
ölöe
 
	$pgd_˛ór
 (
pgd_t
 * 
pgd
Ë{ 
	}
}

65 
	#pgd_∑ge
(
pgd
) \

66 ((Ë
	`__va
(
	`pgd_vÆ
(
pgd
Ë& 
PAGE_MASK
))

	)

69 
	#pmd_off£t
(
dú
, 
addªss
Ë((
pmd_t
 *Ë
	`pgd_∑ge
(*(dir)) + \

70 
	`__pmd_off£t
(
addªss
))

	)

72 
ölöe
 
±e_t
 
	$±ï_gë_™d_˛ór
(
±e_t
 *
±ï
)

74 
±e_t
 
ªs
;

77 
ªs
.
±e_low
 = 
	`xchg
(&
±ï
->pte_low, 0);

78 
ªs
.
±e_high
 = 
±ï
->pte_high;

79 
±ï
->
±e_high
 = 0;

81  
ªs
;

82 
	}
}

84 
ölöe
 
	$±e_ßme
(
±e_t
 
a
,Öã_à
b
)

86  
a
.
±e_low
 =
b
.±e_low &&á.
±e_high
 == b.pte_high;

87 
	}
}

89 
	#±e_∑ge
(
x
) (
mem_m≠
+(((x).
±e_low
 >> 
PAGE_SHIFT
Ë| ((x).
±e_high
 << (32 - PAGE_SHIFT))))

	)

90 
	#±e_n⁄e
(
x
) (!(x).
±e_low
 && !(x).
±e_high
)

	)

92 
ölöe
 
±e_t
 
	$__mk_±e
(
∑ge_ƒ
, 
pg¥Ÿ_t
 
pg¥Ÿ
)

94 
±e_t
 
±e
;

96 
±e
.
±e_high
 = 
∑ge_ƒ
 >> (32 - 
PAGE_SHIFT
);

97 
±e
.
±e_low
 = (
∑ge_ƒ
 << 
PAGE_SHIFT
Ë| 
	`pg¥Ÿ_vÆ
(
pg¥Ÿ
);

98  
±e
;

99 
	}
}

	@/usr/include/asm/posix_types.h

1 #i‚de‡
__ARCH_I386_POSIX_TYPES_H


2 
	#__ARCH_I386_POSIX_TYPES_H


	)

10 
	t__kî√l_dev_t
;

11 
	t__kî√l_öo_t
;

12 
	t__kî√l_mode_t
;

13 
	t__kî√l_∆ök_t
;

14 
	t__kî√l_off_t
;

15 
	t__kî√l_pid_t
;

16 
	t__kî√l_ùc_pid_t
;

17 
	t__kî√l_uid_t
;

18 
	t__kî√l_gid_t
;

19 
	t__kî√l_size_t
;

20 
	t__kî√l_ssize_t
;

21 
	t__kî√l_±rdiff_t
;

22 
	t__kî√l_time_t
;

23 
	t__kî√l_su£c⁄ds_t
;

24 
	t__kî√l_˛ock_t
;

25 
	t__kî√l_daddr_t
;

26 * 
	t__kî√l_ˇddr_t
;

27 
	t__kî√l_uid16_t
;

28 
	t__kî√l_gid16_t
;

29 
	t__kî√l_uid32_t
;

30 
	t__kî√l_gid32_t
;

32 
	t__kî√l_ﬁd_uid_t
;

33 
	t__kî√l_ﬁd_gid_t
;

35 #ifde‡
__GNUC__


36 
	t__kî√l_loff_t
;

40 #i‡
deföed
(
__KERNEL__
Ë|| deföed(
__USE_ALL
)

41 
	mvÆ
[2];

43 
	m__vÆ
[2];

45 } 
	t__kî√l_fsid_t
;

47 #i‡
deföed
(
__KERNEL__
Ë|| !deföed(
__GLIBC__
) || (__GLIBC__ < 2)

49 #undef 
__FD_SET


50 
	#__FD_SET
(
fd
,
fd£ç
) \

51 
__asm__
 
	`__vﬁ©ûe__
("btsl %1,%0": \

52 "=m" (*(
__kî√l_fd_£t
 *Ë(
fd£ç
)):"r" ((Ë(
fd
)))

	)

54 #undef 
__FD_CLR


55 
	#__FD_CLR
(
fd
,
fd£ç
) \

56 
__asm__
 
	`__vﬁ©ûe__
("btrl %1,%0": \

57 "=m" (*(
__kî√l_fd_£t
 *Ë(
fd£ç
)):"r" ((Ë(
fd
)))

	)

59 #undef 
__FD_ISSET


60 
	#__FD_ISSET
(
fd
,
fd£ç
Ë(
	`__exãnsi⁄__
 ({ \

61 
__ªsu…
; \

62 
__asm__
 
	`__vﬁ©ûe__
("btl %1,%2 ; setb %0" \

63 :"=q" (
__ªsu…
Ë:"r" ((Ë(
fd
)), \

64 "m" (*(
__kî√l_fd_£t
 *Ë(
fd£ç
))); \

65 
__ªsu…
; }))

	)

67 #undef 
__FD_ZERO


68 
	#__FD_ZERO
(
fd£ç
) \

70 
__d0
, 
__d1
; \

71 
__asm__
 
	`__vﬁ©ûe__
("cld ;Ñep ; stosl" \

72 :"=m" (*(
__kî√l_fd_£t
 *Ë(
fd£ç
)), \

73 "=&c" (
__d0
), "=&D" (
__d1
) \

74 :"a" (0), "1" (
__FDSET_LONGS
), \

75 "2" ((
__kî√l_fd_£t
 *Ë(
fd£ç
)) : "memory"); \

76 } 0)

	)

	@/usr/include/asm/socket.h

1 #i‚de‡
_ASM_SOCKET_H


2 
	#_ASM_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_KEEPALIVE
 9

	)

18 
	#SO_OOBINLINE
 10

	)

19 
	#SO_NO_CHECK
 11

	)

20 
	#SO_PRIORITY
 12

	)

21 
	#SO_LINGER
 13

	)

22 
	#SO_BSDCOMPAT
 14

	)

24 
	#SO_PASSCRED
 16

	)

25 
	#SO_PEERCRED
 17

	)

26 
	#SO_RCVLOWAT
 18

	)

27 
	#SO_SNDLOWAT
 19

	)

28 
	#SO_RCVTIMEO
 20

	)

29 
	#SO_SNDTIMEO
 21

	)

32 
	#SO_SECURITY_AUTHENTICATION
 22

	)

33 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

34 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

36 
	#SO_BINDTODEVICE
 25

	)

39 
	#SO_ATTACH_FILTER
 26

	)

40 
	#SO_DETACH_FILTER
 27

	)

42 
	#SO_PEERNAME
 28

	)

43 
	#SO_TIMESTAMP
 29

	)

44 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

46 
	#SO_ACCEPTCONN
 30

	)

49 #i‡
deföed
(
__KERNEL__
Ë|| !deföed(
__GLIBC__
) || (__GLIBC__ < 2)

51 
	#SOCK_STREAM
 1

	)

52 
	#SOCK_DGRAM
 2

	)

53 
	#SOCK_RAW
 3

	)

54 
	#SOCK_RDM
 4

	)

55 
	#SOCK_SEQPACKET
 5

	)

56 
	#SOCK_PACKET
 10

	)

61 
	#SOCK_MAX
 (
SOCK_PACKET
+1)

	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

26 #i‡
deföed
(
_LIBC
Ë|| deföed(
_IO_MTSAFE_IO
)

27 
±hªad_muãx_t
 
	t__libc_lock_t
;

28 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

29 #ifde‡
__USE_UNIX98


30 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

32 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_›aque__
 
	t__libc_lock_t
;

36 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

37 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

41 
±hªad_key_t
 
	t__libc_key_t
;

50 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

51 
CLASS
 
__libc_lock_t
 
NAME
;

	)

52 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

54 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

66 #i‡
__LT_SPINLOCK_INIT
 == 0

67 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

68 
CLASS
 
__libc_lock_t
 
NAME
;

	)

70 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

71 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

74 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

79 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

81 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

82 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

86 
	#__libc_lock_öô
(
NAME
) \

87 (
__±hªad_muãx_öô
 !
NULL
 ? 
	`__±hªad_muãx_öô
 (&(
NAME
), NULLË: 0);

	)

88 
	#__libc_rwlock_öô
(
NAME
) \

89 (
__±hªad_rwlock_öô
 !
NULL
 ? 
	`__±hªad_rwlock_öô
 (&(
NAME
), NULLË: 0);

	)

92 
	#__libc_lock_öô_ªcursive
(
NAME
) \

94 i‡(
__±hªad_muãx_öô
 !
NULL
) \

96 
±hªad_muãx©å_t
 
__©å
; \

97 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

98 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

99 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

100 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

102 } 0);

	)

107 
	#__libc_lock_föi
(
NAME
) \

108 (
__±hªad_muãx_de°roy
 !
NULL
 ? 
	`__±hªad_muãx_de°roy
 (&(
NAME
)Ë: 0);

	)

109 
	#__libc_rwlock_föi
(
NAME
) \

110 (
__±hªad_rwlock_de°roy
 !
NULL
 ? 
	`__±hªad_rwlock_de°roy
 (&(
NAME
)Ë: 0);

	)

113 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

116 
	#__libc_lock_lock
(
NAME
) \

117 (
__±hªad_muãx_lock
 !
NULL
 ? 
	`__±hªad_muãx_lock
 (&(
NAME
)Ë: 0);

	)

118 
	#__libc_rwlock_rdlock
(
NAME
) \

119 (
__±hªad_rwlock_rdlock
 !
NULL
 ? 
	`__±hªad_rwlock_rdlock
 (&(
NAME
)Ë: 0);

	)

120 
	#__libc_rwlock_wæock
(
NAME
) \

121 (
__±hªad_rwlock_wæock
 !
NULL
 ? 
	`__±hªad_rwlock_wæock
 (&(
NAME
)Ë: 0);

	)

124 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

127 
	#__libc_lock_åylock
(
NAME
) \

128 (
__±hªad_muãx_åylock
 !
NULL
 ? 
	`__±hªad_muãx_åylock
 (&(
NAME
)Ë: 0)

	)

129 
	#__libc_rwlock_åyrdlock
(
NAME
) \

130 (
__±hªad_rwlock_åyrdlock
 !
NULL
 \

131 ? 
	`__±hªad_rwlock_åyrdlock
 (&(
NAME
)Ë: 0)

	)

132 
	#__libc_rwlock_åywæock
(
NAME
) \

133 (
__±hªad_rwlock_åywæock
 !
NULL
 \

134 ? 
	`__±hªad_rwlock_åywæock
 (&(
NAME
)Ë: 0)

	)

137 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

140 
	#__libc_lock_u∆ock
(
NAME
) \

141 (
__±hªad_muãx_u∆ock
 !
NULL
 ? 
	`__±hªad_muãx_u∆ock
 (&(
NAME
)Ë: 0);

	)

142 
	#__libc_rwlock_u∆ock
(
NAME
) \

143 (
__±hªad_rwlock_u∆ock
 !
NULL
 ? 
	`__±hªad_rwlock_u∆ock
 (&(
NAME
)Ë: 0);

	)

146 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

150 #i‡
PTHREAD_ONCE_INIT
 == 0

153 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

154 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

156 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

157 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

161 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

163 i‡(
__±hªad_⁄˚
 !
NULL
) \

164 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

165 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

166 
	`INIT_FUNCTION
 (); \

167 (
ONCE_CONTROL
Ë!
PTHREAD_ONCE_INIT
; \

169 } 0)

	)

173 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

174 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

175 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

176 i‡(
_avaû
) { \

177 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

178 }

	)

181 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

182 i‡(
_avaû
) { \

183 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

185 }

	)

188 
	#__libc_˛ónup_íd
(
DOIT
) \

189 i‡(
_avaû
) { \

190 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

191 }

	)

194 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

195 (
__±hªad_key_¸óã
 !
NULL
 ? 
	`__±hªad_key_¸óã
 (
KEY
, 
DESTRUCTOR
Ë: 1)

	)

198 
	#__libc_gë•ecific
(
KEY
) \

199 (
__±hªad_gë•ecific
 !
NULL
 ? 
	`__±hªad_gë•ecific
 (
KEY
Ë: NULL)

	)

202 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

203 (
__±hªad_£t•ecific
 !
NULL
 ? 
	`__±hªad_£t•ecific
 (
KEY
, 
VALUE
Ë: 0)

	)

207 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

208 (
__±hªad_©f‹k
 !
NULL
 ? 
	`__±hªad_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
Ë: 0)

	)

213 
__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

214 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

216 
__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

218 
__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

220 
__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

222 
__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

224 
__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

226 
__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

228 
__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

229 
__köd
);

231 #ifde‡
__USE_UNIX98


232 
__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

233 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

235 
__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

237 
__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

239 
__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

241 
__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

243 
__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

245 
__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

248 
__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

249 (*
__de°r_fun˘i⁄
) (*));

251 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

252 
__c⁄°
 *
__poöãr
);

254 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

256 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

257 (*
__öô_routöe
) ());

259 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

260 (*
__∑ª¡
) (),

261 (*
__chûd
) ());

267 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


268 #ifde‡
wók_exã∫


269 #i‡
_LIBC


270 
	~<bp-sym.h
>

272 
	#BP_SYM
 (
sym
Ë
	)
sym

274 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

275 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

276 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

277 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

278 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

279 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

280 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

281 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

282 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

283 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

284 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

285 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

286 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

287 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

288 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

289 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

290 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

291 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

292 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

293 
	$wók_exã∫
 (
__±hªad_öôülize
)

294 
	$wók_exã∫
 (
__±hªad_©f‹k
)

295 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

296 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

298 #¥agm®
wók
 
__±hªad_muãx_öô


299 #¥agm®
wók
 
__±hªad_muãx_de°roy


300 #¥agm®
wók
 
__±hªad_muãx_lock


301 #¥agm®
wók
 
__±hªad_muãx_åylock


302 #¥agm®
wók
 
__±hªad_muãx_u∆ock


303 #¥agm®
wók
 
__±hªad_muãx©å_öô


304 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


305 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


306 #¥agm®
wók
 
__±hªad_rwlock_de°roy


307 #¥agm®
wók
 
__±hªad_rwlock_rdlock


308 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


309 #¥agm®
wók
 
__±hªad_rwlock_wæock


310 #¥agm®
wók
 
__±hªad_rwlock_åywæock


311 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


312 #¥agm®
wók
 
__±hªad_key_¸óã


313 #¥agm®
wók
 
__±hªad_£t•ecific


314 #¥agm®
wók
 
__±hªad_gë•ecific


315 #¥agm®
wók
 
__±hªad_⁄˚


316 #¥agm®
wók
 
__±hªad_öôülize


317 #¥agm®
wók
 
__±hªad_©f‹k


318 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


319 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


325 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_MISC


35 
	#CSIGNAL
 0x000000f‡

	)

36 
	#CLONE_VM
 0x00000100

	)

37 
	#CLONE_FS
 0x00000200

	)

38 
	#CLONE_FILES
 0x00000400

	)

39 
	#CLONE_SIGHAND
 0x00000800

	)

40 
	#CLONE_PID
 0x00001000

	)

41 
	#CLONE_PTRACE
 0x00002000

	)

42 
	#CLONE_VFORK
 0x00004000

	)

47 
	ssched_∑øm


49 
	m__sched_¥i‹ôy
;

52 
	g__BEGIN_DECLS


55 #ifde‡
__USE_MISC


56 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

57 
__Êags
, *
__¨g
Ë
__THROW
;

60 
__END_DECLS


64 #i‡!
deföed
 
__deföed_sched∑øm
 \

65 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

66 
	#__deföed_sched∑øm
 1

	)

68 
	s__sched_∑øm


70 
__sched_¥i‹ôy
;

72 #unde‡
__√ed_sched∑øm


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

63 
	g__gc⁄v_°ï
;

64 
	g__gc⁄v_°ï_d©a
;

65 
	g__gc⁄v_lﬂded_obje˘
;

66 
	g__gc⁄v_å™s_d©a
;

70 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

71 
	t__c⁄°
 **, __const *,

72 **, 
	tsize_t
 *, , );

75 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

76 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

81 
	t__gc⁄v_°ï_d©a
 *, *,

82 
	t__c⁄°
 *,

83 
	t__c⁄°
 **,

84 
	t__c⁄°
 *, **,

85 
	tsize_t
 *);

88 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

89 
	t__c⁄°
 *,

93 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

94 
	tsize_t
 *);

97 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

98 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

100 
	s__gc⁄v_å™s_d©a


103 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

104 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

105 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

106 *
__d©a
;

107 
__gc⁄v_å™s_d©a
 *
__√xt
;

112 
	s__gc⁄v_°ï


114 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

115 
__c⁄°
 *
__mod«me
;

117 
__cou¡î
;

119 *
__‰om_«me
;

120 *
__to_«me
;

122 
__gc⁄v_f˘
 
__f˘
;

123 
__gc⁄v_öô_f˘
 
__öô_f˘
;

124 
__gc⁄v_íd_f˘
 
__íd_f˘
;

128 
__mö_√eded_‰om
;

129 
__max_√eded_‰om
;

130 
__mö_√eded_to
;

131 
__max_√eded_to
;

134 
__°©eful
;

136 *
__d©a
;

141 
	s__gc⁄v_°ï_d©a


143 *
__outbuf
;

144 *
__outbu„nd
;

148 
__Êags
;

152 
__övoˇti⁄_cou¡î
;

156 
__öã∫Æ_u£
;

158 
__mb°©e_t
 *
__°©ï
;

159 
__mb°©e_t
 
__°©e
;

163 
__gc⁄v_å™s_d©a
 *
__å™s
;

168 
	s__gc⁄v_öfo


170 
size_t
 
__n°ïs
;

171 
__gc⁄v_°ï
 *
__°ïs
;

172 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

173 } *
	t__gc⁄v_t
;

	@/usr/include/linux/sockios.h

18 #i‚de‡
_LINUX_SOCKIOS_H


19 
	#_LINUX_SOCKIOS_H


	)

21 
	~<asm/sockios.h
>

24 
	#SIOCINQ
 
FIONREAD


	)

25 
	#SIOCOUTQ
 
TIOCOUTQ


	)

28 
	#SIOCADDRT
 0x890B

	)

29 
	#SIOCDELRT
 0x890C

	)

30 
	#SIOCRTMSG
 0x890D

	)

33 
	#SIOCGIFNAME
 0x8910

	)

34 
	#SIOCSIFLINK
 0x8911

	)

35 
	#SIOCGIFCONF
 0x8912

	)

36 
	#SIOCGIFFLAGS
 0x8913

	)

37 
	#SIOCSIFFLAGS
 0x8914

	)

38 
	#SIOCGIFADDR
 0x8915

	)

39 
	#SIOCSIFADDR
 0x8916

	)

40 
	#SIOCGIFDSTADDR
 0x8917

	)

41 
	#SIOCSIFDSTADDR
 0x8918

	)

42 
	#SIOCGIFBRDADDR
 0x8919

	)

43 
	#SIOCSIFBRDADDR
 0x891®

	)

44 
	#SIOCGIFNETMASK
 0x891b

	)

45 
	#SIOCSIFNETMASK
 0x891¯

	)

46 
	#SIOCGIFMETRIC
 0x891d

	)

47 
	#SIOCSIFMETRIC
 0x891ê

	)

48 
	#SIOCGIFMEM
 0x891‡

	)

49 
	#SIOCSIFMEM
 0x8920

	)

50 
	#SIOCGIFMTU
 0x8921

	)

51 
	#SIOCSIFMTU
 0x8922

	)

52 
	#SIOCSIFNAME
 0x8923

	)

53 
	#SIOCSIFHWADDR
 0x8924

	)

54 
	#SIOCGIFENCAP
 0x8925

	)

55 
	#SIOCSIFENCAP
 0x8926

	)

56 
	#SIOCGIFHWADDR
 0x8927

	)

57 
	#SIOCGIFSLAVE
 0x8929

	)

58 
	#SIOCSIFSLAVE
 0x8930

	)

59 
	#SIOCADDMULTI
 0x8931

	)

60 
	#SIOCDELMULTI
 0x8932

	)

61 
	#SIOCGIFINDEX
 0x8933

	)

62 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

63 
	#SIOCSIFPFLAGS
 0x8934

	)

64 
	#SIOCGIFPFLAGS
 0x8935

	)

65 
	#SIOCDIFADDR
 0x8936

	)

66 
	#SIOCSIFHWBROADCAST
 0x8937

	)

67 
	#SIOCGIFCOUNT
 0x8938

	)

69 
	#SIOCGIFBR
 0x8940

	)

70 
	#SIOCSIFBR
 0x8941

	)

72 
	#SIOCGIFTXQLEN
 0x8942

	)

73 
	#SIOCSIFTXQLEN
 0x8943

	)

75 
	#SIOCGIFDIVERT
 0x8944

	)

76 
	#SIOCSIFDIVERT
 0x8945

	)

78 
	#SIOCETHTOOL
 0x8946

	)

80 
	#SIOCGMIIPHY
 0x8947

	)

81 
	#SIOCGMIIREG
 0x8948

	)

82 
	#SIOCSMIIREG
 0x8949

	)

86 
	#SIOCDARP
 0x8953

	)

87 
	#SIOCGARP
 0x8954

	)

88 
	#SIOCSARP
 0x8955

	)

91 
	#SIOCDRARP
 0x8960

	)

92 
	#SIOCGRARP
 0x8961

	)

93 
	#SIOCSRARP
 0x8962

	)

97 
	#SIOCGIFMAP
 0x8970

	)

98 
	#SIOCSIFMAP
 0x8971

	)

102 
	#SIOCADDDLCI
 0x8980

	)

103 
	#SIOCDELDLCI
 0x8981

	)

105 
	#SIOCGIFVLAN
 0x8982

	)

106 
	#SIOCSIFVLAN
 0x8983

	)

110 
	#SIOCBONDENSLAVE
 0x8990

	)

111 
	#SIOCBONDRELEASE
 0x8991

	)

112 
	#SIOCBONDSETHWADDR
 0x8992

	)

113 
	#SIOCBONDSLAVEINFOQUERY
 0x8993

	)

114 
	#SIOCBONDINFOQUERY
 0x8994

	)

115 
	#SIOCBONDCHANGEACTIVE
 0x8995

	)

128 
	#SIOCDEVPRIVATE
 0x89F0

	)

134 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/linux/uio.h

1 #i‚de‡
__LINUX_UIO_H


2 
	#__LINUX_UIO_H


	)

4 
	~<löux/ty≥s.h
>

19 
	siovec


21 *
	miov_ba£
;

22 
__kî√l_size_t
 
	miov_Àn
;

29 
	#UIO_FASTIOV
 8

	)

30 
	#UIO_MAXIOV
 1024

	)

32 
	#UIO_MAXIOV
 16

	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‚de‡
__√ed_mb°©e_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #ifde‡
__USE_UNIX98


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

43 
	#__√ed_size_t


	)

44 
	#__√ed_wch¨_t


	)

45 
	#__√ed_NULL


	)

47 
	#__√ed_wöt_t


	)

48 
	~<°ddef.h
>

50 
	~<bôs/wch¨.h
>

54 #i‚de‡
_WINT_T


59 
	#_WINT_T


	)

60 
	twöt_t
;

62 #ifde‡
__USE_GNU


63 
	$__USING_NAMESPACE_STD
(
wöt_t
)

68 #i‚de‡
__mb°©e_t_deföed


69 
	#__mb°©e_t_deföed
 1

	)

73 
__cou¡
;

76 
wöt_t
 
__wch
;

77 
__wchb
[4];

78 } 
__vÆue
;

79 } 
	t__mb°©e_t
;

81 #unde‡
__√ed_mb°©e_t


86 #ifde‡
_WCHAR_H


88 
__BEGIN_NAMESPACE_C99


90 
__mb°©e_t
 
	tmb°©e_t
;

91 
__END_NAMESPACE_C99


92 #ifde‡
__USE_GNU


93 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

96 #i‚de‡
WCHAR_MIN


98 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

99 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

102 #i‚de‡
WEOF


103 
	#WEOF
 (0xffffffffu)

	)

108 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


109 
	~<w˘y≥.h
>

113 
__BEGIN_DECLS


115 
__BEGIN_NAMESPACE_STD


118 
tm
;

122 
	$__USING_NAMESPACE_STD
(
tm
)

123 
__END_NAMESPACE_STD


126 
__BEGIN_NAMESPACE_C99


128 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

129 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

131 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
;

136 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

137 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

139 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

141 
__THROW
;

144 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

145 
__THROW
 
__©åibuã_puª__
;

147 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
;

149 
__END_NAMESPACE_C99


151 #ifde‡
__USE_GNU


153 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

156 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

157 
size_t
 
__n
Ë
__THROW
;

161 
	~<xloˇÀ.h
>

163 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

164 
__loˇÀ_t
 
__loc
Ë
__THROW
;

166 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

167 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

170 
__BEGIN_NAMESPACE_C99


173 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

177 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

179 
__END_NAMESPACE_C99


181 #ifde‡
__USE_GNU


187 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

188 
__loˇÀ_t
 
__loc
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

194 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

197 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

200 
__BEGIN_NAMESPACE_C99


202 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

203 
__THROW
 
__©åibuã_puª__
;

205 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

206 
__THROW
 
__©åibuã_puª__
;

207 
__END_NAMESPACE_C99


209 #ifde‡
__USE_GNU


212 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

213 
__THROW
 
__©åibuã_puª__
;

216 
__BEGIN_NAMESPACE_C99


219 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

220 
__THROW
 
__©åibuã_puª__
;

223 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

224 
__THROW
 
__©åibuã_puª__
;

226 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

227 
__THROW
 
__©åibuã_puª__
;

229 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

230 
__THROW
 
__©åibuã_puª__
;

233 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

234 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

235 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

238 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

239 
__END_NAMESPACE_C99


241 #ifde‡
__USE_XOPEN


243 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

244 
__THROW
 
__©åibuã_puª__
;

247 #ifde‡
__USE_GNU


249 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
;

254 
__BEGIN_NAMESPACE_C99


256 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

257 
__THROW
 
__©åibuã_puª__
;

260 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

261 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

262 
__THROW
 
__©åibuã_puª__
;

265 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

266 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

270 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

271 
__THROW
;

274 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

275 
__END_NAMESPACE_C99


277 #ifde‡
__USE_GNU


280 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

282 
__THROW
;

286 
__BEGIN_NAMESPACE_C99


289 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

293 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

297 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

301 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

302 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
mb°©e_t
 *
__p
Ë
__THROW
;

306 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

307 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

310 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

312 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

313 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

314 
__END_NAMESPACE_C99


316 #ifde‡
__USE_EXTERN_INLINES


318 
__ölöe
 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

319 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW


320 {  (
__ps
 !
NULL


321 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

324 
__BEGIN_NAMESPACE_C99


327 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

328 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

329 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

333 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

334 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

335 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

336 
__END_NAMESPACE_C99


339 #ifdef 
__USE_GNU


342 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

343 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

344 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

348 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

349 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

350 
size_t
 
__nwc
, size_à
__Àn
,

351 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

356 #ifde‡
__USE_XOPEN


358 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

362 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

366 
__BEGIN_NAMESPACE_C99


369 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

370 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

372 #ifde‡
__USE_ISOC99


374 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

375 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

376 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

377 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

383 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

384 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

388 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

389 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

390 
__THROW
;

392 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

395 
__exãnsi⁄__


396 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

397 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

398 
__THROW
;

402 
__exãnsi⁄__


403 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

404 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

405 
__ba£
Ë
__THROW
;

407 
__END_NAMESPACE_C99


409 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


412 
__exãnsi⁄__


413 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

414 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

415 
__THROW
;

419 
__exãnsi⁄__


420 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

421 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

422 
__ba£
Ë
__THROW
;

425 #ifde‡
__USE_GNU


439 
	~<xloˇÀ.h
>

443 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

444 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

445 
__loˇÀ_t
 
__loc
Ë
__THROW
;

447 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

449 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

451 
__exãnsi⁄__


452 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

453 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

454 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

456 
__exãnsi⁄__


457 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

459 
__ba£
, 
__loˇÀ_t
 
__loc
)

460 
__THROW
;

462 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

464 
__THROW
;

466 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

468 
__THROW
;

470 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

472 
__loˇÀ_t
 
__loc
Ë
__THROW
;

478 
	$__wc°od_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

479 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

480 
__THROW
;

481 
	$__wc°of_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

483 
__THROW
;

484 
	$__wc°ﬁd_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

485 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

486 
__group
Ë
__THROW
;

488 #i‚de‡
__wc°ﬁ_öã∫Æ_deföed


489 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

490 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

491 
__ba£
, 
__group
Ë
__THROW
;

492 
	#__wc°ﬁ_öã∫Æ_deföed
 1

	)

494 #i‚de‡
__wc°oul_öã∫Æ_deföed


495 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈t
,

496 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

497 
__ba£
, 
__group
Ë
__THROW
;

498 
	#__wc°oul_öã∫Æ_deföed
 1

	)

500 #i‚de‡
__wc°ﬁl_öã∫Æ_deföed


501 
__exãnsi⁄__


502 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

503 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

504 
__ba£
, 
__group
Ë
__THROW
;

505 
	#__wc°ﬁl_öã∫Æ_deföed
 1

	)

507 #i‚de‡
__wc°ouŒ_öã∫Æ_deföed


508 
__exãnsi⁄__


509 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *

510 
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **

512 
__ª°ri˘
 
__íd±r
,

513 
__ba£
,

514 
__group
Ë
__THROW
;

515 
	#__wc°ouŒ_öã∫Æ_deföed
 1

	)

519 #i‡
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

521 
__BEGIN_NAMESPACE_C99


523 
__ölöe
 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

524 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW


525 {  
	`__wc°od_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

526 
__ölöe
 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

527 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

528 
__ba£
Ë
__THROW


529 {  
	`__wc°ﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

530 
__ölöe
 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

532 
__ba£
Ë
__THROW


533 {  
	`__wc°oul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

534 
__END_NAMESPACE_C99


536 #ifde‡
__USE_GNU


537 
__ölöe
 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW


539 {  
	`__wc°of_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

540 
__ölöe
 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

541 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW


542 {  
	`__wc°ﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

545 
__exãnsi⁄__


546 
__ölöe
 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

548 
__ba£
Ë
__THROW


549 {  
	`__wc°ﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

550 
__exãnsi⁄__


551 
__ölöe
 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *

552 
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

554 
__ba£
Ë
__THROW


555 {  
	`__wc°ouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

560 #ifdef 
__USE_GNU


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

567 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

568 
__THROW
;

573 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


574 
__BEGIN_NAMESPACE_C99


577 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

581 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

582 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

583 
__THROW
 ;

585 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

586 
__THROW
 ;

588 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

589 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

590 
__THROW
 ;

593 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

594 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

595 
__gnuc_va_li°
 
__¨g
)

596 
__THROW
 ;

598 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

599 
__gnuc_va_li°
 
__¨g
)

600 
__THROW
 ;

603 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

604 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

605 
__gnuc_va_li°
 
__¨g
)

606 
__THROW
 ;

610 
	$fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

612 
__THROW
 ;

614 
	$wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

615 
__THROW
 ;

617 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

618 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

619 
__THROW
 ;

621 
__END_NAMESPACE_C99


624 #ifde‡
__USE_ISOC99


625 
__BEGIN_NAMESPACE_C99


628 
	$vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

629 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

633 
	$vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

634 
__gnuc_va_li°
 
__¨g
)

635 
__THROW
 ;

637 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

638 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

639 
__gnuc_va_li°
 
__¨g
)

640 
__THROW
 ;

642 
__END_NAMESPACE_C99


646 
__BEGIN_NAMESPACE_C99


648 
wöt_t
 
	$fgëwc
 (
__FILE
 *
__°ªam
Ë
__THROW
;

649 
wöt_t
 
	$gëwc
 (
__FILE
 *
__°ªam
Ë
__THROW
;

652 
wöt_t
 
	$gëwch¨
 (Ë
__THROW
;

656 
wöt_t
 
	$Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
Ë
__THROW
;

657 
wöt_t
 
	$putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
Ë
__THROW
;

660 
wöt_t
 
	$putwch¨
 (
wch¨_t
 
__wc
Ë
__THROW
;

665 
wch¨_t
 *
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__ws
, 
__n
,

666 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

669 
	$Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

670 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

674 
wöt_t
 
	$ungëwc
 (
wöt_t
 
__wc
, 
__FILE
 *
__°ªam
Ë
__THROW
;

675 
__END_NAMESPACE_C99


678 #ifde‡
__USE_GNU


681 
wöt_t
 
	$gëwc_u∆ocked
 (
__FILE
 *
__°ªam
Ë
__THROW
;

682 
wöt_t
 
	$gëwch¨_u∆ocked
 (Ë
__THROW
;

685 
wöt_t
 
	$fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
Ë
__THROW
;

688 
wöt_t
 
	$Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
Ë
__THROW
;

692 
wöt_t
 
	$putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
Ë
__THROW
;

693 
wöt_t
 
	$putwch¨_u∆ocked
 (
wch¨_t
 
__wc
Ë
__THROW
;

697 
wch¨_t
 *
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__ws
, 
__n
,

698 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

701 
	$Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

702 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

706 
__BEGIN_NAMESPACE_C99


710 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

711 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

713 
__END_NAMESPACE_C99


715 #ifde‡
__USE_GNU


716 
	~<xloˇÀ.h
>

720 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

723 
__loˇÀ_t
 
__loc
Ë
__THROW
;

732 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


733 
	#__√ed_iswxxx


	)

734 
	~<w˘y≥.h
>

737 
__END_DECLS


	@/usr/include/asm/apicdef.h

1 #i‚de‡
__ASM_APICDEF_H


2 
	#__ASM_APICDEF_H


	)

11 
	#APIC_DEFAULT_PHYS_BASE
 0x„e00000

	)

13 
	#APIC_ID
 0x20

	)

14 
	#APIC_ID_MASK
 (0x0F<<24)

	)

15 
	#GET_APIC_ID
(
x
Ë(((x)>>24)&0x0F)

	)

16 
	#APIC_LVR
 0x30

	)

17 
	#APIC_LVR_MASK
 0xFF00FF

	)

18 
	#GET_APIC_VERSION
(
x
) ((x)&0xFF)

	)

19 
	#GET_APIC_MAXLVT
(
x
) (((x)>>16)&0xFF)

	)

20 
	#APIC_INTEGRATED
(
x
) ((x)&0xF0)

	)

21 
	#APIC_TASKPRI
 0x80

	)

22 
	#APIC_TPRI_MASK
 0xFF

	)

23 
	#APIC_ARBPRI
 0x90

	)

24 
	#APIC_ARBPRI_MASK
 0xFF

	)

25 
	#APIC_PROCPRI
 0xA0

	)

26 
	#APIC_EOI
 0xB0

	)

27 
	#APIC_EIO_ACK
 0x0

	)

28 
	#APIC_RRR
 0xC0

	)

29 
	#APIC_LDR
 0xD0

	)

30 
	#APIC_LDR_MASK
 (0xFF<<24)

	)

31 
	#GET_APIC_LOGICAL_ID
(
x
) (((x)>>24)&0xFF)

	)

32 
	#SET_APIC_LOGICAL_ID
(
x
) (((x)<<24))

	)

33 
	#APIC_ALL_CPUS
 0xFF

	)

34 
	#APIC_DFR
 0xE0

	)

35 
	#APIC_SPIV
 0xF0

	)

36 
	#APIC_SPIV_FOCUS_DISABLED
 (1<<9)

	)

37 
	#APIC_SPIV_APIC_ENABLED
 (1<<8)

	)

38 
	#APIC_ISR
 0x100

	)

39 
	#APIC_TMR
 0x180

	)

40 
	#APIC_IRR
 0x200

	)

41 
	#APIC_ESR
 0x280

	)

42 
	#APIC_ESR_SEND_CS
 0x00001

	)

43 
	#APIC_ESR_RECV_CS
 0x00002

	)

44 
	#APIC_ESR_SEND_ACC
 0x00004

	)

45 
	#APIC_ESR_RECV_ACC
 0x00008

	)

46 
	#APIC_ESR_SENDILL
 0x00020

	)

47 
	#APIC_ESR_RECVILL
 0x00040

	)

48 
	#APIC_ESR_ILLREGA
 0x00080

	)

49 
	#APIC_ICR
 0x300

	)

50 
	#APIC_DEST_SELF
 0x40000

	)

51 
	#APIC_DEST_ALLINC
 0x80000

	)

52 
	#APIC_DEST_ALLBUT
 0xC0000

	)

53 
	#APIC_ICR_RR_MASK
 0x30000

	)

54 
	#APIC_ICR_RR_INVALID
 0x00000

	)

55 
	#APIC_ICR_RR_INPROG
 0x10000

	)

56 
	#APIC_ICR_RR_VALID
 0x20000

	)

57 
	#APIC_INT_LEVELTRIG
 0x08000

	)

58 
	#APIC_INT_ASSERT
 0x04000

	)

59 
	#APIC_ICR_BUSY
 0x01000

	)

60 
	#APIC_DEST_LOGICAL
 0x00800

	)

61 
	#APIC_DM_FIXED
 0x00000

	)

62 
	#APIC_DM_LOWEST
 0x00100

	)

63 
	#APIC_DM_SMI
 0x00200

	)

64 
	#APIC_DM_REMRD
 0x00300

	)

65 
	#APIC_DM_NMI
 0x00400

	)

66 
	#APIC_DM_INIT
 0x00500

	)

67 
	#APIC_DM_STARTUP
 0x00600

	)

68 
	#APIC_DM_EXTINT
 0x00700

	)

69 
	#APIC_VECTOR_MASK
 0x000FF

	)

70 
	#APIC_ICR2
 0x310

	)

71 
	#GET_APIC_DEST_FIELD
(
x
) (((x)>>24)&0xFF)

	)

72 
	#SET_APIC_DEST_FIELD
(
x
) ((x)<<24)

	)

73 
	#APIC_LVTT
 0x320

	)

74 
	#APIC_LVTPC
 0x340

	)

75 
	#APIC_LVT0
 0x350

	)

76 
	#APIC_LVT_TIMER_BASE_MASK
 (0x3<<18)

	)

77 
	#GET_APIC_TIMER_BASE
(
x
Ë(((x)>>18)&0x3)

	)

78 
	#SET_APIC_TIMER_BASE
(
x
Ë(((x)<<18))

	)

79 
	#APIC_TIMER_BASE_CLKIN
 0x0

	)

80 
	#APIC_TIMER_BASE_TMBASE
 0x1

	)

81 
	#APIC_TIMER_BASE_DIV
 0x2

	)

82 
	#APIC_LVT_TIMER_PERIODIC
 (1<<17)

	)

83 
	#APIC_LVT_MASKED
 (1<<16)

	)

84 
	#APIC_LVT_LEVEL_TRIGGER
 (1<<15)

	)

85 
	#APIC_LVT_REMOTE_IRR
 (1<<14)

	)

86 
	#APIC_INPUT_POLARITY
 (1<<13)

	)

87 
	#APIC_SEND_PENDING
 (1<<12)

	)

88 
	#GET_APIC_DELIVERY_MODE
(
x
) (((x)>>8)&0x7)

	)

89 
	#SET_APIC_DELIVERY_MODE
(
x
,
y
) (((x)&~0x700)|((y)<<8))

	)

90 
	#APIC_MODE_FIXED
 0x0

	)

91 
	#APIC_MODE_NMI
 0x4

	)

92 
	#APIC_MODE_EXINT
 0x7

	)

93 
	#APIC_LVT1
 0x360

	)

94 
	#APIC_LVTERR
 0x370

	)

95 
	#APIC_TMICT
 0x380

	)

96 
	#APIC_TMCCT
 0x390

	)

97 
	#APIC_TDCR
 0x3E0

	)

98 
	#APIC_TDR_DIV_TMBASE
 (1<<2)

	)

99 
	#APIC_TDR_DIV_1
 0xB

	)

100 
	#APIC_TDR_DIV_2
 0x0

	)

101 
	#APIC_TDR_DIV_4
 0x1

	)

102 
	#APIC_TDR_DIV_8
 0x2

	)

103 
	#APIC_TDR_DIV_16
 0x3

	)

104 
	#APIC_TDR_DIV_32
 0x8

	)

105 
	#APIC_TDR_DIV_64
 0x9

	)

106 
	#APIC_TDR_DIV_128
 0xA

	)

108 
	#APIC_BASE
 (
	`fix_to_vút
(
FIX_APIC_BASE
))

	)

110 
	#MAX_IO_APICS
 8

	)

118 
	#u32
 

	)

120 
	#œpic
 ((vﬁ©ûê
loˇl_≠ic
 *)
APIC_BASE
)

	)

122 
	sloˇl_≠ic
 {

124  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_01
;

126  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_02
;

129 
u32
 
	m__ª£rved_1
 : 24,

130 
	mphys_≠ic_id
 : 4,

131 
	m__ª£rved_2
 : 4;

132 
u32
 
	m__ª£rved
[3];

133 } 
	mid
;

137 
u32
 
	mvîsi⁄
 : 8,

138 
	m__ª£rved_1
 : 8,

139 
	mmax_lvt
 : 8,

140 
	m__ª£rved_2
 : 8;

141 
u32
 
	m__ª£rved
[3];

142 } 
	mvîsi⁄
;

144  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_03
;

146  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_04
;

148  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_05
;

150  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_06
;

153 
u32
 
	m¥i‹ôy
 : 8,

154 
	m__ª£rved_1
 : 24;

155 
u32
 
	m__ª£rved_2
[3];

156 } 
	mçr
;

160 
u32
 
	m¥i‹ôy
 : 8,

161 
	m__ª£rved_1
 : 24;

162 
u32
 
	m__ª£rved_2
[3];

163 } 
	m≠r
;

167 
u32
 
	m¥i‹ôy
 : 8,

168 
	m__ª£rved_1
 : 24;

169 
u32
 
	m__ª£rved_2
[3];

170 } 
	mµr
;

173 
u32
 
	meoi
;

174 
u32
 
	m__ª£rved
[3];

175 } 
	meoi
;

177  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_07
;

180 
u32
 
	m__ª£rved_1
 : 24,

181 
	mlogiˇl_de°
 : 8;

182 
u32
 
	m__ª£rved_2
[3];

183 } 
	mldr
;

186 
u32
 
	m__ª£rved_1
 : 28,

187 
	mmodñ
 : 4;

188 
u32
 
	m__ª£rved_2
[3];

189 } 
	md‰
;

192 
u32
 
	m•urious_ve˘‹
 : 8,

193 
	m≠ic_íabÀd
 : 1,

194 
	mfocus_˝u
 : 1,

195 
	m__ª£rved_2
 : 22;

196 
u32
 
	m__ª£rved_3
[3];

197 } 
	msvr
;

200  
u32
 
	mbôfõld
;

201 
u32
 
	m__ª£rved
[3];

202 } 
	mi§
 [8];

205  
u32
 
	mbôfõld
;

206 
u32
 
	m__ª£rved
[3];

207 } 
	mtmr
 [8];

210  
u32
 
	mbôfõld
;

211 
u32
 
	m__ª£rved
[3];

212 } 
	múr
 [8];

216 
u32
 
	m£nd_cs_îr‹
 : 1,

217 
	mª˚ive_cs_îr‹
 : 1,

218 
	m£nd_ac˚±_îr‹
 : 1,

219 
	mª˚ive_ac˚±_îr‹
 : 1,

220 
	m__ª£rved_1
 : 1,

221 
	m£nd_ûÀgÆ_ve˘‹
 : 1,

222 
	mª˚ive_ûÀgÆ_ve˘‹
 : 1,

223 
	mûÀgÆ_ªgi°î_addªss
 : 1,

224 
	m__ª£rved_2
 : 24;

225 
u32
 
	m__ª£rved_3
[3];

226 } 
	mîr‹_bôs
;

228 
u32
 
	mîr‹s
;

229 
u32
 
	m__ª£rved_3
[3];

230 } 
	mÆl_îr‹s
;

231 } 
	me§
;

233  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_08
;

235  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_09
;

237  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_10
;

239  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_11
;

241  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_12
;

243  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_13
;

245  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_14
;

248 
u32
 
	mve˘‹
 : 8,

249 
	mdñivîy_mode
 : 3,

250 
	mde°ö©i⁄_mode
 : 1,

251 
	mdñivîy_°©us
 : 1,

252 
	m__ª£rved_1
 : 1,

253 
	mÀvñ
 : 1,

254 
	måiggî
 : 1,

255 
	m__ª£rved_2
 : 2,

256 
	msh‹th™d
 : 2,

257 
	m__ª£rved_3
 : 12;

258 
u32
 
	m__ª£rved_4
[3];

259 } 
	mi¸1
;

263 
u32
 
	m__ª£rved_1
 : 24,

264 
	mphys_de°
 : 4,

265 
	m__ª£rved_2
 : 4;

266 
u32
 
	m__ª£rved_3
 : 24,

267 
	mlogiˇl_de°
 : 8;

268 } 
	mde°
;

269 
u32
 
	m__ª£rved_4
[3];

270 } 
	mi¸2
;

273 
u32
 
	mve˘‹
 : 8,

274 
	m__ª£rved_1
 : 4,

275 
	mdñivîy_°©us
 : 1,

276 
	m__ª£rved_2
 : 3,

277 
	mmask
 : 1,

278 
	mtimî_mode
 : 1,

279 
	m__ª£rved_3
 : 14;

280 
u32
 
	m__ª£rved_4
[3];

281 } 
	mlvt_timî
;

283  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_15
;

286 
u32
 
	mve˘‹
 : 8,

287 
	mdñivîy_mode
 : 3,

288 
	m__ª£rved_1
 : 1,

289 
	mdñivîy_°©us
 : 1,

290 
	m__ª£rved_2
 : 3,

291 
	mmask
 : 1,

292 
	m__ª£rved_3
 : 15;

293 
u32
 
	m__ª£rved_4
[3];

294 } 
	mlvt_pc
;

297 
u32
 
	mve˘‹
 : 8,

298 
	mdñivîy_mode
 : 3,

299 
	m__ª£rved_1
 : 1,

300 
	mdñivîy_°©us
 : 1,

301 
	mpﬁ¨ôy
 : 1,

302 
	mªmŸe_úr
 : 1,

303 
	måiggî
 : 1,

304 
	mmask
 : 1,

305 
	m__ª£rved_2
 : 15;

306 
u32
 
	m__ª£rved_3
[3];

307 } 
	mlvt_löt0
;

310 
u32
 
	mve˘‹
 : 8,

311 
	mdñivîy_mode
 : 3,

312 
	m__ª£rved_1
 : 1,

313 
	mdñivîy_°©us
 : 1,

314 
	mpﬁ¨ôy
 : 1,

315 
	mªmŸe_úr
 : 1,

316 
	måiggî
 : 1,

317 
	mmask
 : 1,

318 
	m__ª£rved_2
 : 15;

319 
u32
 
	m__ª£rved_3
[3];

320 } 
	mlvt_löt1
;

323 
u32
 
	mve˘‹
 : 8,

324 
	m__ª£rved_1
 : 4,

325 
	mdñivîy_°©us
 : 1,

326 
	m__ª£rved_2
 : 3,

327 
	mmask
 : 1,

328 
	m__ª£rved_3
 : 15;

329 
u32
 
	m__ª£rved_4
[3];

330 } 
	mlvt_îr‹
;

333 
u32
 
	möôül_cou¡
;

334 
u32
 
	m__ª£rved_2
[3];

335 } 
	mtimî_i¸
;

339 
u32
 
	mcuº_cou¡
;

340 
u32
 
	m__ª£rved_2
[3];

341 } 
	mtimî_c¸
;

343  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_16
;

345  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_17
;

347  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_18
;

349  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_19
;

352 
u32
 
	mdivis‹
 : 4,

353 
	m__ª£rved_1
 : 28;

354 
u32
 
	m__ª£rved_2
[3];

355 } 
	mtimî_d¸
;

357  såu˘ { 
u32
 
	m__ª£rved
[4]; } 
	m__ª£rved_20
;

359 } 
__©åibuã__
 ((
∑cked
));

361 #unde‡
u32


	@/usr/include/asm/sockios.h

1 #i‚de‡
__ARCH_I386_SOCKIOS__


2 
	#__ARCH_I386_SOCKIOS__


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

24 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/linux/pm.h

21 #i‚de‡
_LINUX_PM_H


22 
	#_LINUX_PM_H


	)

	@/usr/include/pthread.h

15 #i‚de‡
_PTHREAD_H


16 
	#_PTHREAD_H
 1

	)

18 
	~<„©uªs.h
>

20 
	~<sched.h
>

21 
	~<time.h
>

23 
	#__√ed_sig£t_t


	)

24 
	~<sig«l.h
>

25 
	~<bôs/±hªadty≥s.h
>

26 
	~<bôs/öô•ö.h
>

29 
	g__BEGIN_DECLS


33 
	#PTHREAD_MUTEX_INITIALIZER
 \

34 {0, 0, 0, 
PTHREAD_MUTEX_TIMED_NP
, 
__LOCK_INITIALIZER
}

	)

35 #ifde‡
__USE_GNU


36 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

37 {0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__LOCK_INITIALIZER
}

	)

38 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

39 {0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__LOCK_INITIALIZER
}

	)

40 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

41 {0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__LOCK_INITIALIZER
}

	)

44 
	#PTHREAD_COND_INITIALIZER
 {
__LOCK_INITIALIZER
, 0}

	)

46 #ifde‡
__USE_UNIX98


47 
	#PTHREAD_RWLOCK_INITIALIZER
 \

48 { 
__LOCK_INITIALIZER
, 0, 
NULL
, NULL, NULL, \

49 
PTHREAD_RWLOCK_DEFAULT_NP
, 
PTHREAD_PROCESS_PRIVATE
 }

	)

51 #ifde‡
__USE_GNU


52 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

53 { 
__LOCK_INITIALIZER
, 0, 
NULL
, NULL, NULL, \

54 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, 
PTHREAD_PROCESS_PRIVATE
 }

	)

61 
	mPTHREAD_CREATE_JOINABLE
,

62 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

63 
	mPTHREAD_CREATE_DETACHED


64 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

69 
	mPTHREAD_INHERIT_SCHED
,

70 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

71 
	mPTHREAD_EXPLICIT_SCHED


72 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

77 
	mPTHREAD_SCOPE_SYSTEM
,

78 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

79 
	mPTHREAD_SCOPE_PROCESS


80 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

85 
	mPTHREAD_MUTEX_TIMED_NP
,

86 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

87 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

88 
	mPTHREAD_MUTEX_ADAPTIVE_NP


89 #ifde‡
__USE_UNIX98


91 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

92 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

93 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

94 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


96 #ifde‡
__USE_GNU


98 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_ADAPTIVE_NP


104 
	mPTHREAD_PROCESS_PRIVATE
,

105 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

106 
	mPTHREAD_PROCESS_SHARED


107 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

110 #ifde‡
__USE_UNIX98


113 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

114 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

115 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

116 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_WRITER_NP


120 
	#PTHREAD_ONCE_INIT
 0

	)

124 #ifde‡
__USE_XOPEN2K


126 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

131 
	s_±hªad_˛ónup_buf„r


133 (*
	m__routöe
) (*);

134 *
	m__¨g
;

135 
	m__ˇn˚…y≥
;

136 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

143 
	mPTHREAD_CANCEL_ENABLE
,

144 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

145 
	mPTHREAD_CANCEL_DISABLE


146 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

150 
	mPTHREAD_CANCEL_DEFERRED
,

151 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

152 
	mPTHREAD_CANCEL_ASYNCHRONOUS


153 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

155 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

163 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__thªadp
,

164 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

165 *(*
__°¨t_routöe
) (*),

166 *
__ª°ri˘
 
__¨g
Ë
__THROW
;

169 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
;

172 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

175 
	$±hªad_exô
 (*
__ªtvÆ
)

176 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

181 
	$±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

187 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

195 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

198 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

201 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

202 
__dëach°©e
Ë
__THROW
;

205 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

206 *
__dëach°©e
Ë
__THROW
;

209 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

210 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


211 
__∑øm
Ë
__THROW
;

214 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


215 
__©å
,

216 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

217 
__THROW
;

220 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

221 
__THROW
;

224 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


225 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

226 
__THROW
;

229 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

230 
__öhîô
Ë
__THROW
;

233 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


234 
__©å
, *
__ª°ri˘
 
__öhîô
)

235 
__THROW
;

238 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

239 
__THROW
;

242 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

243 *
__ª°ri˘
 
__sc›e
Ë
__THROW
;

245 #ifde‡
__USE_UNIX98


247 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

248 
size_t
 
__gu¨dsize
Ë
__THROW
;

251 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


252 
__©å
, 
size_t
 *
__ª°ri˘
 
__gu¨dsize
)

253 
__THROW
;

260 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

261 *
__°ackaddr
Ë
__THROW
;

264 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


265 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

266 
__THROW
;

268 #ifde‡
__USE_XOPEN2K


272 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

273 
size_t
 
__°acksize
Ë
__THROW
;

276 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

277 **
__ª°ri˘
 
__°ackaddr
,

278 
size_t
 *
__ª°ri˘
 
__°acksize
Ë
__THROW
;

284 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

285 
size_t
 
__°acksize
Ë
__THROW
;

288 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


289 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

290 
__THROW
;

292 #ifde‡
__USE_GNU


294 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
Ë
__THROW
;

301 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

302 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

303 
__THROW
;

306 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

307 *
__ª°ri˘
 
__pﬁicy
,

308 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

309 
__THROW
;

311 #ifde‡
__USE_UNIX98


313 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

316 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

319 #ifde‡
__USE_GNU


324 
	$±hªad_yõld
 (Ë
__THROW
;

331 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

332 
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


333 
__muãx_©å
Ë
__THROW
;

336 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

339 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

342 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

344 #ifde‡
__USE_XOPEN2K


346 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

347 
__c⁄°
 
time•ec
 *
__ª°ri˘


348 
__ab°ime
Ë
__THROW
;

352 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

359 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

362 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

365 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

366 
__ª°ri˘
 
__©å
,

367 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

370 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

371 
__psh¨ed
Ë
__THROW
;

373 #ifde‡
__USE_UNIX98


377 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

378 
__THROW
;

381 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


382 
__©å
, *
__ª°ri˘
 
__köd
Ë
__THROW
;

390 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

391 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


392 
__c⁄d_©å
Ë
__THROW
;

395 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

398 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

401 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

405 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

406 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
Ë
__THROW
;

412 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

413 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

414 
__c⁄°
 
time•ec
 *
__ª°ri˘


415 
__ab°ime
Ë
__THROW
;

420 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

423 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

426 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

427 
__ª°ri˘
 
__©å
,

428 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

431 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

432 
__psh¨ed
Ë
__THROW
;

435 #ifde‡
__USE_UNIX98


440 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

441 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


442 
__©å
Ë
__THROW
;

445 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

448 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

451 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

453 #ifde‡
__USE_XOPEN2K


455 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

456 
__c⁄°
 
time•ec
 *
__ª°ri˘


457 
__ab°ime
Ë
__THROW
;

461 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

464 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

466 #ifde‡
__USE_XOPEN2K


468 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

469 
__c⁄°
 
time•ec
 *
__ª°ri˘


470 
__ab°ime
Ë
__THROW
;

474 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

480 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

483 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

486 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

487 
__ª°ri˘
 
__©å
,

488 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

491 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

492 
__psh¨ed
Ë
__THROW
;

495 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
,

496 *
__¥ef
Ë
__THROW
;

499 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

500 
__¥ef
Ë
__THROW
;

503 #ifde‡
__USE_XOPEN2K


509 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

510 
__THROW
;

513 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

516 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

519 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

522 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

527 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

528 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


529 
__©å
, 
__cou¡
Ë
__THROW
;

531 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

533 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

535 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

537 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

538 
__ª°ri˘
 
__©å
,

539 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

541 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

542 
__psh¨ed
Ë
__THROW
;

544 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

556 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

557 (*
__de°r_fun˘i⁄
Ë(*)Ë
__THROW
;

560 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

563 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

564 
__c⁄°
 *
__poöãr
Ë
__THROW
;

567 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

576 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

577 (*
__öô_routöe
Ë()Ë
__THROW
;

584 
	$±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
Ë
__THROW
;

588 
	$±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
Ë
__THROW
;

591 
	$±hªad_ˇn˚l
 (
±hªad_t
 
__ˇn˚…hªad
Ë
__THROW
;

596 
	$±hªad_ã°ˇn˚l
 (Ë
__THROW
;

606 
	#±hªad_˛ónup_push
(
routöe
,
¨g
) \

607 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

608 
	`_±hªad_˛ónup_push
 (&
_buf„r
, (
routöe
), (
¨g
));

	)

610 
	`_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

611 (*
__routöe
) (*),

612 *
__¨g
Ë
__THROW
;

617 
	#±hªad_˛ónup_p›
(
execuã
) \

618 
	`_±hªad_˛ónup_p›
 (&
_buf„r
, (
execuã
)); 
	}

	)
}

620 
	$_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

621 
__execuã
Ë
__THROW
;

626 #ifde‡
__USE_GNU


627 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
,
¨g
) \

628 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

629 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
routöe
), (
¨g
));

	)

631 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

632 (*
__routöe
) (*),

633 *
__¨g
Ë
__THROW
;

639 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

640 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
execuã
)); 
	}

	)
}

642 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

643 
__execuã
Ë
__THROW
;

647 #ifde‡
__USE_XOPEN2K


649 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

650 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

655 
	~<bôs/sigthªad.h
>

671 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

672 (*
__∑ª¡
) (),

673 (*
__chûd
Ë()Ë
__THROW
;

678 
	$±hªad_kûl_Ÿhî_thªads_≈
 (Ë
__THROW
;

680 
__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

34 
	#__√ed_wöt_t


	)

35 
	~<°ddef.h
>

36 #i‚de‡
_WINT_T


41 
	#_WINT_T


	)

42 
	twöt_t
;

44 #ifde‡
__USE_ISOC99


45 
	$__USING_NAMESPACE_C99
(
wöt_t
)

47 
__END_NAMESPACE_C99


52 #i‚de‡
WEOF


53 
	#WEOF
 (0xffffffffu)

	)

56 #unde‡
__√ed_iswxxx


61 #i‚de‡
__iswxxx_deföed


62 
	#__iswxxx_deföed
 1

	)

64 
__BEGIN_NAMESPACE_C99


67 
	tw˘y≥_t
;

68 
__END_NAMESPACE_C99


70 #i‚de‡
_ISwbô


75 
	~<ídün.h
>

76 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


77 
	#_ISwbô
(
bô
) (1 << (bô))

	)

79 
	#_ISwbô
(
bô
) \

80 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

81 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

82 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

83 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

88 
__ISwuµî
 = 0,

89 
__ISwlowî
 = 1,

90 
__ISwÆpha
 = 2,

91 
__ISwdigô
 = 3,

92 
__ISwxdigô
 = 4,

93 
__ISw•a˚
 = 5,

94 
__ISw¥öt
 = 6,

95 
__ISwgøph
 = 7,

96 
__ISwbœnk
 = 8,

97 
__ISw˙ål
 = 9,

98 
__ISwpun˘
 = 10,

99 
__ISwÆnum
 = 11,

101 
_ISwuµî
 = 
	`_ISwbô
 (
__ISwuµî
),

102 
_ISwlowî
 = 
	`_ISwbô
 (
__ISwlowî
),

103 
_ISwÆpha
 = 
	`_ISwbô
 (
__ISwÆpha
),

104 
_ISwdigô
 = 
	`_ISwbô
 (
__ISwdigô
),

105 
_ISwxdigô
 = 
	`_ISwbô
 (
__ISwxdigô
),

106 
_ISw•a˚
 = 
	`_ISwbô
 (
__ISw•a˚
),

107 
_ISw¥öt
 = 
	`_ISwbô
 (
__ISw¥öt
),

108 
_ISwgøph
 = 
	`_ISwbô
 (
__ISwgøph
),

109 
_ISwbœnk
 = 
	`_ISwbô
 (
__ISwbœnk
),

110 
_ISw˙ål
 = 
	`_ISwbô
 (
__ISw˙ål
),

111 
_ISwpun˘
 = 
	`_ISwbô
 (
__ISwpun˘
),

112 
_ISwÆnum
 = 
	`_ISwbô
 (
__ISwÆnum
)

117 
__BEGIN_DECLS


119 
__BEGIN_NAMESPACE_C99


126 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

132 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

135 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

139 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

143 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

148 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

161 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

166 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

176 #ifde‡
__USE_ISOC99


177 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

186 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

190 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

191 
__END_NAMESPACE_C99


198 
__BEGIN_NAMESPACE_C99


201 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

202 
__END_NAMESPACE_C99


203 #ifde‡
__USE_GNU


204 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

207 
__BEGIN_NAMESPACE_C99


209 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

212 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

213 
__END_NAMESPACE_C99


215 
__END_DECLS


222 #ifde‡
_WCTYPE_H


228 
__BEGIN_DECLS


230 
__BEGIN_NAMESPACE_C99


233 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

236 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

237 
__END_NAMESPACE_C99


239 #ifde‡
__USE_GNU


241 
	~<xloˇÀ.h
>

245 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

251 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

254 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

258 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

262 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

267 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

290 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

295 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

299 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

300 
__THROW
;

304 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

305 
__THROW
;

313 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

316 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

320 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

321 
__THROW
;

324 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

325 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

329 
__END_DECLS


	@/usr/include/bits/initspin.h

23 
	#__LT_SPINLOCK_INIT
 0

	)

26 
	#__LOCK_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

27 
	#__ALT_LOCK_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

28 
	#__ATOMIC_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_time•ec


	)

29 
	~<time.h
>

32 
	~<bôs/sched.h
>

34 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

37 
__BEGIN_DECLS


40 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

41 
__THROW
;

44 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

47 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

48 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

51 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

54 
	$sched_yõld
 (Ë
__THROW
;

57 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

66 #ifde‡
__USE_GNU


68 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
__Àn
,

69 *
__mask
Ë
__THROW
;

72 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
__Àn
,

73 *
__mask
Ë
__THROW
;

76 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #ifde‡
__USE_XOPEN


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #i‚de‡
__uid_t_deföed


66 
__uid_t
 
	tuid_t
;

67 
	#__uid_t_deföed


	)

73 (*
	t__sigh™dÀr_t
) ();

78 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

79 
__THROW
;

80 #ifde‡
__USE_GNU


81 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

82 
__THROW
;

88 
__BEGIN_NAMESPACE_STD


89 #ifde‡
__USE_BSD


90 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
Ë
__THROW
;

93 #ifde‡
__REDIRECT


94 
__sigh™dÀr_t
 
	`__REDIRECT
 (
sig«l
,

95 (
__sig
,

96 
__sigh™dÀr_t
 
__h™dÀr
Ë
__THROW
,

97 
__sysv_sig«l
);

99 
	#sig«l
 
__sysv_sig«l


	)

102 
__END_NAMESPACE_STD


104 #ifde‡
__USE_XOPEN


107 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
Ë
__THROW
;

113 #ifde‡
__USE_POSIX


114 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

117 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


121 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

124 
__BEGIN_NAMESPACE_STD


126 
	$øi£
 (
__sig
Ë
__THROW
;

127 
__END_NAMESPACE_STD


129 #ifde‡
__USE_SVID


131 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
Ë
__THROW
;

132 
	$gsig«l
 (
__sig
Ë
__THROW
;

135 #ifde‡
__USE_MISC


137 
	$psig«l
 (
__sig
, 
__c⁄°
 *
__s
Ë
__THROW
;

146 
	$__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
Ë
__THROW
;

148 #ifde‡
__USE_BSD


151 
	$sig∑u£
 (
__mask
Ë
__THROW
;

152 
	#sig∑u£
(
mask
Ë
	`__sig∑u£
 ((mask), 0)

	)

154 #ifde‡
__USE_XOPEN


155 #ifde‡
__GNUC__


156 
	$sig∑u£
 (
__sig
Ë
__THROW
 
	`__asm__
 ("__xpg_sigpause");

159 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

164 #ifde‡
__USE_BSD


171 
	#sigmask
(
sig
) 
	`__sigmask
(sig)

	)

174 
	$sigblock
 (
__mask
Ë
__THROW
;

177 
	$sig£tmask
 (
__mask
Ë
__THROW
;

180 
	$siggëmask
 (Ë
__THROW
;

184 #ifde‡
__USE_MISC


185 
	#NSIG
 
_NSIG


	)

188 #ifde‡
__USE_GNU


189 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

193 #ifde‡
__USE_BSD


194 
__sigh™dÀr_t
 
	tsig_t
;

197 #ifde‡
__USE_POSIX


199 #ifde‡
__USE_POSIX199309


201 
	#__√ed_time•ec


	)

202 
	~<time.h
>

205 
	~<bôs/sigöfo.h
>

209 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
;

212 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
;

215 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
;

218 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
;

221 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
;

223 #ifde‡
__USE_GNU


225 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
;

228 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

229 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
;

232 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

233 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
;

238 
	~<bôs/siga˘i⁄.h
>

241 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

242 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

246 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
;

249 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

250 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

253 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
;

257 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

258 
__THROW
;

260 #ifde‡
__USE_POSIX199309


262 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

263 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
__THROW
;

267 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

268 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

269 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

270 
__THROW
;

274 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

275 
__THROW
;

280 #ifde‡
__USE_BSD


284 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

285 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

288 
	ssigvec


290 
__sigh™dÀr_t
 
sv_h™dÀr
;

291 
sv_mask
;

293 
sv_Êags
;

294 
	#sv_⁄°ack
 
sv_Êags


	)

298 
	#SV_ONSTACK
 (1 << 0Ë

	)

299 
	#SV_INTERRUPT
 (1 << 1Ë

	)

300 
	#SV_RESETHAND
 (1 << 2Ë

	)

308 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

309 
sigvec
 *
__ovec
Ë
__THROW
;

313 
	~<bôs/sigc⁄ãxt.h
>

316 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

321 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


326 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

328 
	~<bôs/sig°ack.h
>

329 #ifde‡
__USE_XOPEN


330 
	~<uc⁄ãxt.h
>

336 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
Ë
__THROW
;

340 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

341 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

345 #ifde‡
__USE_UNIX98


349 
	$sighﬁd
 (
__sig
Ë
__THROW
;

352 
	$sigªl£
 (
__sig
Ë
__THROW
;

355 
	$sigign‹e
 (
__sig
Ë
__THROW
;

358 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

361 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


364 
	~<bôs/sigthªad.h
>

371 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

373 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

377 
__END_DECLS


	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


23 #i‚de‡
sigc⁄ãxt_°ru˘


26 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

28 
	~<asm/sigc⁄ãxt.h
>

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	m_timî1
;

73 
	m_timî2
;

74 } 
	m_timî
;

79 
__pid_t
 
	msi_pid
;

80 
__uid_t
 
	msi_uid
;

81 
sigvÆ_t
 
	msi_sigvÆ
;

82 } 
	m_π
;

87 
__pid_t
 
	msi_pid
;

88 
__uid_t
 
	msi_uid
;

89 
	msi_°©us
;

90 
__˛ock_t
 
	msi_utime
;

91 
__˛ock_t
 
	msi_°ime
;

92 } 
	m_sigchld
;

97 *
	msi_addr
;

98 } 
	m_sigÁu…
;

103 
	msi_b™d
;

104 
	msi_fd
;

105 } 
	m_sigpﬁl
;

106 } 
	m_sifõlds
;

107 } 
	tsigöfo_t
;

111 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

112 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

113 
	#si_timî1
 
_sifõlds
.
_timî
.
_timî1


	)

114 
	#si_timî2
 
_sifõlds
.
_timî
.
_timî2


	)

115 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

116 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

117 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

118 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

119 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

120 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

121 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

122 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

123 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

130 
	mSI_ASYNCNL
 = -6,

131 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

132 
	mSI_SIGIO
,

133 
	#SI_SIGIO
 
SI_SIGIO


	)

134 
	mSI_ASYNCIO
,

135 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

136 
	mSI_MESGQ
,

137 
	#SI_MESGQ
 
SI_MESGQ


	)

138 
	mSI_TIMER
,

139 
	#SI_TIMER
 
SI_TIMER


	)

140 
	mSI_QUEUE
,

141 
	#SI_QUEUE
 
SI_QUEUE


	)

142 
	mSI_USER
,

143 
	#SI_USER
 
SI_USER


	)

144 
	mSI_KERNEL
 = 0x80

145 
	#SI_KERNEL
 
SI_KERNEL


	)

152 
	mILL_ILLOPC
 = 1,

153 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

154 
	mILL_ILLOPN
,

155 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

156 
	mILL_ILLADR
,

157 
	#ILL_ILLADR
 
ILL_ILLADR


	)

158 
	mILL_ILLTRP
,

159 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

160 
	mILL_PRVOPC
,

161 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

162 
	mILL_PRVREG
,

163 
	#ILL_PRVREG
 
ILL_PRVREG


	)

164 
	mILL_COPROC
,

165 
	#ILL_COPROC
 
ILL_COPROC


	)

166 
	mILL_BADSTK


167 
	#ILL_BADSTK
 
ILL_BADSTK


	)

173 
	mFPE_INTDIV
 = 1,

174 
	#FPE_INTDIV
 
FPE_INTDIV


	)

175 
	mFPE_INTOVF
,

176 
	#FPE_INTOVF
 
FPE_INTOVF


	)

177 
	mFPE_FLTDIV
,

178 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

179 
	mFPE_FLTOVF
,

180 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

181 
	mFPE_FLTUND
,

182 
	#FPE_FLTUND
 
FPE_FLTUND


	)

183 
	mFPE_FLTRES
,

184 
	#FPE_FLTRES
 
FPE_FLTRES


	)

185 
	mFPE_FLTINV
,

186 
	#FPE_FLTINV
 
FPE_FLTINV


	)

187 
	mFPE_FLTSUB


188 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

194 
	mSEGV_MAPERR
 = 1,

195 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

196 
	mSEGV_ACCERR


197 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

203 
	mBUS_ADRALN
 = 1,

204 
	#BUS_ADRALN
 
BUS_ADRALN


	)

205 
	mBUS_ADRERR
,

206 
	#BUS_ADRERR
 
BUS_ADRERR


	)

207 
	mBUS_OBJERR


208 
	#BUS_OBJERR
 
BUS_OBJERR


	)

214 
	mTRAP_BRKPT
 = 1,

215 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

216 
	mTRAP_TRACE


217 
	#TRAP_TRACE
 
TRAP_TRACE


	)

223 
	mCLD_EXITED
 = 1,

224 
	#CLD_EXITED
 
CLD_EXITED


	)

225 
	mCLD_KILLED
,

226 
	#CLD_KILLED
 
CLD_KILLED


	)

227 
	mCLD_DUMPED
,

228 
	#CLD_DUMPED
 
CLD_DUMPED


	)

229 
	mCLD_TRAPPED
,

230 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

231 
	mCLD_STOPPED
,

232 
	#CLD_STOPPED
 
CLD_STOPPED


	)

233 
	mCLD_CONTINUED


234 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

240 
	mPOLL_IN
 = 1,

241 
	#POLL_IN
 
POLL_IN


	)

242 
	mPOLL_OUT
,

243 
	#POLL_OUT
 
POLL_OUT


	)

244 
	mPOLL_MSG
,

245 
	#POLL_MSG
 
POLL_MSG


	)

246 
	mPOLL_ERR
,

247 
	#POLL_ERR
 
POLL_ERR


	)

248 
	mPOLL_PRI
,

249 
	#POLL_PRI
 
POLL_PRI


	)

250 
	mPOLL_HUP


251 
	#POLL_HUP
 
POLL_HUP


	)

254 #unde‡
__√ed_sigöfo_t


258 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

259 && !
deföed
 
	g__have_sigevít_t


260 
	#__have_sigevít_t
 1

	)

263 
	#__SIGEV_MAX_SIZE
 64

	)

264 #i‡
__WORDSIZE
 == 64

265 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

267 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

271 
	g__±hªad_©å_s
;

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

286 
__±hªad_©å_s
 *
	m_©åibuã
;

287 } 
	m_sigev_thªad
;

288 } 
	m_sigev_un
;

289 } 
	tsigevít_t
;

292 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

293 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

298 
	mSIGEV_SIGNAL
 = 0,

299 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

300 
	mSIGEV_NONE
,

301 
	#SIGEV_NONE
 
SIGEV_NONE


	)

302 
	mSIGEV_THREAD


303 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2)

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 64

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/ucontext.h

21 #i‚de‡
_UCONTEXT_H


22 
	#_UCONTEXT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<sys/uc⁄ãxt.h
>

29 
__BEGIN_DECLS


32 
	$gëc⁄ãxt
 (
uc⁄ãxt_t
 *
__u˝
Ë
__THROW
;

35 
	$£tc⁄ãxt
 (
__c⁄°
 
uc⁄ãxt_t
 *
__u˝
Ë
__THROW
;

39 
	$sw≠c⁄ãxt
 (
uc⁄ãxt_t
 *
__ª°ri˘
 
__ou˝
,

40 
__c⁄°
 
uc⁄ãxt_t
 *
__ª°ri˘
 
__u˝
Ë
__THROW
;

48 
	`makec⁄ãxt
 (
uc⁄ãxt_t
 *
__u˝
, (*
__func
) (),

49 
__¨gc
, ...Ë
__THROW
;

51 
__END_DECLS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

27 
	~<bôs/sigc⁄ãxt.h
>

31 
	tgªg_t
;

34 
	#NGREG
 19

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_GS
 = 0,

44 
	#REG_GS
 
REG_GS


	)

45 
	mREG_FS
,

46 
	#REG_FS
 
REG_FS


	)

47 
	mREG_ES
,

48 
	#REG_ES
 
REG_ES


	)

49 
	mREG_DS
,

50 
	#REG_DS
 
REG_DS


	)

51 
	mREG_EDI
,

52 
	#REG_EDI
 
REG_EDI


	)

53 
	mREG_ESI
,

54 
	#REG_ESI
 
REG_ESI


	)

55 
	mREG_EBP
,

56 
	#REG_EBP
 
REG_EBP


	)

57 
	mREG_ESP
,

58 
	#REG_ESP
 
REG_ESP


	)

59 
	mREG_EBX
,

60 
	#REG_EBX
 
REG_EBX


	)

61 
	mREG_EDX
,

62 
	#REG_EDX
 
REG_EDX


	)

63 
	mREG_ECX
,

64 
	#REG_ECX
 
REG_ECX


	)

65 
	mREG_EAX
,

66 
	#REG_EAX
 
REG_EAX


	)

67 
	mREG_TRAPNO
,

68 
	#REG_TRAPNO
 
REG_TRAPNO


	)

69 
	mREG_ERR
,

70 
	#REG_ERR
 
REG_ERR


	)

71 
	mREG_EIP
,

72 
	#REG_EIP
 
REG_EIP


	)

73 
	mREG_CS
,

74 
	#REG_CS
 
REG_CS


	)

75 
	mREG_EFL
,

76 
	#REG_EFL
 
REG_EFL


	)

77 
	mREG_UESP
,

78 
	#REG_UESP
 
REG_UESP


	)

79 
	mREG_SS


80 
	#REG_SS
 
REG_SS


	)

85 
	s_libc_Âªg


87 
	msignifiˇnd
[4];

88 
	mexp⁄ít
;

91 
	s_libc_Â°©e


93 
	mcw
;

94 
	msw
;

95 
	mèg
;

96 
	mùoff
;

97 
	mcs£l
;

98 
	md©aoff
;

99 
	md©a£l
;

100 
_libc_Âªg
 
	m_°
[8];

101 
	m°©us
;

105 
_libc_Â°©e
 *
	tÂªg£t_t
;

110 
gªg£t_t
 
	mgªgs
;

113 
Âªg£t_t
 
	mÂªgs
;

114 
	mﬁdmask
;

115 
	m¸2
;

116 } 
	tmc⁄ãxt_t
;

119 
	suc⁄ãxt


121 
	muc_Êags
;

122 
uc⁄ãxt
 *
	muc_lök
;

123 
°ack_t
 
	muc_°ack
;

124 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

125 
__sig£t_t
 
	muc_sigmask
;

126 
_libc_Â°©e
 
	m__Âªgs_mem
;

127 } 
	tuc⁄ãxt_t
;

	@
1
.
1
/usr/include
149
3901
cmds/fsdb.c
cmds/mkfs.c
kern/ux_alloc.c
kern/ux_dir.c
kern/ux_file.c
kern/ux_fs.h
kern/ux_inode.c
/usr/include/fcntl.h
/usr/include/linux/fs.h
/usr/include/linux/init.h
/usr/include/linux/locks.h
/usr/include/linux/mm.h
/usr/include/linux/module.h
/usr/include/linux/sched.h
/usr/include/linux/slab.h
/usr/include/linux/smp_lock.h
/usr/include/linux/string.h
/usr/include/stdio.h
/usr/include/sys/stat.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/asm/mmu.h
/usr/include/asm/page.h
/usr/include/asm/param.h
/usr/include/asm/processor.h
/usr/include/asm/ptrace.h
/usr/include/asm/semaphore.h
/usr/include/asm/string.h
/usr/include/asm/system.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/fcntl.h
/usr/include/bits/posix_opt.h
/usr/include/bits/stat.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/binfmts.h
/usr/include/linux/cache.h
/usr/include/linux/config.h
/usr/include/linux/dcache.h
/usr/include/linux/errno.h
/usr/include/linux/fs_struct.h
/usr/include/linux/ioctl.h
/usr/include/linux/kdev_t.h
/usr/include/linux/kernel.h
/usr/include/linux/limits.h
/usr/include/linux/linkage.h
/usr/include/linux/list.h
/usr/include/linux/modversions.h
/usr/include/linux/net.h
/usr/include/linux/pagemap.h
/usr/include/linux/param.h
/usr/include/linux/resource.h
/usr/include/linux/securebits.h
/usr/include/linux/sem.h
/usr/include/linux/signal.h
/usr/include/linux/smp.h
/usr/include/linux/stat.h
/usr/include/linux/stddef.h
/usr/include/linux/threads.h
/usr/include/linux/time.h
/usr/include/linux/timer.h
/usr/include/linux/times.h
/usr/include/linux/timex.h
/usr/include/linux/tty.h
/usr/include/linux/types.h
/usr/include/linux/version.h
/usr/include/linux/vfs.h
/usr/include/linux/wait.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/cache.h
/usr/include/asm/cpufeature.h
/usr/include/asm/errno.h
/usr/include/asm/ioctl.h
/usr/include/asm/math_emu.h
/usr/include/asm/pgtable.h
/usr/include/asm/resource.h
/usr/include/asm/segment.h
/usr/include/asm/sembuf.h
/usr/include/asm/sigcontext.h
/usr/include/asm/siginfo.h
/usr/include/asm/signal.h
/usr/include/asm/smp.h
/usr/include/asm/statfs.h
/usr/include/asm/timex.h
/usr/include/asm/types.h
/usr/include/asm/vm86.h
/usr/include/bits/endian.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/select.h
/usr/include/bits/sigset.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/linux/bitops.h
/usr/include/linux/capability.h
/usr/include/linux/highmem.h
/usr/include/linux/ipc.h
/usr/include/linux/posix_types.h
/usr/include/linux/prefetch.h
/usr/include/linux/ptrace.h
/usr/include/linux/socket.h
/usr/include/linux/spinlock.h
/usr/include/sys/cdefs.h
/usr/include/asm/apic.h
/usr/include/asm/bitops.h
/usr/include/asm/highmem.h
/usr/include/asm/ipcbuf.h
/usr/include/asm/mpspec.h
/usr/include/asm/pgalloc.h
/usr/include/asm/pgtable-2level.h
/usr/include/asm/pgtable-3level.h
/usr/include/asm/posix_types.h
/usr/include/asm/socket.h
/usr/include/bits/libc-lock.h
/usr/include/bits/sched.h
/usr/include/gconv.h
/usr/include/linux/sockios.h
/usr/include/linux/uio.h
/usr/include/wchar.h
/usr/include/asm/apicdef.h
/usr/include/asm/sockios.h
/usr/include/bits/wchar.h
/usr/include/linux/pm.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/initspin.h
/usr/include/bits/sigthread.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/ucontext.h
/usr/include/sys/ucontext.h
